<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.1"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>214502</bug_id>
          
          <creation_ts>2008-01-07 11:24:00 -0500</creation_ts>
          <short_desc>[ErrorHandling] [Status Handling] test bed should be removed from org.eclipse.ui.tests</short_desc>
          <delta_ts>2008-02-07 05:13:37 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>Platform</product>
          <component>UI</component>
          <version>3.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>contributed</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.4 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Krzysztof Daniel">krzysztof.daniel</reporter>
          <assigned_to name="Krzysztof Daniel">krzysztof.daniel</assigned_to>
          <cc>krzysztof.daniel</cc>
    
    <cc>Szymon.Brandys</cc>
    
    <cc>Tod_Creasey</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1126674</commentid>
    <comment_count>0</comment_count>
    <who name="Krzysztof Daniel">krzysztof.daniel</who>
    <bug_when>2008-01-07 11:24:38 -0500</bug_when>
    <thetext>since in bug 204106 it has been moved to another location, there is no point in keeping it in both places.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1126676</commentid>
    <comment_count>1</comment_count>
      <attachid>86323</attachid>
    <who name="Krzysztof Daniel">krzysztof.daniel</who>
    <bug_when>2008-01-07 11:25:36 -0500</bug_when>
    <thetext>Created attachment 86323
Patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1126775</commentid>
    <comment_count>2</comment_count>
    <who name="Krzysztof Daniel">krzysztof.daniel</who>
    <bug_when>2008-01-07 12:54:15 -0500</bug_when>
    <thetext>Tod, could you please reassign this to me?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129542</commentid>
    <comment_count>3</comment_count>
    <who name="Szymon Brandys">Szymon.Brandys</who>
    <bug_when>2008-01-11 06:17:00 -0500</bug_when>
    <thetext>Thanks Krzysztof for the patch. However plugin.xml needs some changes too. Could you update the patch?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129550</commentid>
    <comment_count>4</comment_count>
      <attachid>86663</attachid>
    <who name="Krzysztof Daniel">krzysztof.daniel</who>
    <bug_when>2008-01-11 06:50:33 -0500</bug_when>
    <thetext>Created attachment 86663
Patch with modified plugin xml

I have decided to leave three actions undeleted which seems to test a little bit more than status handling:
NullPointerException action,
OutOfMemoryAction
FaultyExportWizard</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129558</commentid>
    <comment_count>5</comment_count>
    <who name="Szymon Brandys">Szymon.Brandys</who>
    <bug_when>2008-01-11 07:12:11 -0500</bug_when>
    <thetext>When the patch is applied you can notice that plugin.xml still uses just removed classes (see plugin.xml line 103).

NullPointerException, OutOfMemoryAction, FaultyExportWizard should be removed as well as the whole Status Hanlding Test Bed folder.

</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129571</commentid>
    <comment_count>6</comment_count>
      <attachid>86666</attachid>
    <who name="Krzysztof Daniel">krzysztof.daniel</who>
    <bug_when>2008-01-11 07:53:19 -0500</bug_when>
    <thetext>Created attachment 86666
removing invalid class references  from testtool plugin.xml</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129637</commentid>
    <comment_count>7</comment_count>
    <who name="Szymon Brandys">Szymon.Brandys</who>
    <bug_when>2008-01-11 09:55:24 -0500</bug_when>
    <thetext>Fix released to HEAD.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1151081</commentid>
    <comment_count>8</comment_count>
    <who name="Tod Creasey">Tod_Creasey</who>
    <bug_when>2008-02-06 12:24:07 -0500</bug_when>
    <thetext>Krystof could you verify this please?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1151089</commentid>
    <comment_count>9</comment_count>
    <who name="Tod Creasey">Tod_Creasey</who>
    <bug_when>2008-02-06 12:26:24 -0500</bug_when>
    <thetext>Krystof could you verify this please?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1151709</commentid>
    <comment_count>10</comment_count>
    <who name="Krzysztof Daniel">krzysztof.daniel</who>
    <bug_when>2008-02-07 03:36:07 -0500</bug_when>
    <thetext>Code inspection:
there is no Status Handling Test Bed folder in the org.eclipse.ui.tests anymore.
Status Generator does not appear in the list of available views.

verified.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>86323</attachid>
            <date>2008-01-07 11:25:00 -0500</date>
            <delta_ts>2008-01-07 11:25:36 -0500</delta_ts>
            <desc>Patch</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>71802</size>
            <attacher name="Krzysztof Daniel">krzysztof.daniel</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UudWkudGVzdHMN
CkluZGV4OiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3Rh
dHVzaGFuZGxlcnMvdmlld3MvUGFydEluaXRFeGNlcHRpb25WaWV3LmphdmENCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
ClJDUyBmaWxlOiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMv
c3RhdHVzaGFuZGxlcnMvdmlld3MvUGFydEluaXRFeGNlcHRpb25WaWV3LmphdmENCmRpZmYgLU4g
U3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRs
ZXJzL3ZpZXdzL1BhcnRJbml0RXhjZXB0aW9uVmlldy5qYXZhDQotLS0gU3RhdHVzIEhhbmRsaW5n
IFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1BhcnRJ
bml0RXhjZXB0aW9uVmlldy5qYXZhCTExIEFwciAyMDA3IDE1OjA5OjM3IC0wMDAwCTEuMg0KKysr
IC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpAQCAtMSwzNyArMCwwIEBADQot
LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMDcgSUJN
IENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQotICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBw
cm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KLSAqIGFyZSBtYWRlIGF2YWls
YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0K
LSAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxl
IGF0DQotICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwNCi0gKg0K
LSAqIENvbnRyaWJ1dG9yczoNCi0gKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkg
YW5kIGltcGxlbWVudGF0aW9uDQotICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQotcGFja2FnZSBv
cmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGVycy52aWV3czsNCi0NCi1pbXBvcnQgb3Jn
LmVjbGlwc2Uuc3d0LndpZGdldHMuQ29tcG9zaXRlOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5J
TWVtZW50bzsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVZpZXdTaXRlOw0KLWltcG9ydCBvcmcu
ZWNsaXBzZS51aS5QYXJ0SW5pdEV4Y2VwdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkucGFy
dC5WaWV3UGFydDsNCi0NCi0vKioNCi0gKiBBIHNhbXBsZSB2aWV3IHRocm93aW5nIGEgUGFydElu
aXRFeGNlcHRpb24gaW5pdGlhbGl6YXRpb24uDQotICovDQotcHVibGljIGNsYXNzIFBhcnRJbml0
RXhjZXB0aW9uVmlldyBleHRlbmRzIFZpZXdQYXJ0IHsNCi0NCi0JcHVibGljIHZvaWQgaW5pdChJ
Vmlld1NpdGUgc2l0ZSwgSU1lbWVudG8gbWVtZW50bykgdGhyb3dzIFBhcnRJbml0RXhjZXB0aW9u
IHsNCi0JCXRocm93IG5ldyBQYXJ0SW5pdEV4Y2VwdGlvbigNCi0JCQkJIkEgc2FtcGxlIFBhcnRJ
bml0RXhjZXB0aW9uIHRocm93biBkdXJpbmcgdmlld3BhcnQgaW5pdGlhbGl6YXRpb24uIik7DQot
CX0NCi0NCi0JcHVibGljIHZvaWQgY3JlYXRlUGFydENvbnRyb2woQ29tcG9zaXRlIHBhcmVudCkg
ew0KLQ0KLQl9DQotDQotCXB1YmxpYyB2b2lkIHNldEZvY3VzKCkgew0KLQ0KLQl9DQotDQotfQ0K
SW5kZXg6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0
dXNoYW5kbGVycy92aWV3cy9SdW50aW1lRXhjZXB0aW9uVmlldy5qYXZhDQo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpS
Q1MgZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0
YXR1c2hhbmRsZXJzL3ZpZXdzL1J1bnRpbWVFeGNlcHRpb25WaWV3LmphdmENCmRpZmYgLU4gU3Rh
dHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJz
L3ZpZXdzL1J1bnRpbWVFeGNlcHRpb25WaWV3LmphdmENCi0tLSBTdGF0dXMgSGFuZGxpbmcgVGVz
dCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3MvUnVudGltZUV4
Y2VwdGlvblZpZXcuamF2YQkxMSBBcHIgMjAwNyAxNTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2
L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEsMzAgKzAsMCBAQA0KLS8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0K
LSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBD
b250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVj
bGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMudmlld3M7DQotDQotaW1wb3J0IG9yZy5lY2xp
cHNlLnN3dC53aWRnZXRzLkNvbXBvc2l0ZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkucGFydC5W
aWV3UGFydDsNCi0NCi0vKioNCi0gKiBBIHZpZXcgdGhyb3dpbmcgUnVudGltZUV4Y2VwdGlvbiBk
dXJpbmcgY29udHJvbCBjcmVhdGlvbi4NCi0gKi8NCi1wdWJsaWMgY2xhc3MgUnVudGltZUV4Y2Vw
dGlvblZpZXcgZXh0ZW5kcyBWaWV3UGFydCB7DQotDQotCXB1YmxpYyB2b2lkIGNyZWF0ZVBhcnRD
b250cm9sKENvbXBvc2l0ZSBwYXJlbnQpIHsNCi0JCXRocm93IG5ldyBSdW50aW1lRXhjZXB0aW9u
KA0KLQkJCQkiQSBzYW1wbGUgUnVudGltZUV4Y2VwdGlvbiB0aHJvd24gZHVyaW5nIGNvbnRyb2wg
Y3JlYXRpb24uIik7DQotCX0NCi0NCi0JcHVibGljIHZvaWQgc2V0Rm9jdXMoKSB7DQotDQotCX0N
Ci0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rl
c3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1J1bnRpbWVFeGNlcHRpb25FZGl0b3IuamF2YQ0KPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQ0KUkNTIGZpbGU6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91
aS90ZXN0cy9zdGF0dXNoYW5kbGVycy92aWV3cy9SdW50aW1lRXhjZXB0aW9uRWRpdG9yLmphdmEN
CmRpZmYgLU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0
YXR1c2hhbmRsZXJzL3ZpZXdzL1J1bnRpbWVFeGNlcHRpb25FZGl0b3IuamF2YQ0KLS0tIFN0YXR1
cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy92
aWV3cy9SdW50aW1lRXhjZXB0aW9uRWRpdG9yLmphdmEJMTEgQXByIDIwMDcgMTU6MDk6MzcgLTAw
MDAJMS4yDQorKysgL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0xLDU5
ICswLDAgQEANCi0vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAw
NSwgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJl
IG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGlj
ZW5zZSB2MS4wDQotICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBp
cyBhdmFpbGFibGUgYXQNCi0gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAu
aHRtbA0KLSAqDQotICogQ29udHJpYnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBp
bml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8N
Ci1wYWNrYWdlIG9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLnZpZXdzOw0KLQ0K
LWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9uaXRvcjsNCi1pbXBv
cnQgb3JnLmVjbGlwc2Uuc3d0LndpZGdldHMuQ29tcG9zaXRlOw0KLWltcG9ydCBvcmcuZWNsaXBz
ZS51aS5JRWRpdG9ySW5wdXQ7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLklFZGl0b3JTaXRlOw0K
LWltcG9ydCBvcmcuZWNsaXBzZS51aS5wYXJ0LkVkaXRvclBhcnQ7DQotDQotLyoqDQotICogDQot
ICovDQotcHVibGljIGNsYXNzIFJ1bnRpbWVFeGNlcHRpb25FZGl0b3IgZXh0ZW5kcyBFZGl0b3JQ
YXJ0IHsNCi0NCi0JcHVibGljIHZvaWQgZG9TYXZlKElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikg
ew0KLQ0KLQl9DQotDQotCXB1YmxpYyB2b2lkIGRvU2F2ZUFzKCkgew0KLQ0KLQl9DQotDQotCXB1
YmxpYyB2b2lkIGluaXQoSUVkaXRvclNpdGUgc2l0ZSwgSUVkaXRvcklucHV0IGlucHV0KSB7DQot
DQotCX0NCi0NCi0JcHVibGljIGJvb2xlYW4gaXNEaXJ0eSgpIHsNCi0NCi0JCXJldHVybiBmYWxz
ZTsNCi0JfQ0KLQ0KLQlwdWJsaWMgYm9vbGVhbiBpc1NhdmVBc0FsbG93ZWQoKSB7DQotDQotCQly
ZXR1cm4gZmFsc2U7DQotCX0NCi0NCi0JcHVibGljIHZvaWQgY3JlYXRlUGFydENvbnRyb2woQ29t
cG9zaXRlIHBhcmVudCkgew0KLQ0KLQl9DQotDQotCXB1YmxpYyB2b2lkIHNldEZvY3VzKCkgew0K
LQ0KLQl9DQotDQotCXB1YmxpYyBJRWRpdG9yU2l0ZSBnZXRFZGl0b3JTaXRlKCkgew0KLQkJdGhy
b3cgbmV3IFJ1bnRpbWVFeGNlcHRpb24oDQotCQkJCSJBIHNhbXBsZSBSdW50aW1lRXhjZXB0aW9u
IHRocm93biBkdXJpbmcgZWRpdG9yIHNpdGUgcmV0cmlldmFsLiIpOw0KLQl9DQotDQotfQ0KSW5k
ZXg6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNo
YW5kbGVycy92aWV3cy9TdGF0dXNIYW5kbGluZ1ZpZXcuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNo
YW5kbGVycy92aWV3cy9TdGF0dXNIYW5kbGluZ1ZpZXcuamF2YQ0KZGlmZiAtTiBTdGF0dXMgSGFu
ZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3Mv
U3RhdHVzSGFuZGxpbmdWaWV3LmphdmENCi0tLSBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3Jn
L2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3MvU3RhdHVzSGFuZGxpbmdWaWV3
LmphdmEJMTEgQXByIDIwMDcgMTU6MDk6MzcgLTAwMDAJMS4yDQorKysgL2Rldi9udWxsCTEgSmFu
IDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0xLDEwOTQgKzAsMCBAQA0KLS8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBDb250cmlidXRv
cnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWku
dGVzdHMuc3RhdHVzaGFuZGxlcnMudmlld3M7DQotDQotaW1wb3J0IGphdmEubGFuZy5yZWZsZWN0
Lkludm9jYXRpb25UYXJnZXRFeGNlcHRpb247DQotaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7
DQotaW1wb3J0IGphdmEudXRpbC5Db2xsZWN0aW9uczsNCi1pbXBvcnQgamF2YS51dGlsLkl0ZXJh
dG9yOw0KLWltcG9ydCBqYXZhLnV0aWwuTGlzdDsNCi0NCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29y
ZS5yZXNvdXJjZXMuSVdvcmtzcGFjZVJ1bm5hYmxlOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJlc291cmNlcy5SZXNvdXJjZXNQbHVnaW47DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVu
dGltZS5Db3JlRXhjZXB0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSUNv
bmZpZ3VyYXRpb25FbGVtZW50Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVBy
b2dyZXNzTW9uaXRvcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklTdGF0dXM7
DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5OdWxsUHJvZ3Jlc3NNb25pdG9yOw0K
LWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuUGxhdGZvcm07DQotaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5TdGF0dXM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVu
dGltZS5qb2JzLkpvYjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2UuZGlhbG9ncy5JRGlhbG9n
Q29uc3RhbnRzOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS5vcGVyYXRpb24uSVJ1bm5hYmxl
V2l0aFByb2dyZXNzOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS5yZXNvdXJjZS5JbWFnZURl
c2NyaXB0b3I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVN0cnVjdHVyZWRD
b250ZW50UHJvdmlkZXI7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuU3RydWN0
dXJlZFNlbGVjdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5UYWJsZVZp
ZXdlcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5WaWV3ZXI7DQotaW1wb3J0
IG9yZy5lY2xpcHNlLnN3dC5TV1Q7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC5jdXN0b20uU2Ny
b2xsZWRDb21wb3NpdGU7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC5ldmVudHMuU2VsZWN0aW9u
QWRhcHRlcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LmV2ZW50cy5TZWxlY3Rpb25FdmVudDsN
Ci1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LmxheW91dC5HcmlkRGF0YTsNCi1pbXBvcnQgb3JnLmVj
bGlwc2Uuc3d0LmxheW91dC5HcmlkTGF5b3V0Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lk
Z2V0cy5CdXR0b247DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC53aWRnZXRzLkNvbWJvOw0KLWlt
cG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5Db21wb3NpdGU7DQotaW1wb3J0IG9yZy5lY2xp
cHNlLnN3dC53aWRnZXRzLkxhYmVsOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5T
cGlubmVyOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5UZXh0Ow0KLWltcG9ydCBv
cmcuZWNsaXBzZS51aS5JRWRpdG9ySW5wdXQ7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLklQZXJz
aXN0YWJsZUVsZW1lbnQ7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLlBhcnRJbml0RXhjZXB0aW9u
Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5QbGF0Zm9ybVVJOw0KLWltcG9ydCBvcmcuZWNsaXBz
ZS51aS5hY3Rpb25zLldvcmtzcGFjZU1vZGlmeU9wZXJhdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlw
c2UudWkuaW50ZXJuYWwuV29ya2JlbmNoUGx1Z2luOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5p
bnRlcm5hbC5yZWdpc3RyeS5SZWdpc3RyeVJlYWRlcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWku
cGFydC5WaWV3UGFydDsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkucHJvZ3Jlc3MuSVByb2dyZXNz
U2VydmljZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuc3RhdHVzaGFuZGxlcnMuU3RhdHVzTWFu
YWdlcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMuam9icy5U
ZXN0Sm9iOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGVycy5qb2Jz
LlVJVGVzdEpvYjsNCi0NCi0vKioNCi0gKiBBIHZpZXcgZGVkaWNhdGVkIHRvIGdlbmVyYXRpbmcg
c3RhdHVzIChlcnJvci4NCi0gKi8NCi1wdWJsaWMgY2xhc3MgU3RhdHVzSGFuZGxpbmdWaWV3IGV4
dGVuZHMgVmlld1BhcnQgew0KLQ0KLQlwcml2YXRlIENvbWJvIGR1cmF0aW9uRmllbGQsIGV4Y2Vw
dGlvbkZpZWxkLCBzdGF0dXNTZXZlcml0eUZpZWxkOw0KLQ0KLQlwcml2YXRlIFNwaW5uZXIgcGVy
Y2VudDsNCi0NCi0JcHJpdmF0ZSBUZXh0IGRlbGF5RmllbGQsIHF1YW50aXR5RmllbGQsIHJlc2No
ZWR1bGVEZWxheSwgc3RhdHVzUGx1Z2luSUQ7DQotDQotCXByaXZhdGUgQnV0dG9uIHByb2dyZXNz
Tm9Gb3JrTG9ja0ZpZWxkLCB0aHJlYWRGaWVsZCwgam9iTG9ja0ZpZWxkLA0KLQkJCXN5c3RlbUZp
ZWxkLCB1c2VyRmllbGQsIGdyb3VwRmllbGQsIHJlc2NoZWR1bGVGaWVsZCwNCi0JCQlyZXR1cm5F
cnJvclN0YXR1cywgc2hvd1N0YXR1c0ZpZWxkLCBsb2dTdGF0dXNGaWVsZDsNCi0NCi0JcHJpdmF0
ZSBUYWJsZVZpZXdlciBzdGF0dXNUYWJsZVZpZXZlcjsNCi0NCi0JcHJpdmF0ZSBDb250ZW50UHJv
dmlkZXIgY29udGVudFByb3ZpZGVyOw0KLQ0KLQlwcml2YXRlIExpc3Qgc3RhdHVzSXRlbXMgPSBD
b2xsZWN0aW9ucy5zeW5jaHJvbml6ZWRMaXN0KG5ldyBBcnJheUxpc3QoKSk7DQotDQotCXByaXZh
dGUgaW50IHN0YXR1c05vOw0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAqIA0KLQkg
KiBAc2VlIG9yZy5lY2xpcHNlLnVpLnBhcnQuV29ya2JlbmNoUGFydCNjcmVhdGVQYXJ0Q29udHJv
bChvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5Db21wb3NpdGUpDQotCSAqLw0KLQlwdWJsaWMgdm9p
ZCBjcmVhdGVQYXJ0Q29udHJvbChDb21wb3NpdGUgcGFyZW50KSB7DQotDQotCQlTY3JvbGxlZENv
bXBvc2l0ZSBzY3JvbGxlciA9IG5ldyBTY3JvbGxlZENvbXBvc2l0ZShwYXJlbnQsIFNXVC5IX1ND
Uk9MTA0KLQkJCQl8IFNXVC5WX1NDUk9MTCk7DQotDQotCQlDb21wb3NpdGUgYm9keSA9IG5ldyBD
b21wb3NpdGUoc2Nyb2xsZXIsIFNXVC5OT05FKTsNCi0JCUdyaWRMYXlvdXQgbGF5b3V0ID0gbmV3
IEdyaWRMYXlvdXQoKTsNCi0JCWJvZHkuc2V0TGF5b3V0KGxheW91dCk7DQotCQlHcmlkRGF0YSBn
ZCA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0JPVEgpOw0KLQkJYm9keS5zZXRMYXlvdXRE
YXRhKGdkKTsNCi0NCi0JCUNvbXBvc2l0ZSBqb2JzQW5kUnVubmFibGVzID0gbmV3IENvbXBvc2l0
ZShib2R5LCBTV1QuQk9SREVSKTsNCi0JCWxheW91dCA9IG5ldyBHcmlkTGF5b3V0KCk7DQotCQls
YXlvdXQubnVtQ29sdW1ucyA9IDI7DQotCQlsYXlvdXQubWFrZUNvbHVtbnNFcXVhbFdpZHRoID0g
dHJ1ZTsNCi0JCWpvYnNBbmRSdW5uYWJsZXMuc2V0TGF5b3V0KGxheW91dCk7DQotCQlnZCA9IG5l
dyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJam9ic0FuZFJ1bm5hYmxl
cy5zZXRMYXlvdXREYXRhKGdkKTsNCi0NCi0JCWNyZWF0ZUVudHJ5RmllbGRHcm91cChqb2JzQW5k
UnVubmFibGVzKTsNCi0JCWNyZWF0ZUpvYkFuZFJ1bm5hYmxlU3BlY2lmaWNHcm91cHMoam9ic0Fu
ZFJ1bm5hYmxlcyk7DQotDQotCQlDb21wb3NpdGUgdmlld3MgPSBuZXcgQ29tcG9zaXRlKGJvZHks
IFNXVC5CT1JERVIpOw0KLQkJbGF5b3V0ID0gbmV3IEdyaWRMYXlvdXQoKTsNCi0JCXZpZXdzLnNl
dExheW91dChsYXlvdXQpOw0KLQkJZ2QgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJ
Wk9OVEFMKTsNCi0JCXZpZXdzLnNldExheW91dERhdGEoZ2QpOw0KLQ0KLQkJY3JlYXRlU2hvd1Zp
ZXdzR3JvdXAodmlld3MpOw0KLQ0KLQkJQ29tcG9zaXRlIGludmFsaWRFeHRlbnNpb25zID0gbmV3
IENvbXBvc2l0ZShib2R5LCBTV1QuQk9SREVSKTsNCi0JCWxheW91dCA9IG5ldyBHcmlkTGF5b3V0
KCk7DQotCQlpbnZhbGlkRXh0ZW5zaW9ucy5zZXRMYXlvdXQobGF5b3V0KTsNCi0JCWdkID0gbmV3
IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlpbnZhbGlkRXh0ZW5zaW9u
cy5zZXRMYXlvdXREYXRhKGdkKTsNCi0NCi0JCWNyZWF0ZUludmFsaWRFeHRHcm91cChpbnZhbGlk
RXh0ZW5zaW9ucyk7DQotDQotCQlDb21wb3NpdGUgZ2VuZXJhdGVTdGF0dXNUb0JlU2hvd24gPSBu
ZXcgQ29tcG9zaXRlKGJvZHksIFNXVC5CT1JERVIpOw0KLQkJbGF5b3V0ID0gbmV3IEdyaWRMYXlv
dXQoKTsNCi0JCWdlbmVyYXRlU3RhdHVzVG9CZVNob3duLnNldExheW91dChsYXlvdXQpOw0KLQkJ
Z2QgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCWdlbmVyYXRl
U3RhdHVzVG9CZVNob3duLnNldExheW91dERhdGEoZ2QpOw0KLQ0KLQkJY3JlYXRlU2hvd1N0YXR1
c1RvQmVTaG93R3JvdXAoZ2VuZXJhdGVTdGF0dXNUb0JlU2hvd24pOw0KLQ0KLQkJc2Nyb2xsZXIu
c2V0Q29udGVudChib2R5KTsNCi0JCXNjcm9sbGVyLnNldE1pblNpemUoYm9keS5jb21wdXRlU2l6
ZShTV1QuREVGQVVMVCwgU1dULkRFRkFVTFQpKTsNCi0JCXNjcm9sbGVyLnNldEV4cGFuZEhvcml6
b250YWwodHJ1ZSk7DQotCQlzY3JvbGxlci5zZXRFeHBhbmRWZXJ0aWNhbCh0cnVlKTsNCi0NCi0J
fQ0KLQ0KLQkvKioNCi0JICogQ3JlYXRlcyBnbG9iYWwgZW50cnkgZ3JvdXAuDQotCSAqIA0KLQkg
KiBAcGFyYW0gYm9keQ0KLQkgKiAgICAgICAgICAgIHBhcmVudA0KLQkgKi8NCi0JcHJpdmF0ZSB2
b2lkIGNyZWF0ZUVudHJ5RmllbGRHcm91cChDb21wb3NpdGUgYm9keSkgew0KLQkJLy8gZHVyYXRp
b24NCi0JCUxhYmVsIGxhYmVsID0gbmV3IExhYmVsKGJvZHksIFNXVC5OT05FKTsNCi0JCWxhYmVs
LnNldFRleHQoIkR1cmF0aW9uOiIpOyAvLyROT04tTkxTLTEkDQotCQlkdXJhdGlvbkZpZWxkID0g
bmV3IENvbWJvKGJvZHksIFNXVC5EUk9QX0RPV04gfCBTV1QuUkVBRF9PTkxZKTsNCi0JCUdyaWRE
YXRhIGRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCWRh
dGEud2lkdGhIaW50ID0gSURpYWxvZ0NvbnN0YW50cy5FTlRSWV9GSUVMRF9XSURUSDsNCi0JCWR1
cmF0aW9uRmllbGQuc2V0TGF5b3V0RGF0YShkYXRhKTsNCi0JCWR1cmF0aW9uRmllbGQuc2V0VG9v
bFRpcFRleHQoIkR1cmF0aW9uIG9mIHRoZSBqb2IvcnVubmFibGUiKTsNCi0JCWR1cmF0aW9uRmll
bGQuYWRkKCIwIik7IC8vJE5PTi1OTFMtMSQNCi0JCWR1cmF0aW9uRmllbGQuYWRkKCIxIG1pbGxp
c2Vjb25kIik7IC8vJE5PTi1OTFMtMSQNCi0JCWR1cmF0aW9uRmllbGQuYWRkKCIxIHNlY29uZCIp
OyAvLyROT04tTkxTLTEkDQotCQlkdXJhdGlvbkZpZWxkLmFkZCgiMTAgc2Vjb25kcyIpOyAvLyRO
T04tTkxTLTEkDQotCQlkdXJhdGlvbkZpZWxkLmFkZCgiMSBtaW51dGUiKTsgLy8kTk9OLU5MUy0x
JA0KLQkJZHVyYXRpb25GaWVsZC5hZGQoIjEwIG1pbnV0ZXMiKTsgLy8kTk9OLU5MUy0xJA0KLQkJ
ZHVyYXRpb25GaWVsZC5zZWxlY3QoMyk7DQotDQotCQlsYWJlbCA9IG5ldyBMYWJlbChib2R5LCBT
V1QuTk9ORSk7DQotCQlsYWJlbC5zZXRUZXh0KCJUaHJvdyBleGNlcHRpb24gYWZ0ZXIgKCUgb2Yg
ZHVyYXRpb24pOiIpOyAvLyROT04tTkxTLTEkDQotCQlwZXJjZW50ID0gbmV3IFNwaW5uZXIoYm9k
eSwgU1dULkJPUkRFUik7DQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9S
SVpPTlRBTCk7DQotCQlkYXRhLndpZHRoSGludCA9IElEaWFsb2dDb25zdGFudHMuRU5UUllfRklF
TERfV0lEVEg7DQotCQlwZXJjZW50LnNldExheW91dERhdGEoZGF0YSk7DQotCQlwZXJjZW50DQot
CQkJCS5zZXRUb29sVGlwVGV4dCgiRXhjZXB0aW9uL0Vycm9yIHdpbGwgYmUgdGhyb3duIGFmdGVy
IHBlcmNlbnQqZHVyYXRpb24iKTsNCi0JCXBlcmNlbnQuc2V0TWluaW11bSgxKTsNCi0JCXBlcmNl
bnQuc2V0TWF4aW11bSgxMDApOw0KLQkJcGVyY2VudC5zZXRTZWxlY3Rpb24oNTApOw0KLQ0KLQkJ
bGFiZWwgPSBuZXcgTGFiZWwoYm9keSwgU1dULk5PTkUpOw0KLQkJbGFiZWwuc2V0VGV4dCgiRXhj
ZXB0aW9uOiIpOyAvLyROT04tTkxTLTEkDQotCQlleGNlcHRpb25GaWVsZCA9IG5ldyBDb21ibyhi
b2R5LCBTV1QuRFJPUF9ET1dOIHwgU1dULlJFQURfT05MWSk7DQotCQlkYXRhID0gbmV3IEdyaWRE
YXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlkYXRhLndpZHRoSGludCA9IElEaWFs
b2dDb25zdGFudHMuRU5UUllfRklFTERfV0lEVEg7DQotCQlleGNlcHRpb25GaWVsZC5zZXRMYXlv
dXREYXRhKGRhdGEpOw0KLQkJZXhjZXB0aW9uRmllbGQNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJF
eGNlcHRpb24vRXJyb3IgdG8gYmUgdGhyb3duIGZyb20gdGhlIGpvYi9ydW5uYWJsZSIpOw0KLQkJ
ZXhjZXB0aW9uRmllbGQuYWRkKCJOdWxsUG9pbnRlckV4Y2VwdGlvbiIpOyAvLyROT04tTkxTLTEk
DQotCQlleGNlcHRpb25GaWVsZC5hZGQoIk91dE9mTWVtb3J5RXJyb3IiKTsgLy8kTk9OLU5MUy0x
JA0KLQkJZXhjZXB0aW9uRmllbGQuYWRkKCJJbmRleE91dE9mQm91bmRzRXhjZXB0aW9uIik7Ly8k
Tk9OLU5MUy0xJA0KLQkJZXhjZXB0aW9uRmllbGQuc2VsZWN0KDApOw0KLQ0KLQl9DQotDQotCS8q
Kg0KLQkgKiBDcmVhdGVzIGdyb3VwcyBmb3IgcnVuIGluIFVJIC8gcnVuIGluIHVzZXIgdGhyZWFk
IGFuZCBydW4gam9iIGFjdGlvbnMuDQotCSAqIA0KLQkgKiBAcGFyYW0gcGFyZW50DQotCSAqLw0K
LQlwcml2YXRlIHZvaWQgY3JlYXRlSm9iQW5kUnVubmFibGVTcGVjaWZpY0dyb3VwcyhDb21wb3Np
dGUgcGFyZW50KSB7DQotDQotCQlDb21wb3NpdGUgZ3JvdXAgPSBuZXcgQ29tcG9zaXRlKHBhcmVu
dCwgU1dULk5PTkUpOw0KLQkJR3JpZExheW91dCBsYXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0K
LQkJbGF5b3V0Lm51bUNvbHVtbnMgPSAxOw0KLQkJZ3JvdXAuc2V0TGF5b3V0KGxheW91dCk7DQot
CQlHcmlkRGF0YSBnZCA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0JPVEgpOw0KLQkJZ2Qu
aG9yaXpvbnRhbFNwYW4gPSAyOw0KLQkJZ3JvdXAuc2V0TGF5b3V0RGF0YShnZCk7DQotDQotCQlj
cmVhdGVSdW5JblVJR3JvdXAoZ3JvdXApOw0KLQkJY3JlYXRlUnVuSW5Vc2VySW50ZXJmYWNlVGhy
ZWFkKGdyb3VwKTsNCi0JCWNyZWF0ZVJ1bkpvYihncm91cCk7DQotDQotCX0NCi0NCi0JcHJpdmF0
ZSB2b2lkIGNyZWF0ZVJ1bkluVUlHcm91cChDb21wb3NpdGUgcGFyZW50KSB7DQotCQlDb21wb3Np
dGUgZ3JvdXAgPSBuZXcgQ29tcG9zaXRlKHBhcmVudCwgU1dULkJPUkRFUik7DQotCQlHcmlkTGF5
b3V0IGxheW91dCA9IG5ldyBHcmlkTGF5b3V0KCk7DQotCQlsYXlvdXQubnVtQ29sdW1ucyA9IDI7
DQotCQlsYXlvdXQubWFrZUNvbHVtbnNFcXVhbFdpZHRoID0gdHJ1ZTsNCi0JCWdyb3VwLnNldExh
eW91dChsYXlvdXQpOw0KLQkJZ3JvdXAuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERh
dGEuRklMTF9IT1JJWk9OVEFMKSk7DQotDQotCQlCdXR0b24gbm9Gb3JrID0gbmV3IEJ1dHRvbihn
cm91cCwgU1dULlBVU0gpOw0KLQkJbm9Gb3JrLnNldFRleHQoIlJ1biBJbiBVSSB0aHJlYWQgKGRv
ZXMgbm90IGZvcmspIik7IC8vJE5PTi1OTFMtMSQNCi0JCW5vRm9yay5zZXRUb29sVGlwVGV4dCgi
VXNlIElQcm9ncmVzc1NlcnZpY2UucnVuSW5VSSguLi4pIik7IC8vJE5PTi1OTFMtMSQNCi0JCW5v
Rm9yay5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwp
KTsNCi0JCW5vRm9yay5hZGRTZWxlY3Rpb25MaXN0ZW5lcihuZXcgU2VsZWN0aW9uQWRhcHRlcigp
IHsNCi0JCQlwdWJsaWMgdm9pZCB3aWRnZXRTZWxlY3RlZChTZWxlY3Rpb25FdmVudCBlKSB7DQot
CQkJCXByb2dyZXNzTm9Gb3JrKCk7DQotCQkJfQ0KLQkJfSk7DQotDQotCQlwcm9ncmVzc05vRm9y
a0xvY2tGaWVsZCA9IG5ldyBCdXR0b24oZ3JvdXAsIFNXVC5DSEVDSyk7DQotCQlwcm9ncmVzc05v
Rm9ya0xvY2tGaWVsZA0KLQkJCQkuc2V0VGV4dCgiTG9jayB0aGUgd29ya3NwYWNlIChydW4gaW4g
d29ya3NwYWNlKSIpOyAvLyROT04tTkxTLTEkDQotCQlHcmlkRGF0YSBkYXRhID0gbmV3IEdyaWRE
YXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlwcm9ncmVzc05vRm9ya0xvY2tGaWVs
ZC5zZXRMYXlvdXREYXRhKGRhdGEpOw0KLQkJcHJvZ3Jlc3NOb0ZvcmtMb2NrRmllbGQNCi0JCQkJ
LnNldFRvb2xUaXBUZXh0KCJVc2UgUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLnJ1bihu
ZXcgSVdvcmtzcGFjZVJ1bm5hYmxlKCl7Li4ufSkgaW5zaWRlIHRoZSBJUHJvZ3Jlc3NTZXJ2aWNl
LnJ1bkluVUkoLi4uKSIpOw0KLQ0KLQl9DQotDQotCXByaXZhdGUgdm9pZCBjcmVhdGVSdW5JblVz
ZXJJbnRlcmZhY2VUaHJlYWQoQ29tcG9zaXRlIHBhcmVudCkgew0KLQ0KLQkJQ29tcG9zaXRlIGdy
b3VwID0gbmV3IENvbXBvc2l0ZShwYXJlbnQsIFNXVC5CT1JERVIpOw0KLQkJR3JpZExheW91dCBs
YXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0KLQkJbGF5b3V0Lm51bUNvbHVtbnMgPSAyOw0KLQkJ
bGF5b3V0Lm1ha2VDb2x1bW5zRXF1YWxXaWR0aCA9IHRydWU7DQotCQlncm91cC5zZXRMYXlvdXQo
bGF5b3V0KTsNCi0JCWdyb3VwLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJ
TExfSE9SSVpPTlRBTCkpOw0KLQ0KLQkJQnV0dG9uIHdpbmRvdyA9IG5ldyBCdXR0b24oZ3JvdXAs
IFNXVC5QVVNIKTsNCi0JCXdpbmRvdy5zZXRUZXh0KCJSdW5uYWJsZSBpbiBXaW5kb3ciKTsgLy8k
Tk9OLU5MUy0xJA0KLQkJd2luZG93DQotCQkJCS5zZXRUb29sVGlwVGV4dCgiVXNlIFBsYXRmb3Jt
VUkuZ2V0V29ya2JlbmNoKCkuZ2V0QWN0aXZlV29ya2JlbmNoV2luZG93KCkucnVuKHRydWUsIHRy
dWUsIG5ldyBJUnVubmFibGVXaXRoUHJvZ3Jlc3MoKXsuLi59KSIpOyAvLyROT04tTkxTLTEkDQot
CQl3aW5kb3cuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9O
VEFMKSk7DQotCQl3aW5kb3cuYWRkU2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0
ZXIoKSB7DQotCQkJcHVibGljIHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkg
ew0KLQkJCQlydW5uYWJsZUluV2luZG93KCk7DQotCQkJfQ0KLQkJfSk7DQotCX0NCi0NCi0JLyoq
DQotCSAqIEBwYXJhbSBwYXJlbnQNCi0JICovDQotCXByaXZhdGUgdm9pZCBjcmVhdGVSdW5Kb2Io
Q29tcG9zaXRlIHBhcmVudCkgew0KLQkJQ29tcG9zaXRlIGdyb3VwID0gbmV3IENvbXBvc2l0ZShw
YXJlbnQsIFNXVC5CT1JERVIpOw0KLQkJR3JpZExheW91dCBsYXlvdXQgPSBuZXcgR3JpZExheW91
dCgpOw0KLQkJbGF5b3V0Lm51bUNvbHVtbnMgPSAyOw0KLQkJbGF5b3V0Lm1ha2VDb2x1bW5zRXF1
YWxXaWR0aCA9IHRydWU7DQotCQlncm91cC5zZXRMYXlvdXQobGF5b3V0KTsNCi0JCWdyb3VwLnNl
dExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQ0K
LQkJTGFiZWwgbGFiZWwgPSBuZXcgTGFiZWwoZ3JvdXAsIFNXVC5OT05FKTsNCi0JCWxhYmVsLnNl
dFRleHQoIlN0YXJ0IGRlbGF5IChtcyk6Iik7IC8vJE5PTi1OTFMtMSQNCi0JCWRlbGF5RmllbGQg
PSBuZXcgVGV4dChncm91cCwgU1dULkJPUkRFUik7DQotCQlHcmlkRGF0YSBkYXRhID0gbmV3IEdy
aWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlkYXRhLndpZHRoSGludCA9IElE
aWFsb2dDb25zdGFudHMuRU5UUllfRklFTERfV0lEVEg7DQotCQlkZWxheUZpZWxkLnNldExheW91
dERhdGEoZGF0YSk7DQotCQlkZWxheUZpZWxkLnNldFRvb2xUaXBUZXh0KCJEZWxheSB0byBzdGFy
dCB0aGUgam9iIik7DQotCQlkZWxheUZpZWxkLnNldFRleHQoIjAiKTsgLy8kTk9OLU5MUy0xJA0K
LQ0KLQkJbGFiZWwgPSBuZXcgTGFiZWwoZ3JvdXAsIFNXVC5OT05FKTsNCi0JCWxhYmVsLnNldFRl
eHQoIlF1YW50aXR5OiIpOyAvLyROT04tTkxTLTEkDQotCQlxdWFudGl0eUZpZWxkID0gbmV3IFRl
eHQoZ3JvdXAsIFNXVC5CT1JERVIpOw0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5G
SUxMX0hPUklaT05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQgPSBJRGlhbG9nQ29uc3RhbnRzLkVO
VFJZX0ZJRUxEX1dJRFRIOw0KLQkJcXVhbnRpdHlGaWVsZC5zZXRMYXlvdXREYXRhKGRhdGEpOw0K
LQkJcXVhbnRpdHlGaWVsZC5zZXRUb29sVGlwVGV4dCgiSG93IG1hbnkgam9icyBvdWdodCB0byBi
ZSBzdGFydGVkID8iKTsNCi0JCXF1YW50aXR5RmllbGQuc2V0VGV4dCgiMSIpOyAvLyROT04tTkxT
LTEkDQotDQotCQkvLyByZXNjaGVkdWxlIGRlbGF5DQotCQlsYWJlbCA9IG5ldyBMYWJlbChncm91
cCwgU1dULk5PTkUpOw0KLQkJbGFiZWwuc2V0VGV4dCgiUmVzY2hlZHVsZSBEZWxheSAobXMpOiIp
OyAvLyROT04tTkxTLTEkDQotCQlyZXNjaGVkdWxlRGVsYXkgPSBuZXcgVGV4dChncm91cCwgU1dU
LkJPUkRFUik7DQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRB
TCk7DQotCQlkYXRhLndpZHRoSGludCA9IElEaWFsb2dDb25zdGFudHMuRU5UUllfRklFTERfV0lE
VEg7DQotCQlyZXNjaGVkdWxlRGVsYXkuc2V0TGF5b3V0RGF0YShkYXRhKTsNCi0JCXJlc2NoZWR1
bGVEZWxheQ0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlJlc2NoZWR1bGUgYWZ0ZXIgLi4uIChzZWUg
dGhlIHJlc2NoZWR1bGUgY2hlY2tib3gpIik7DQotCQlyZXNjaGVkdWxlRGVsYXkuc2V0VGV4dCgi
MTAwMCIpOyAvLyROT04tTkxTLTEkDQotDQotCQkvLyB0aHJlYWQNCi0JCXRocmVhZEZpZWxkID0g
bmV3IEJ1dHRvbihncm91cCwgU1dULkNIRUNLKTsNCi0JCXRocmVhZEZpZWxkLnNldFRleHQoIlJ1
biBpbiBVSSB0aHJlYWQiKTsgLy8kTk9OLU5MUy0xJA0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShH
cmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJdGhyZWFkRmllbGQuc2V0TGF5b3V0RGF0YShk
YXRhKTsNCi0JCXRocmVhZEZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiVXNlIG9yZy5lY2xp
cHNlLnVpLnByb2dyZXNzLlVJSm9iIChpbnN0ZWFkIG9mIG9yZy5lY2xpcHNlLmNvcmUucnVudGlt
ZS5qb2JzLkpvYikiKTsNCi0NCi0JCS8vIGxvY2sNCi0JCWpvYkxvY2tGaWVsZCA9IG5ldyBCdXR0
b24oZ3JvdXAsIFNXVC5DSEVDSyk7DQotCQlqb2JMb2NrRmllbGQuc2V0VGV4dCgiTG9jayB0aGUg
d29ya3NwYWNlIik7IC8vJE5PTi1OTFMtMSQNCi0JCWRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERh
dGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCWpvYkxvY2tGaWVsZC5zZXRMYXlvdXREYXRhKGRhdGEp
Ow0KLQkJam9iTG9ja0ZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiUmVzZXJ2ZSBleGNsdXNp
dmUgYWNjZXNzIHRvIHdvcmtzcGFjZSAtIHNldFJ1bGUoUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtz
cGFjZSgpLmdldFJvb3QoKSkiKTsNCi0NCi0JCS8vIHN5c3RlbQ0KLQkJc3lzdGVtRmllbGQgPSBu
ZXcgQnV0dG9uKGdyb3VwLCBTV1QuQ0hFQ0spOw0KLQkJc3lzdGVtRmllbGQuc2V0VGV4dCgiU3lz
dGVtIGpvYiIpOyAvLyROT04tTkxTLTEkDQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdyaWREYXRh
LkZJTExfSE9SSVpPTlRBTCk7DQotCQlzeXN0ZW1GaWVsZC5zZXRMYXlvdXREYXRhKGRhdGEpOw0K
LQkJc3lzdGVtRmllbGQNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJEZWNpZGUgd2hldGhlciB0aGUg
am9iIGlzIGEgc3lzdGVtIGpvYiAvaXMgcHJlc2VudGVkIG9uIFVJLyIpOw0KLQ0KLQkJLy8gd2hl
dGhlciB0aGUgam9iIGlzIGEgdXNlciBqb2INCi0JCXVzZXJGaWVsZCA9IG5ldyBCdXR0b24oZ3Jv
dXAsIFNXVC5DSEVDSyk7DQotCQl1c2VyRmllbGQuc2V0VGV4dCgiVXNlciBqb2IiKTsgLy8kTk9O
LU5MUy0xJA0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwp
Ow0KLQkJdXNlckZpZWxkLnNldExheW91dERhdGEoZGF0YSk7DQotCQl1c2VyRmllbGQNCi0JCQkJ
LnNldFRvb2xUaXBUZXh0KCJEZWNpZGUgd2hldGhlciB0aGUgam9iIGlzIGluaXRpYXRlZCBkaXJl
Y3RseSBieSB0aGUgVUkgZW5kIHVzZXIiKTsNCi0NCi0JCS8vIGdyb3Vwcw0KLQkJZ3JvdXBGaWVs
ZCA9IG5ldyBCdXR0b24oZ3JvdXAsIFNXVC5DSEVDSyk7DQotCQlncm91cEZpZWxkLnNldFRleHQo
IlJ1biBpbiBHcm91cCIpOyAvLyROT04tTkxTLTEkDQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdy
aWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlncm91cEZpZWxkLnNldExheW91dERhdGEoZGF0
YSk7DQotCQlncm91cEZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiUnVuIGFsbCBvZiB0aGUg
am9icyBhcyBhIHNpbmdsZSBncm91cCAoaWYgdGhlcmUgaXMgbW9yZSB0aGFuIG9uZSBqb2IpIik7
DQotDQotCQkvLyByZXNjaGVkdWxlDQotCQlyZXNjaGVkdWxlRmllbGQgPSBuZXcgQnV0dG9uKGdy
b3VwLCBTV1QuQ0hFQ0spOw0KLQkJcmVzY2hlZHVsZUZpZWxkLnNldFRleHQoIlJlc2NoZWR1bGUi
KTsgLy8kTk9OLU5MUy0xJA0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hP
UklaT05UQUwpOw0KLQkJcmVzY2hlZHVsZUZpZWxkLnNldExheW91dERhdGEoZGF0YSk7DQotCQly
ZXNjaGVkdWxlRmllbGQNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJSZXNjaGVkdWxlIHRoZSBqb2Ig
KCdSZXNjaGVkdWxlIERlbGF5JyBpcyB0aGUgcGVyaW9kIGJldHdlZW4gcmVzY2hlZHVsZXMpIik7
DQotDQotCQkvLyBjcmVhdGUgam9icw0KLQkJQnV0dG9uIGNyZWF0ZSA9IG5ldyBCdXR0b24oZ3Jv
dXAsIFNXVC5QVVNIKTsNCi0JCWNyZWF0ZS5zZXRUZXh0KCJDcmVhdGUgam9icyIpOyAvLyROT04t
TkxTLTEkDQotCQljcmVhdGUNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJDcmVhdGVzIGFuZCBzY2hl
ZHVsZXMgam9icyBhY2NvcmRpbmcgdG8gYWJvdmUgcGFyYW1ldGVycyIpOyAvLyROT04tTkxTLTEk
DQotCQljcmVhdGUuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJ
Wk9OVEFMKSk7DQotCQljcmVhdGUuYWRkU2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFk
YXB0ZXIoKSB7DQotCQkJcHVibGljIHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQg
ZSkgew0KLQkJCQljcmVhdGVKb2JzKCk7DQotCQkJfQ0KLQkJfSk7DQotDQotCQlyZXR1cm5FcnJv
clN0YXR1cyA9IG5ldyBCdXR0b24oZ3JvdXAsIFNXVC5DSEVDSyk7DQotCQlyZXR1cm5FcnJvclN0
YXR1cw0KLQkJCQkuc2V0VGV4dCgiUmV0dXJuIGFuIGV4Y2VwdGlvbiB3cmFwcGVkIGluIGEgZXJy
b3Igc3RhdHVzIik7IC8vJE5PTi1OTFMtMSQNCi0JCWRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERh
dGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCXJldHVybkVycm9yU3RhdHVzLnNldExheW91dERhdGEo
ZGF0YSk7DQotCQlyZXR1cm5FcnJvclN0YXR1cw0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIldyYXAg
dGhlIGV4Y2VwdGlvbiBpbiBhIE11bHRpU3RhdHVzIGluc3RhbmNlIik7DQotDQotCX0NCi0NCi0J
LyoqDQotCSAqIEBwYXJhbSBwYXJlbnQNCi0JICovDQotCXByaXZhdGUgdm9pZCBjcmVhdGVTaG93
Vmlld3NHcm91cChDb21wb3NpdGUgcGFyZW50KSB7DQotDQotCQlDb21wb3NpdGUgZ3JvdXAgPSBu
ZXcgQ29tcG9zaXRlKHBhcmVudCwgU1dULk5PTkUpOw0KLQkJR3JpZExheW91dCBsYXlvdXQgPSBu
ZXcgR3JpZExheW91dCgpOw0KLQkJbGF5b3V0Lm51bUNvbHVtbnMgPSAyOw0KLQkJbGF5b3V0Lm1h
a2VDb2x1bW5zRXF1YWxXaWR0aCA9IHRydWU7DQotCQlncm91cC5zZXRMYXlvdXQobGF5b3V0KTsN
Ci0JCWdyb3VwLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpP
TlRBTCkpOw0KLQ0KLQkJQnV0dG9uIHNob3dQYXJ0SW5pdEV4Y2VwdGlvblZpZXcgPSBuZXcgQnV0
dG9uKGdyb3VwLCBTV1QuUFVTSCk7DQotCQlzaG93UGFydEluaXRFeGNlcHRpb25WaWV3DQotCQkJ
CS5zZXRUZXh0KCJTaG93IHZpZXcgdGhyb3dpbmcgUGFydEluaXRFeGNlcHRpb24iKTsgLy8kTk9O
LU5MUy0xJA0KLQkJc2hvd1BhcnRJbml0RXhjZXB0aW9uVmlldy5zZXRMYXlvdXREYXRhKG5ldyBH
cmlkRGF0YSgNCi0JCQkJR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKSk7DQotCQlzaG93UGFydElu
aXRFeGNlcHRpb25WaWV3LmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVy
KCkgew0KLQkJCXB1YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50IGUpIHsN
Ci0NCi0JCQkJdHJ5IHsNCi0JCQkJCVBsYXRmb3JtVUkNCi0JCQkJCQkJLmdldFdvcmtiZW5jaCgp
DQotCQkJCQkJCS5nZXRBY3RpdmVXb3JrYmVuY2hXaW5kb3coKQ0KLQkJCQkJCQkuZ2V0QWN0aXZl
UGFnZSgpDQotCQkJCQkJCS5zaG93VmlldygNCi0JCQkJCQkJCQkib3JnLmVjbGlwc2VpbnRlcm5h
bC51aS50ZXN0cy5zdGF0dXNoYW5kbGluZy5QYXJ0SW5pdEV4Y2VwdGlvblZpZXciKTsNCi0JCQkJ
fSBjYXRjaCAoUGFydEluaXRFeGNlcHRpb24gZTEpIHsNCi0JCQkJCS8vIHNob3VsZCBub3QgYmUg
dGhyb3duICENCi0JCQkJCWUxLnByaW50U3RhY2tUcmFjZSgpOw0KLQkJCQl9DQotCQkJfQ0KLQkJ
fSk7DQotDQotCQlCdXR0b24gc2hvd1J1bnRpbWVFeGNlcHRpb25WaWV3ID0gbmV3IEJ1dHRvbihn
cm91cCwgU1dULlBVU0gpOw0KLQkJc2hvd1J1bnRpbWVFeGNlcHRpb25WaWV3LnNldFRleHQoIlNo
b3cgdmlldyB0aHJvd2luZyBSdW50aW1lRXhjZXB0aW9uIik7IC8vJE5PTi1OTFMtMSQNCi0JCXNo
b3dSdW50aW1lRXhjZXB0aW9uVmlldy5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YSgNCi0JCQkJ
R3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKSk7DQotCQlzaG93UnVudGltZUV4Y2VwdGlvblZpZXcu
YWRkU2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0ZXIoKSB7DQotCQkJcHVibGlj
IHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkgew0KLQ0KLQkJCQl0cnkgew0K
LQkJCQkJUGxhdGZvcm1VSQ0KLQkJCQkJCQkuZ2V0V29ya2JlbmNoKCkNCi0JCQkJCQkJLmdldEFj
dGl2ZVdvcmtiZW5jaFdpbmRvdygpDQotCQkJCQkJCS5nZXRBY3RpdmVQYWdlKCkNCi0JCQkJCQkJ
LnNob3dWaWV3KA0KLQkJCQkJCQkJCSJvcmcuZWNsaXBzZWludGVybmFsLnVpLnRlc3RzLnN0YXR1
c2hhbmRsaW5nLlJ1bnRpbWVFeGNlcHRpb25WaWV3Iik7DQotCQkJCX0gY2F0Y2ggKFBhcnRJbml0
RXhjZXB0aW9uIGUxKSB7DQotCQkJCQkvLyBzaG91bGQgbm90IGJlIHRocm93biAhDQotCQkJCQll
MS5wcmludFN0YWNrVHJhY2UoKTsNCi0JCQkJfQ0KLQkJCX0NCi0JCX0pOw0KLQ0KLQkJQnV0dG9u
IHNob3dSdW50aW1lRXhjZXB0aW9uRWRpdG9yID0gbmV3IEJ1dHRvbihncm91cCwgU1dULlBVU0gp
Ow0KLQkJc2hvd1J1bnRpbWVFeGNlcHRpb25FZGl0b3INCi0JCQkJLnNldFRleHQoIlNob3cgZWRp
dG9yIHRocm93aW5nIFJ1bnRpbWVFeGNlcHRpb24iKTsgLy8kTk9OLU5MUy0xJA0KLQkJc2hvd1J1
bnRpbWVFeGNlcHRpb25FZGl0b3Iuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoDQotCQkJCUdy
aWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQkJc2hvd1J1bnRpbWVFeGNlcHRpb25FZGl0b3Iu
YWRkU2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0ZXIoKSB7DQotCQkJcHVibGlj
IHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkgew0KLQ0KLQkJCQl0cnkgew0K
LQkJCQkJUGxhdGZvcm1VSQ0KLQkJCQkJCQkuZ2V0V29ya2JlbmNoKCkNCi0JCQkJCQkJLmdldEFj
dGl2ZVdvcmtiZW5jaFdpbmRvdygpDQotCQkJCQkJCS5nZXRBY3RpdmVQYWdlKCkNCi0JCQkJCQkJ
Lm9wZW5FZGl0b3IobmV3IElFZGl0b3JJbnB1dCgpIHsNCi0NCi0JCQkJCQkJCXB1YmxpYyBib29s
ZWFuIGV4aXN0cygpIHsNCi0NCi0JCQkJCQkJCQlyZXR1cm4gZmFsc2U7DQotCQkJCQkJCQl9DQot
DQotCQkJCQkJCQlwdWJsaWMgSW1hZ2VEZXNjcmlwdG9yIGdldEltYWdlRGVzY3JpcHRvcigpIHsN
Ci0NCi0JCQkJCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCQkJCX0NCi0NCi0JCQkJCQkJCXB1Ymxp
YyBTdHJpbmcgZ2V0TmFtZSgpIHsNCi0NCi0JCQkJCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCQkJ
CX0NCi0NCi0JCQkJCQkJCXB1YmxpYyBJUGVyc2lzdGFibGVFbGVtZW50IGdldFBlcnNpc3RhYmxl
KCkgew0KLQ0KLQkJCQkJCQkJCXJldHVybiBudWxsOw0KLQkJCQkJCQkJfQ0KLQ0KLQkJCQkJCQkJ
cHVibGljIFN0cmluZyBnZXRUb29sVGlwVGV4dCgpIHsNCi0NCi0JCQkJCQkJCQlyZXR1cm4gbnVs
bDsNCi0JCQkJCQkJCX0NCi0NCi0JCQkJCQkJCXB1YmxpYyBPYmplY3QgZ2V0QWRhcHRlcihDbGFz
cyBhZGFwdGVyKSB7DQotDQotCQkJCQkJCQkJcmV0dXJuIG51bGw7DQotCQkJCQkJCQl9DQotDQot
CQkJCQkJCX0sDQotCQkJCQkJCQkJIm9yZy5lY2xpcHNlaW50ZXJuYWwudWkudGVzdHMuc3RhdHVz
aGFuZGxpbmcuUnVudGltZUV4Y2VwdGlvbkVkaXRvciIpOw0KLQkJCQl9IGNhdGNoIChQYXJ0SW5p
dEV4Y2VwdGlvbiBlMSkgew0KLQkJCQkJLy8gc2hvdWxkIG5vdCBiZSB0aHJvd24gIQ0KLQkJCQkJ
ZTEucHJpbnRTdGFja1RyYWNlKCk7DQotCQkJCX0NCi0JCQl9DQotCQl9KTsNCi0NCi0JCUJ1dHRv
biBzaG93UGFydEluaXRFeGNlcHRpb25FZGl0b3IgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuUFVT
SCk7DQotCQlzaG93UGFydEluaXRFeGNlcHRpb25FZGl0b3Iuc2V0VGV4dCgiU2hvdyBlZGl0b3Ig
dGhyb3dpbmcgUGFydEluaXQiKTsgLy8kTk9OLU5MUy0xJA0KLQkJc2hvd1BhcnRJbml0RXhjZXB0
aW9uRWRpdG9yLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKA0KLQkJCQlHcmlkRGF0YS5GSUxM
X0hPUklaT05UQUwpKTsNCi0JCXNob3dQYXJ0SW5pdEV4Y2VwdGlvbkVkaXRvcg0KLQkJCQkuYWRk
U2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0ZXIoKSB7DQotCQkJCQlwdWJsaWMg
dm9pZCB3aWRnZXRTZWxlY3RlZChTZWxlY3Rpb25FdmVudCBlKSB7DQotDQotCQkJCQkJdHJ5IHsN
Ci0JCQkJCQkJUGxhdGZvcm1VSS5nZXRXb3JrYmVuY2goKQ0KLQkJCQkJCQkJCS5nZXRBY3RpdmVX
b3JrYmVuY2hXaW5kb3coKS5nZXRBY3RpdmVQYWdlKCkNCi0JCQkJCQkJCQkub3BlbkVkaXRvcigN
Ci0JCQkJCQkJCQkJCW5ldyBJRWRpdG9ySW5wdXQoKSB7DQotDQotCQkJCQkJCQkJCQkJcHVibGlj
IGJvb2xlYW4gZXhpc3RzKCkgew0KLQ0KLQkJCQkJCQkJCQkJCQlyZXR1cm4gZmFsc2U7DQotCQkJ
CQkJCQkJCQkJfQ0KLQ0KLQkJCQkJCQkJCQkJCXB1YmxpYyBJbWFnZURlc2NyaXB0b3IgZ2V0SW1h
Z2VEZXNjcmlwdG9yKCkgew0KLQ0KLQkJCQkJCQkJCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCQkJ
CQkJCQl9DQotDQotCQkJCQkJCQkJCQkJcHVibGljIFN0cmluZyBnZXROYW1lKCkgew0KLQ0KLQkJ
CQkJCQkJCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCQkJCQkJCQl9DQotDQotCQkJCQkJCQkJCQkJ
cHVibGljIElQZXJzaXN0YWJsZUVsZW1lbnQgZ2V0UGVyc2lzdGFibGUoKSB7DQotDQotCQkJCQkJ
CQkJCQkJCXJldHVybiBudWxsOw0KLQkJCQkJCQkJCQkJCX0NCi0NCi0JCQkJCQkJCQkJCQlwdWJs
aWMgU3RyaW5nIGdldFRvb2xUaXBUZXh0KCkgew0KLQ0KLQkJCQkJCQkJCQkJCQlyZXR1cm4gbnVs
bDsNCi0JCQkJCQkJCQkJCQl9DQotDQotCQkJCQkJCQkJCQkJcHVibGljIE9iamVjdCBnZXRBZGFw
dGVyKA0KLQkJCQkJCQkJCQkJCQkJQ2xhc3MgYWRhcHRlcikgew0KLQ0KLQkJCQkJCQkJCQkJCQly
ZXR1cm4gbnVsbDsNCi0JCQkJCQkJCQkJCQl9DQotDQotCQkJCQkJCQkJCQl9LA0KLQkJCQkJCQkJ
CQkJIm9yZy5lY2xpcHNlaW50ZXJuYWwudWkudGVzdHMuc3RhdHVzaGFuZGxpbmcuUGFydEluaXRF
eGNlcHRpb25FZGl0b3IiKTsNCi0JCQkJCQl9IGNhdGNoIChQYXJ0SW5pdEV4Y2VwdGlvbiBlMSkg
ew0KLQkJCQkJCQkvLyBzaG91bGQgbm90IGJlIHRocm93biAhDQotCQkJCQkJCWUxLnByaW50U3Rh
Y2tUcmFjZSgpOw0KLQkJCQkJCX0NCi0JCQkJCX0NCi0JCQkJfSk7DQotDQotCX0NCi0NCi0JLyoq
DQotCSAqIENyZWF0ZXMgYSBncm91cCBmb3IgaW52YWxpZCBleHRlbnNpb24gaW5pdGlhbGl6YXRp
b24uDQotCSAqIA0KLQkgKiBAcGFyYW0gcGFyZW50DQotCSAqLw0KLQlwcml2YXRlIHZvaWQgY3Jl
YXRlSW52YWxpZEV4dEdyb3VwKENvbXBvc2l0ZSBwYXJlbnQpIHsNCi0NCi0JCUNvbXBvc2l0ZSBn
cm91cCA9IG5ldyBDb21wb3NpdGUocGFyZW50LCBTV1QuTk9ORSk7DQotCQlHcmlkTGF5b3V0IGxh
eW91dCA9IG5ldyBHcmlkTGF5b3V0KCk7DQotCQlsYXlvdXQubnVtQ29sdW1ucyA9IDI7DQotCQls
YXlvdXQubWFrZUNvbHVtbnNFcXVhbFdpZHRoID0gdHJ1ZTsNCi0JCWdyb3VwLnNldExheW91dChs
YXlvdXQpOw0KLQkJZ3JvdXAuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERhdGEuRklM
TF9IT1JJWk9OVEFMKSk7DQotDQotCQlCdXR0b24gbG9hZEludmFsaWRFeHQgPSBuZXcgQnV0dG9u
KGdyb3VwLCBTV1QuUFVTSCk7DQotCQlsb2FkSW52YWxpZEV4dA0KLQkJCQkuc2V0VGV4dCgiRXh0
ZW5zaW9ucyAtIGludmFsaWQgcmVmZXJlbmNlcyBkZXRlcm1pbmVkIGF0IGxvYWQgdGltZSIpOyAv
LyROT04tTkxTLTEkDQotCQlsb2FkSW52YWxpZEV4dC5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0
YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpKTsNCi0JCWxvYWRJbnZhbGlkRXh0LmFkZFNlbGVj
dGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVyKCkgew0KLQkJCXB1YmxpYyB2b2lkIHdp
ZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50IGUpIHsNCi0NCi0JCQkJU2FtcGxlUmVnaXN0cnlS
ZWFkZXIgcmVhZGVyID0gbmV3IFNhbXBsZVJlZ2lzdHJ5UmVhZGVyKCk7DQotCQkJCXJlYWRlci5y
ZWFkUmVnaXN0cnkoUGxhdGZvcm0uZ2V0RXh0ZW5zaW9uUmVnaXN0cnkoKSwNCi0JCQkJCQkib3Jn
LmVjbGlwc2UudWkudGVzdHMiLCAic2FtcGxlIik7DQotCQkJfQ0KLQkJfSk7DQotCX0NCi0NCi0J
cHJpdmF0ZSB2b2lkIGNyZWF0ZVNob3dTdGF0dXNUb0JlU2hvd0dyb3VwKENvbXBvc2l0ZSBwYXJl
bnQpIHsNCi0NCi0JCUNvbXBvc2l0ZSBncm91cCA9IG5ldyBDb21wb3NpdGUocGFyZW50LCBTV1Qu
Tk9ORSk7DQotCQlHcmlkTGF5b3V0IGxheW91dCA9IG5ldyBHcmlkTGF5b3V0KCk7DQotCQlsYXlv
dXQubnVtQ29sdW1ucyA9IDI7DQotCQlsYXlvdXQubWFrZUNvbHVtbnNFcXVhbFdpZHRoID0gdHJ1
ZTsNCi0JCWdyb3VwLnNldExheW91dChsYXlvdXQpOw0KLQkJZ3JvdXAuc2V0TGF5b3V0RGF0YShu
ZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKSk7DQotDQotCQlCdXR0b24gaGFu
ZGxlU3RhdHVzZXMgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuUFVTSCk7DQotCQloYW5kbGVTdGF0
dXNlcy5zZXRUZXh0KCJIYW5kbGUgc3RhdHVzZXMgKFN0YXR1c01hbmFnZXIpIik7IC8vJE5PTi1O
TFMtMSQNCi0JCWhhbmRsZVN0YXR1c2VzLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWRE
YXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQkJaGFuZGxlU3RhdHVzZXMuYWRkU2VsZWN0aW9uTGlz
dGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0ZXIoKSB7DQotDQotCQkJcHVibGljIHZvaWQgd2lkZ2V0
U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkgew0KLQkJCQlmb3IgKEl0ZXJhdG9yIGl0ID0gc3Rh
dHVzSXRlbXMuaXRlcmF0b3IoKTsgaXQuaGFzTmV4dCgpOykgew0KLQkJCQkJRGlzcGxheWVkSXRl
bSBkaSA9IChEaXNwbGF5ZWRJdGVtKSBpdC5uZXh0KCk7DQotCQkJCQkvLyBzZWUgU2FtcGxlU3Rh
dHVzSGFuZGxlcg0KLQkJCQkJLy8gaGludHMgYW5kIHN0YXR1c2VzIGNvdWxkIGJlIGVhc2lseSBt
b2RpZmllZCB0aGVyZQ0KLQkJCQkJU3RhdHVzTWFuYWdlci5nZXRNYW5hZ2VyKCkuaGFuZGxlKGRp
LmdldFN0YXR1cygpLA0KLQkJCQkJCQlkaS5nZXRIaW50KCkpOw0KLQkJCQl9DQotCQkJfQ0KLQkJ
fSk7DQotDQotCQlzdGF0dXNUYWJsZVZpZXZlciA9IG5ldyBUYWJsZVZpZXdlcihncm91cCwgU1dU
Lk1VTFRJIHwgU1dULkJPUkRFUg0KLQkJCQl8IFNXVC5WX1NDUk9MTCB8IFNXVC5WSVJUVUFMKTsN
Ci0JCWNvbnRlbnRQcm92aWRlciA9IG5ldyBDb250ZW50UHJvdmlkZXIoKTsNCi0JCXN0YXR1c1Rh
YmxlVmlldmVyLnNldENvbnRlbnRQcm92aWRlcihjb250ZW50UHJvdmlkZXIpOw0KLQkJR3JpZERh
dGEgZ2QgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9CT1RIKTsNCi0JCWdkLmhvcml6b250
YWxTcGFuID0gMjsNCi0JCXN0YXR1c1RhYmxlVmlldmVyLmdldFRhYmxlKCkuc2V0TGF5b3V0RGF0
YShnZCk7DQotCQlzdGF0dXNUYWJsZVZpZXZlci5zZXRJbnB1dChuZXcgT2JqZWN0WzBdKTsNCi0N
Ci0JCUJ1dHRvbiBhZGRTdGF0dXMgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuUFVTSCk7DQotCQlh
ZGRTdGF0dXMuc2V0VGV4dCgiQWRkIHN0YXR1cyB0byB0aGUgbGlzdCIpOyAvLyROT04tTkxTLTEk
DQotCQlhZGRTdGF0dXMuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9I
T1JJWk9OVEFMKSk7DQotCQlhZGRTdGF0dXMuYWRkU2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVj
dGlvbkFkYXB0ZXIoKSB7DQotDQotCQkJcHVibGljIHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0
aW9uRXZlbnQgZSkgew0KLQkJCQlib29sZWFuIGxvZyA9IGxvZ1N0YXR1c0ZpZWxkLmdldFNlbGVj
dGlvbigpOw0KLQkJCQlib29sZWFuIHNob3cgPSBzaG93U3RhdHVzRmllbGQuZ2V0U2VsZWN0aW9u
KCk7DQotDQotCQkJCWludCBoaW50ID0gU3RhdHVzTWFuYWdlci5OT05FOw0KLQkJCQlpZiAobG9n
ICYmIHNob3cpDQotCQkJCQloaW50ID0gU3RhdHVzTWFuYWdlci5TSE9XIHwgU3RhdHVzTWFuYWdl
ci5MT0c7DQotCQkJCWVsc2UgaWYgKGxvZykNCi0JCQkJCWhpbnQgPSBTdGF0dXNNYW5hZ2VyLkxP
RzsNCi0JCQkJZWxzZSBpZiAoc2hvdykNCi0JCQkJCWhpbnQgPSBTdGF0dXNNYW5hZ2VyLlNIT1c7
DQotDQotCQkJCWludCBzZXZlcml0eSA9IElTdGF0dXMuT0s7DQotCQkJCXN3aXRjaCAoc3RhdHVz
U2V2ZXJpdHlGaWVsZC5nZXRTZWxlY3Rpb25JbmRleCgpKSB7DQotCQkJCWNhc2UgMDoNCi0JCQkJ
CXNldmVyaXR5ID0gSVN0YXR1cy5PSzsNCi0JCQkJCWJyZWFrOw0KLQkJCQljYXNlIDE6DQotCQkJ
CQlzZXZlcml0eSA9IElTdGF0dXMuSU5GTzsNCi0JCQkJCWJyZWFrOw0KLQkJCQljYXNlIDI6DQot
CQkJCQlzZXZlcml0eSA9IElTdGF0dXMuV0FSTklORzsNCi0JCQkJCWJyZWFrOw0KLQkJCQljYXNl
IDM6DQotCQkJCQlzZXZlcml0eSA9IElTdGF0dXMuQ0FOQ0VMOw0KLQkJCQkJYnJlYWs7DQotCQkJ
CWNhc2UgNDoNCi0JCQkJCXNldmVyaXR5ID0gSVN0YXR1cy5FUlJPUjsNCi0JCQkJCWJyZWFrOw0K
LQkJCQl9DQotDQotCQkJCXN0YXR1c05vKys7DQotDQotCQkJCXN0YXR1c0l0ZW1zLmFkZChuZXcg
RGlzcGxheWVkSXRlbShuZXcgU3RhdHVzKHNldmVyaXR5LA0KLQkJCQkJCXN0YXR1c1BsdWdpbklE
LmdldFRleHQoKSwgIkEgdGVzdCBzdGF0dXMgTm8uICINCi0JCQkJCQkJCSsgc3RhdHVzTm8gKyAi
ICEiKSwgaGludCkpOw0KLQkJCQlzdGF0dXNUYWJsZVZpZXZlci5yZWZyZXNoKCk7DQotCQkJfQ0K
LQkJfSk7DQotDQotCQlCdXR0b24gcmVtb3ZlU3RhdHVzID0gbmV3IEJ1dHRvbihncm91cCwgU1dU
LlBVU0gpOw0KLQkJcmVtb3ZlU3RhdHVzLnNldFRleHQoIlJlbW92ZSBzdGF0dXMgZnJvbSB0aGUg
bGlzdCIpOyAvLyROT04tTkxTLTEkDQotCQlyZW1vdmVTdGF0dXMuc2V0TGF5b3V0RGF0YShuZXcg
R3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKSk7DQotCQlyZW1vdmVTdGF0dXMuYWRk
U2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0ZXIoKSB7DQotDQotCQkJcHVibGlj
IHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkgew0KLQkJCQlTdHJ1Y3R1cmVk
U2VsZWN0aW9uIHNlbCA9IChTdHJ1Y3R1cmVkU2VsZWN0aW9uKSBzdGF0dXNUYWJsZVZpZXZlcg0K
LQkJCQkJCS5nZXRTZWxlY3Rpb24oKTsNCi0JCQkJZm9yIChJdGVyYXRvciBpdCA9IHNlbC5pdGVy
YXRvcigpOyBpdC5oYXNOZXh0KCk7KSB7DQotCQkJCQlzdGF0dXNJdGVtcy5yZW1vdmUoaXQubmV4
dCgpKTsNCi0JCQkJfQ0KLQkJCQlzdGF0dXNUYWJsZVZpZXZlci5yZWZyZXNoKCk7DQotCQkJfQ0K
LQkJfSk7DQotDQotCQlzaG93U3RhdHVzRmllbGQgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuQ0hF
Q0spOw0KLQkJc2hvd1N0YXR1c0ZpZWxkLnNldFRleHQoIlNob3cgc3RhdHVzIChVSSBkaWFsb2cp
Iik7IC8vJE5PTi1OTFMtMSQNCi0JCUdyaWREYXRhIGRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERh
dGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCXNob3dTdGF0dXNGaWVsZC5zZXRMYXlvdXREYXRhKGRh
dGEpOw0KLQkJc2hvd1N0YXR1c0ZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiU2V0cyBvbmUg
b2YgdGhlIFN0YXR1c01hbmFnZXIgaGludHMgZm9yIHNob3dpbmcgc3RhdHVzZXMgKFNIT1cgb3Ig
U0hPV0FORExPRykhIik7DQotDQotCQlsb2dTdGF0dXNGaWVsZCA9IG5ldyBCdXR0b24oZ3JvdXAs
IFNXVC5DSEVDSyk7DQotCQlsb2dTdGF0dXNGaWVsZC5zZXRUZXh0KCJMb2cgc3RhdHVzIik7IC8v
JE5PTi1OTFMtMSQNCi0JCWRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9O
VEFMKTsNCi0JCWxvZ1N0YXR1c0ZpZWxkLnNldExheW91dERhdGEoZGF0YSk7DQotCQlsb2dTdGF0
dXNGaWVsZA0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlNldHMgb25lIG9mIHRoZSBTdGF0dXNNYW5h
Z2VyIGhpbnRzIGZvciBsb2dnaW5nIHN0YXR1c2VzIChMT0cgb3IgU0hPV0FORExPRykhIik7DQot
DQotCQkvLyBkdXJhdGlvbg0KLQkJTGFiZWwgbGFiZWwgPSBuZXcgTGFiZWwoZ3JvdXAsIFNXVC5O
T05FKTsNCi0JCWxhYmVsLnNldFRleHQoIlNldmVyaXR5IGxldmVsOiIpOyAvLyROT04tTkxTLTEk
DQotCQlzdGF0dXNTZXZlcml0eUZpZWxkID0gbmV3IENvbWJvKGdyb3VwLCBTV1QuRFJPUF9ET1dO
IHwgU1dULlJFQURfT05MWSk7DQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExf
SE9SSVpPTlRBTCk7DQotCQlkYXRhLndpZHRoSGludCA9IElEaWFsb2dDb25zdGFudHMuRU5UUllf
RklFTERfV0lEVEg7DQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLnNldExheW91dERhdGEoZGF0YSk7
DQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLnNldFRvb2xUaXBUZXh0KCJTZXZlcml0eSBvZiB0aGUg
Z2VuZXJhdGVkIHN0YXR1cyIpOy8vJE5PTi1OTFMtMSQNCi0JCXN0YXR1c1NldmVyaXR5RmllbGQu
YWRkKCJPSyIpOyAvLyROT04tTkxTLTEkDQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLmFkZCgiSU5G
TyIpOyAvLyROT04tTkxTLTEkDQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLmFkZCgiV0FSTklORyIp
OyAvLyROT04tTkxTLTEkDQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLmFkZCgiQ0FOQ0VMIik7IC8v
JE5PTi1OTFMtMSQNCi0JCXN0YXR1c1NldmVyaXR5RmllbGQuYWRkKCJFUlJPUiIpOyAvLyROT04t
TkxTLTEkDQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLnNlbGVjdCg0KTsNCi0NCi0JCUxhYmVsIGxh
YmVsSUQgPSBuZXcgTGFiZWwoZ3JvdXAsIFNXVC5OT05FKTsNCi0JCWxhYmVsSUQuc2V0VGV4dCgi
SUQgb2YgdGhlIHNvdXJjZSBwbHVnaW46Iik7IC8vJE5PTi1OTFMtMSQNCi0JCXN0YXR1c1BsdWdp
bklEID0gbmV3IFRleHQoZ3JvdXAsIFNXVC5CT1JERVIpOw0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0
YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQgPSBJRGlhbG9n
Q29uc3RhbnRzLkVOVFJZX0ZJRUxEX1dJRFRIOw0KLQkJc3RhdHVzUGx1Z2luSUQuc2V0TGF5b3V0
RGF0YShkYXRhKTsNCi0JCXN0YXR1c1BsdWdpbklEDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiU2V0
cyB0aGUgSUQgb2YgcGx1Z2luIHdoaWNoICdnZW5lcmF0ZWQnIHRoZSBzdGF0dXMiKTsNCi0JCXN0
YXR1c1BsdWdpbklELnNldFRleHQoV29ya2JlbmNoUGx1Z2luLlBJX1dPUktCRU5DSCk7DQotDQot
CX0NCi0NCi0JcHVibGljIHZvaWQgc2V0Rm9jdXMoKSB7DQotCQlpZiAoZHVyYXRpb25GaWVsZCAh
PSBudWxsICYmICFkdXJhdGlvbkZpZWxkLmlzRGlzcG9zZWQoKSkNCi0JCQlkdXJhdGlvbkZpZWxk
LnNldEZvY3VzKCk7DQotCX0NCi0NCi0JLyoqDQotCSAqIA0KLQkgKi8NCi0JcHJpdmF0ZSB2b2lk
IHByb2dyZXNzTm9Gb3JrKCkgew0KLQkJdHJ5IHsNCi0JCQlmaW5hbCBsb25nIGR1cmF0aW9uID0g
Z2V0RHVyYXRpb24oKTsNCi0JCQlmaW5hbCBib29sZWFuIHNob3VsZExvY2sgPSBwcm9ncmVzc05v
Rm9ya0xvY2tGaWVsZC5nZXRTZWxlY3Rpb24oKTsNCi0JCQlmaW5hbCBUaHJvd2FibGUgdGhyb3dh
YmxlID0gZ2V0RXhjZXB0aW9uKCk7DQotCQkJZmluYWwgbG9uZyB0aHJvd0FmdGVyID0gZ2V0VGhy
b3dBZnRlcihkdXJhdGlvbik7DQotDQotCQkJSVByb2dyZXNzU2VydmljZSBwcm9ncmVzc1NlcnZp
Y2UgPSBQbGF0Zm9ybVVJLmdldFdvcmtiZW5jaCgpDQotCQkJCQkuZ2V0UHJvZ3Jlc3NTZXJ2aWNl
KCk7DQotCQkJcHJvZ3Jlc3NTZXJ2aWNlLnJ1bkluVUkocHJvZ3Jlc3NTZXJ2aWNlLA0KLQkJCQkJ
bmV3IElSdW5uYWJsZVdpdGhQcm9ncmVzcygpIHsNCi0JCQkJCQlwdWJsaWMgdm9pZCBydW4oSVBy
b2dyZXNzTW9uaXRvciBtb25pdG9yKQ0KLQkJCQkJCQkJdGhyb3dzIEludGVycnVwdGVkRXhjZXB0
aW9uIHsNCi0JCQkJCQkJaWYgKHNob3VsZExvY2spDQotCQkJCQkJCQlkb1J1bkluV29ya3NwYWNl
KGR1cmF0aW9uLCB0aHJvd0FmdGVyLA0KLQkJCQkJCQkJCQl0aHJvd2FibGUsIG1vbml0b3IpOw0K
LQkJCQkJCQllbHNlDQotCQkJCQkJCQlkb1J1bihkdXJhdGlvbiwgdGhyb3dBZnRlciwgdGhyb3dh
YmxlLCBtb25pdG9yKTsNCi0JCQkJCQl9DQotCQkJCQl9LCBSZXNvdXJjZXNQbHVnaW4uZ2V0V29y
a3NwYWNlKCkuZ2V0Um9vdCgpKTsNCi0JCX0gY2F0Y2ggKEludm9jYXRpb25UYXJnZXRFeGNlcHRp
b24gZSkgew0KLQkJCWUucHJpbnRTdGFja1RyYWNlKCk7DQotCQl9IGNhdGNoIChJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiBlKSB7DQotCQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCi0JCX0NCi0JfQ0KLQ0K
LQkvKioNCi0JICogQHBhcmFtIGR1cmF0aW9uDQotCSAqIEBwYXJhbSB0aHJvd0FmdGVyDQotCSAq
IEBwYXJhbSB0b0JlVGhyb3duDQotCSAqIEBwYXJhbSBtb25pdG9yDQotCSAqLw0KLQlwcm90ZWN0
ZWQgdm9pZCBkb1J1bkluV29ya3NwYWNlKGZpbmFsIGxvbmcgZHVyYXRpb24sIGZpbmFsIGxvbmcg
dGhyb3dBZnRlciwNCi0JCQlmaW5hbCBUaHJvd2FibGUgdG9CZVRocm93biwgSVByb2dyZXNzTW9u
aXRvciBtb25pdG9yKSB7DQotCQl0cnkgew0KLQkJCVJlc291cmNlc1BsdWdpbi5nZXRXb3Jrc3Bh
Y2UoKS5ydW4obmV3IElXb3Jrc3BhY2VSdW5uYWJsZSgpIHsNCi0JCQkJcHVibGljIHZvaWQgcnVu
KElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KLQkJCQkJ
ZG9SdW4oZHVyYXRpb24sIHRocm93QWZ0ZXIsIHRvQmVUaHJvd24sIG1vbml0b3IpOw0KLQkJCQl9
DQotCQkJfSwgbW9uaXRvcik7DQotCQl9IGNhdGNoIChDb3JlRXhjZXB0aW9uIGUpIHsNCi0JCQll
LnByaW50U3RhY2tUcmFjZSgpOw0KLQkJfQ0KLQl9DQotDQotCS8qKg0KLQkgKiBAcGFyYW0gZHVy
YXRpb24NCi0JICogQHBhcmFtIHRocm93QWZ0ZXINCi0JICogQHBhcmFtIHRvQmVUaHJvd24NCi0J
ICogQHBhcmFtIG1vbml0b3INCi0JICovDQotCXByb3RlY3RlZCB2b2lkIGRvUnVuKGxvbmcgZHVy
YXRpb24sIGZpbmFsIGxvbmcgdGhyb3dBZnRlciwNCi0JCQlmaW5hbCBUaHJvd2FibGUgdG9CZVRo
cm93biwgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB7DQotCQlmaW5hbCBsb25nIHNsZWVwID0g
MTA7DQotCQlpbnQgdGlja3MgPSAoaW50KSAoZHVyYXRpb24gLyBzbGVlcCk7DQotCQlpbnQgdGlj
a3NUb1Rocm93ID0gKGludCkgKHRocm93QWZ0ZXIgLyBzbGVlcCk7DQotCQltb25pdG9yLmJlZ2lu
VGFzaygiU3Bpbm5pbmcgaW5zaWRlIElQcm9ncmVzc1NlcnZpY2UiLCB0aWNrcyk7IC8vJE5PTi1O
TFMtMSQNCi0JCW1vbml0b3Iuc2V0VGFza05hbWUoIlNwaW5uaW5nIGluc2lkZSBJUHJvZ3Jlc3NT
ZXJ2aWNlIik7IC8vJE5PTi1OTFMtMSQNCi0JCWZvciAoaW50IGkgPSAwOyBpIDwgdGlja3M7IGkr
Kykgew0KLQkJCW1vbml0b3Iuc3ViVGFzaygiUHJvY2Vzc2luZyB0aWNrICMiICsgaSk7IC8vJE5P
Ti1OTFMtMSQNCi0JCQlpZiAobW9uaXRvci5pc0NhbmNlbGVkKCkpDQotCQkJCXJldHVybjsNCi0J
CQl0cnkgew0KLQkJCQlUaHJlYWQuc2xlZXAoc2xlZXApOw0KLQkJCX0gY2F0Y2ggKEludGVycnVw
dGVkRXhjZXB0aW9uIGUpIHsNCi0JCQkJLy8gaWdub3JlDQotCQkJfQ0KLQkJCWlmIChpID09IHRp
Y2tzVG9UaHJvdykgew0KLQkJCQl0aHJvd0V4Y2VwdGlvbih0b0JlVGhyb3duKTsNCi0JCQkJLy8g
dG9CZVRocm93biBpcyBuZWl0aGVyIGEgcnVudGltZSBleGNlcHRpb24gbm9yIGFuIGVycm9yDQot
CQkJCXJldHVybjsNCi0JCQl9DQotCQkJbW9uaXRvci53b3JrZWQoMSk7DQotCQl9DQotCX0NCi0N
Ci0JLyoqDQotCSAqIA0KLQkgKi8NCi0JcHJvdGVjdGVkIHZvaWQgY3JlYXRlSm9icygpIHsNCi0J
CWludCBqb2JDb3VudCA9IEludGVnZXIucGFyc2VJbnQocXVhbnRpdHlGaWVsZC5nZXRUZXh0KCkp
Ow0KLQkJYm9vbGVhbiB1aSA9IHRocmVhZEZpZWxkLmdldFNlbGVjdGlvbigpOw0KLQkJbG9uZyBk
dXJhdGlvbiA9IGdldER1cmF0aW9uKCk7DQotCQlib29sZWFuIGxvY2sgPSBqb2JMb2NrRmllbGQu
Z2V0U2VsZWN0aW9uKCk7DQotCQlib29sZWFuIHN5c3RlbSA9IHN5c3RlbUZpZWxkLmdldFNlbGVj
dGlvbigpOw0KLQkJYm9vbGVhbiB1c2VHcm91cCA9IGdyb3VwRmllbGQuZ2V0U2VsZWN0aW9uKCk7
DQotCQlib29sZWFuIHVzZXIgPSB1c2VyRmllbGQuZ2V0U2VsZWN0aW9uKCk7DQotCQlib29sZWFu
IHJlc2NoZWR1bGUgPSByZXNjaGVkdWxlRmllbGQuZ2V0U2VsZWN0aW9uKCk7DQotCQlmaW5hbCBs
b25nIHJlc2NoZWR1bGVXYWl0ID0gTG9uZy5wYXJzZUxvbmcocmVzY2hlZHVsZURlbGF5LmdldFRl
eHQoKSk7DQotCQlib29sZWFuIHJldHVybkVycm9yID0gcmV0dXJuRXJyb3JTdGF0dXMuZ2V0U2Vs
ZWN0aW9uKCk7DQotCQlUaHJvd2FibGUgdGhyb3dhYmxlID0gZ2V0RXhjZXB0aW9uKCk7DQotCQls
b25nIHRocm93QWZ0ZXIgPSBnZXRUaHJvd0FmdGVyKGR1cmF0aW9uKTsNCi0NCi0JCWludCBncm91
cEluY3JlbWVudCA9IElQcm9ncmVzc01vbml0b3IuVU5LTk9XTjsNCi0JCUlQcm9ncmVzc01vbml0
b3IgZ3JvdXAgPSBuZXcgTnVsbFByb2dyZXNzTW9uaXRvcigpOw0KLQkJaW50IHRvdGFsID0gSVBy
b2dyZXNzTW9uaXRvci5VTktOT1dOOw0KLQ0KLQkJaWYgKGpvYkNvdW50ID4gMSkgew0KLQkJCXRv
dGFsID0gMTAwOw0KLQkJCWdyb3VwSW5jcmVtZW50ID0gMTAwIC8gam9iQ291bnQ7DQotCQl9DQot
DQotCQlpZiAodXNlR3JvdXApIHsNCi0JCQlncm91cCA9IEpvYi5nZXRKb2JNYW5hZ2VyKCkuY3Jl
YXRlUHJvZ3Jlc3NHcm91cCgpOw0KLQkJCWdyb3VwLmJlZ2luVGFzaygiR3JvdXAiLCB0b3RhbCk7
IC8vJE5PTi1OTFMtMSQNCi0JCX0NCi0NCi0JCWxvbmcgZGVsYXkgPSBJbnRlZ2VyLnBhcnNlSW50
KGRlbGF5RmllbGQuZ2V0VGV4dCgpKTsNCi0JCWZvciAoaW50IGkgPSAwOyBpIDwgam9iQ291bnQ7
IGkrKykgew0KLQkJCUpvYiByZXN1bHQ7DQotCQkJaWYgKHVpKQ0KLQkJCQlyZXN1bHQgPSBuZXcg
VUlUZXN0Sm9iKGR1cmF0aW9uLCBsb2NrLCB0aHJvd0FmdGVyLCB0aHJvd2FibGUsDQotCQkJCQkJ
cmV0dXJuRXJyb3IpOw0KLQkJCWVsc2UNCi0JCQkJcmVzdWx0ID0gbmV3IFRlc3RKb2IoZHVyYXRp
b24sIGxvY2ssIHJlc2NoZWR1bGUsDQotCQkJCQkJcmVzY2hlZHVsZVdhaXQsIHRocm93QWZ0ZXIs
IHRocm93YWJsZSwgcmV0dXJuRXJyb3IpOw0KLQ0KLQkJCXJlc3VsdC5zZXRQcm9ncmVzc0dyb3Vw
KGdyb3VwLCBncm91cEluY3JlbWVudCk7DQotCQkJcmVzdWx0LnNldFN5c3RlbShzeXN0ZW0pOw0K
LQkJCXJlc3VsdC5zZXRVc2VyKHVzZXIpOw0KLQkJCXJlc3VsdC5zY2hlZHVsZShkZWxheSk7DQot
CQl9DQotCX0NCi0NCi0JLyoqDQotCSAqIA0KLQkgKi8NCi0JcHVibGljIHZvaWQgcnVubmFibGVJ
bldpbmRvdygpIHsNCi0NCi0JCWZpbmFsIGxvbmcgZHVyYXRpb24gPSBnZXREdXJhdGlvbigpOw0K
LQkJZmluYWwgbG9uZyBzbGVlcCA9IDEwOw0KLQ0KLQkJZmluYWwgVGhyb3dhYmxlIHRvQmVUaHJv
d24gPSBnZXRFeGNlcHRpb24oKTsNCi0JCWZpbmFsIGxvbmcgdGhyb3dBZnRlciA9IGdldFRocm93
QWZ0ZXIoZHVyYXRpb24pOw0KLQ0KLQkJSVJ1bm5hYmxlV2l0aFByb2dyZXNzIHJ1bm5hYmxlVGVz
dCA9IG5ldyBXb3Jrc3BhY2VNb2RpZnlPcGVyYXRpb24oKSB7DQotDQotCQkJLyoNCi0JCQkgKiAo
bm9uLUphdmFkb2MpDQotCQkJICogDQotCQkJICogQHNlZSBvcmcuZWNsaXBzZS51aS5hY3Rpb25z
LldvcmtzcGFjZU1vZGlmeU9wZXJhdGlvbiNleGVjdXRlKG9yZy5lY2xpcHNlLmNvcmUucnVudGlt
ZS5JUHJvZ3Jlc3NNb25pdG9yKQ0KLQkJCSAqLw0KLQkJCXByb3RlY3RlZCB2b2lkIGV4ZWN1dGUo
SVByb2dyZXNzTW9uaXRvciBtb25pdG9yKQ0KLQkJCQkJdGhyb3dzIENvcmVFeGNlcHRpb24sIElu
dm9jYXRpb25UYXJnZXRFeGNlcHRpb24sDQotCQkJCQlJbnRlcnJ1cHRlZEV4Y2VwdGlvbiB7DQot
DQotCQkJCWludCB0aWNrcyA9IChpbnQpIChkdXJhdGlvbiAvIHNsZWVwKTsNCi0JCQkJaW50IHRp
Y2tzVG9UaHJvdyA9IChpbnQpICh0aHJvd0FmdGVyIC8gc2xlZXApOw0KLQ0KLQkJCQltb25pdG9y
LmJlZ2luVGFzaygNCi0JCQkJCQkiU3Bpbm5pbmcgaW5zaWRlIEFwcGxpY2F0aW9uV2luZG93LnJ1
bigpIiwgdGlja3MpOyAvLyROT04tTkxTLTEkDQotCQkJCW1vbml0b3Iuc2V0VGFza05hbWUoIlNw
aW5uaW5nIGluc2lkZSBBcHBsaWNhdGlvbldpbmRvdy5ydW4oKSIpOyAvLyROT04tTkxTLTEkDQot
CQkJCWZvciAoaW50IGkgPSAwOyBpIDwgdGlja3M7IGkrKykgew0KLQkJCQkJbW9uaXRvci5zdWJU
YXNrKCJQcm9jZXNzaW5nIHRpY2sgIyIgKyBpKTsgLy8kTk9OLU5MUy0xJA0KLQkJCQkJaWYgKG1v
bml0b3IuaXNDYW5jZWxlZCgpKQ0KLQkJCQkJCXJldHVybjsNCi0JCQkJCXRyeSB7DQotCQkJCQkJ
VGhyZWFkLnNsZWVwKHNsZWVwKTsNCi0JCQkJCX0gY2F0Y2ggKEludGVycnVwdGVkRXhjZXB0aW9u
IGUpIHsNCi0JCQkJCQkvLyBpZ25vcmUNCi0JCQkJCX0NCi0JCQkJCWlmIChpID09IHRpY2tzVG9U
aHJvdykgew0KLQkJCQkJCXRocm93RXhjZXB0aW9uKHRvQmVUaHJvd24pOw0KLQkJCQkJCS8vIHRv
QmVUaHJvd24gaXMgbmVpdGhlciBhIHJ1bnRpbWUgZXhjZXB0aW9uIG5vciBhbg0KLQkJCQkJCS8v
IGVycm9yDQotCQkJCQkJcmV0dXJuOw0KLQkJCQkJfQ0KLQkJCQkJbW9uaXRvci53b3JrZWQoMSk7
DQotCQkJCX0NCi0JCQl9DQotDQotCQl9Ow0KLQ0KLQkJdHJ5IHsNCi0JCQlQbGF0Zm9ybVVJLmdl
dFdvcmtiZW5jaCgpLmdldEFjdGl2ZVdvcmtiZW5jaFdpbmRvdygpLnJ1bih0cnVlLA0KLQkJCQkJ
dHJ1ZSwgcnVubmFibGVUZXN0KTsNCi0JCX0gY2F0Y2ggKEludm9jYXRpb25UYXJnZXRFeGNlcHRp
b24gZSkgew0KLQkJCWUucHJpbnRTdGFja1RyYWNlKCk7DQotCQl9IGNhdGNoIChJbnRlcnJ1cHRl
ZEV4Y2VwdGlvbiBlKSB7DQotCQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCi0JCX0NCi0NCi0JfQ0K
LQ0KLQkvKioNCi0JICogQHJldHVybiBkdXJhdGlvbg0KLQkgKi8NCi0JcHJvdGVjdGVkIGxvbmcg
Z2V0RHVyYXRpb24oKSB7DQotCQlzd2l0Y2ggKGR1cmF0aW9uRmllbGQuZ2V0U2VsZWN0aW9uSW5k
ZXgoKSkgew0KLQkJY2FzZSAwOg0KLQkJCXJldHVybiAwOw0KLQkJY2FzZSAxOg0KLQkJCXJldHVy
biAxOw0KLQkJY2FzZSAyOg0KLQkJCXJldHVybiAxMDAwOw0KLQkJY2FzZSAzOg0KLQkJCXJldHVy
biAxMDAwMDsNCi0JCWNhc2UgNDoNCi0JCQlyZXR1cm4gNjAwMDA7DQotCQljYXNlIDU6DQotCQlk
ZWZhdWx0Og0KLQkJCXJldHVybiA2MDAwMDA7DQotCQl9DQotCX0NCi0NCi0JLyoqDQotCSAqIEBy
ZXR1cm4gdGhyb3dhYmxlDQotCSAqLw0KLQlwcm90ZWN0ZWQgVGhyb3dhYmxlIGdldEV4Y2VwdGlv
bigpIHsNCi0NCi0JCXN3aXRjaCAoZXhjZXB0aW9uRmllbGQuZ2V0U2VsZWN0aW9uSW5kZXgoKSkg
ew0KLQkJY2FzZSAwOg0KLQkJCXJldHVybiBuZXcgTnVsbFBvaW50ZXJFeGNlcHRpb24oIkEgc2Ft
cGxlIE51bGxQb2ludGVyRXhjZXB0aW9uIik7DQotCQljYXNlIDE6DQotCQkJcmV0dXJuIG5ldyBP
dXRPZk1lbW9yeUVycm9yKCJBIHNhbXBsZSBPdXRPZk1lbW9yeUVycm9yIik7DQotCQljYXNlIDI6
DQotCQkJcmV0dXJuIG5ldyBJbmRleE91dE9mQm91bmRzRXhjZXB0aW9uKA0KLQkJCQkJIkEgc2Ft
cGxlIEluZGV4T3V0T2ZCb3VuZHNFeGNlcHRpb24iKTsNCi0JCWRlZmF1bHQ6DQotCQkJcmV0dXJu
IG5ldyBOdWxsUG9pbnRlckV4Y2VwdGlvbigiQSBzYW1wbGUgTnVsbFBvaW50ZXJFeGNlcHRpb24i
KTsNCi0NCi0JCX0NCi0JfQ0KLQ0KLQlwcml2YXRlIGxvbmcgZ2V0VGhyb3dBZnRlcihsb25nIGR1
cmF0aW9uKSB7DQotCQlyZXR1cm4gTWF0aC5yb3VuZCgoKGRvdWJsZSkgZHVyYXRpb24pDQotCQkJ
CSogKCgoZG91YmxlKSBwZXJjZW50LmdldFNlbGVjdGlvbigpKSAvIDEwMC4wKSk7DQotCX0NCi0N
Ci0JcHJpdmF0ZSB2b2lkIHRocm93RXhjZXB0aW9uKFRocm93YWJsZSB0aCkgew0KLQkJaWYgKHRo
ID09IG51bGwpDQotCQkJcmV0dXJuOw0KLQ0KLQkJaWYgKHRoIGluc3RhbmNlb2YgUnVudGltZUV4
Y2VwdGlvbikNCi0JCQl0aHJvdyAoUnVudGltZUV4Y2VwdGlvbikgdGg7DQotDQotCQlpZiAodGgg
aW5zdGFuY2VvZiBFcnJvcikgew0KLQkJCXRocm93IChFcnJvcikgdGg7DQotCQl9DQotDQotCQkv
LyBUT0RPIGRvIHNvbWV0aGluZyAhISB0aGUgZXhjZXB0aW9uIGNhbm5vdCBiZSB0aHJvd24NCi0J
fQ0KLQ0KLQkvKioNCi0JICogQSByZWdpc3RyeSByZWFkZXIgZm9yIHNhbXBsZSBleHRlbnNpb24g
cG9pbnQuDQotCSAqLw0KLQlwcml2YXRlIHN0YXRpYyBjbGFzcyBTYW1wbGVSZWdpc3RyeVJlYWRl
ciBleHRlbmRzIFJlZ2lzdHJ5UmVhZGVyIHsNCi0NCi0JCS8qKg0KLQkJICogQ3JlYXRlIGEgbmV3
IGluc3RhbmNlIG9mIHRoZSByZWNlaXZlci4NCi0JCSAqIA0KLQkJICovDQotCQlwdWJsaWMgU2Ft
cGxlUmVnaXN0cnlSZWFkZXIoKSB7DQotCQkJc3VwZXIoKTsNCi0JCX0NCi0NCi0JCS8qDQotCQkg
KiAobm9uLUphdmFkb2MpDQotCQkgKiANCi0JCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuaW50ZXJu
YWwucmVnaXN0cnkuUmVnaXN0cnlSZWFkZXIjcmVhZEVsZW1lbnQob3JnLmVjbGlwc2UuY29yZS5y
dW50aW1lLklDb25maWd1cmF0aW9uRWxlbWVudCkNCi0JCSAqLw0KLQkJcHJvdGVjdGVkIGJvb2xl
YW4gcmVhZEVsZW1lbnQoSUNvbmZpZ3VyYXRpb25FbGVtZW50IGVsZW1lbnQpIHsNCi0NCi0JCQlT
dHJpbmcgbmFtZSA9IGVsZW1lbnQuZ2V0TmFtZSgpOw0KLQ0KLQkJCWlmIChuYW1lICE9IG51bGwp
IHsNCi0JCQkJaWYgKCFuYW1lLmVxdWFscygicmVxdWlyZWRFbGVtZW50IikpDQotCQkJCQlyZXR1
cm4gZmFsc2U7DQotCQkJfQ0KLQkJCXJldHVybiB0cnVlOw0KLQkJfQ0KLQl9DQotDQotCXByaXZh
dGUgY2xhc3MgQ29udGVudFByb3ZpZGVyIGltcGxlbWVudHMgSVN0cnVjdHVyZWRDb250ZW50UHJv
dmlkZXIgew0KLQ0KLQkJLyoNCi0JCSAqIChub24tSmF2YWRvYykNCi0JCSAqIA0KLQkJICogQHNl
ZSBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLklTdHJ1Y3R1cmVkQ29udGVudFByb3ZpZGVyI2dl
dEVsZW1lbnRzKGphdmEubGFuZy5PYmplY3QpDQotCQkgKi8NCi0JCXB1YmxpYyBPYmplY3RbXSBn
ZXRFbGVtZW50cyhPYmplY3QgaW5wdXRFbGVtZW50KSB7DQotCQkJcmV0dXJuIHN0YXR1c0l0ZW1z
LnRvQXJyYXkoKTsNCi0JCX0NCi0NCi0JCS8qDQotCQkgKiAobm9uLUphdmFkb2MpDQotCQkgKiAN
Ci0JCSAqIEBzZWUgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5JQ29udGVudFByb3ZpZGVyI2Rp
c3Bvc2UoKQ0KLQkJICovDQotCQlwdWJsaWMgdm9pZCBkaXNwb3NlKCkgew0KLQ0KLQkJfQ0KLQ0K
LQkJLyoNCi0JCSAqIChub24tSmF2YWRvYykNCi0JCSAqIA0KLQkJICogQHNlZSBvcmcuZWNsaXBz
ZS5qZmFjZS52aWV3ZXJzLklDb250ZW50UHJvdmlkZXIjaW5wdXRDaGFuZ2VkKG9yZy5lY2xpcHNl
LmpmYWNlLnZpZXdlcnMuVmlld2VyLA0KLQkJICogICAgICBqYXZhLmxhbmcuT2JqZWN0LCBqYXZh
LmxhbmcuT2JqZWN0KQ0KLQkJICovDQotCQlwdWJsaWMgdm9pZCBpbnB1dENoYW5nZWQoVmlld2Vy
IHZpZXdlciwgT2JqZWN0IG9sZElucHV0LCBPYmplY3QgbmV3SW5wdXQpIHsNCi0NCi0JCX0NCi0N
Ci0JfQ0KLQ0KLQkvKioNCi0JICogQW4gaXRlbSB0byBiZSBkaXNwbGF5ZWQgaW4gdGhlIHRhYmxl
Lg0KLQkgKi8NCi0JcHJpdmF0ZSBzdGF0aWMgY2xhc3MgRGlzcGxheWVkSXRlbSB7DQotDQotCQlw
cml2YXRlIGludCBoaW50Ow0KLQ0KLQkJcHJpdmF0ZSBJU3RhdHVzIHN0YXR1czsNCi0NCi0JCS8q
Kg0KLQkJICogQ29uc3RydWN0cyBhIG5ldyBpdGVtLg0KLQkJICogDQotCQkgKiBAcGFyYW0gc3Rh
dHVzDQotCQkgKiBAcGFyYW0gaGludA0KLQkJICovDQotCQlwdWJsaWMgRGlzcGxheWVkSXRlbShJ
U3RhdHVzIHN0YXR1cywgaW50IGhpbnQpIHsNCi0JCQlpZiAoc3RhdHVzID09IG51bGwpDQotCQkJ
CXRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oKTsNCi0JCQl0aGlzLnN0YXR1cyA9
IHN0YXR1czsNCi0JCQl0aGlzLmhpbnQgPSBoaW50Ow0KLQkJfQ0KLQ0KLQkJcHVibGljIFN0cmlu
ZyB0b1N0cmluZygpIHsNCi0NCi0JCQlTdHJpbmcgc2V2ZXJpdHkgPSAiPyI7DQotDQotCQkJc3dp
dGNoIChzdGF0dXMuZ2V0U2V2ZXJpdHkoKSkgew0KLQkJCWNhc2UgSVN0YXR1cy5DQU5DRUw6DQot
CQkJCXNldmVyaXR5ID0gIkNhbmNlbCI7DQotCQkJCWJyZWFrOw0KLQkJCWNhc2UgSVN0YXR1cy5F
UlJPUjoNCi0JCQkJc2V2ZXJpdHkgPSAiRXJyb3IiOw0KLQkJCQlicmVhazsNCi0JCQljYXNlIElT
dGF0dXMuSU5GTzoNCi0JCQkJc2V2ZXJpdHkgPSAiSW5mbyI7DQotCQkJCWJyZWFrOw0KLQkJCWNh
c2UgSVN0YXR1cy5PSzoNCi0JCQkJc2V2ZXJpdHkgPSAiT2siOw0KLQkJCQlicmVhazsNCi0JCQlj
YXNlIElTdGF0dXMuV0FSTklORzoNCi0JCQkJc2V2ZXJpdHkgPSAiV2FybmluZyI7DQotCQkJCWJy
ZWFrOw0KLQkJCX0NCi0NCi0JCQlTdHJpbmcgc3RyaW5nSGludCA9ICI/IjsNCi0NCi0JCQlzd2l0
Y2ggKGhpbnQpIHsNCi0JCQljYXNlIFN0YXR1c01hbmFnZXIuTE9HOg0KLQkJCQlzdHJpbmdIaW50
ID0gIkxPRyI7DQotCQkJCWJyZWFrOw0KLQkJCWNhc2UgU3RhdHVzTWFuYWdlci5OT05FOg0KLQkJ
CQlzdHJpbmdIaW50ID0gIk5PTkUiOw0KLQkJCQlicmVhazsNCi0JCQljYXNlIFN0YXR1c01hbmFn
ZXIuU0hPVzoNCi0JCQkJc3RyaW5nSGludCA9ICJTSE9XIjsNCi0JCQkJYnJlYWs7DQotCQkJY2Fz
ZSBTdGF0dXNNYW5hZ2VyLlNIT1cgfCBTdGF0dXNNYW5hZ2VyLkxPRzoNCi0JCQkJc3RyaW5nSGlu
dCA9ICJTSE9XQU5ETE9HIjsNCi0JCQkJYnJlYWs7DQotCQkJfQ0KLQ0KLQkJCXJldHVybiAiU2V2
ZXJpdHk6ICIgKyBzZXZlcml0eSArICIgICBQbHVnaW5JRDogIg0KLQkJCQkJKyBzdGF0dXMuZ2V0
UGx1Z2luKCkgKyAiICAgSGludDogIiArIHN0cmluZ0hpbnQ7DQotCQl9DQotDQotCQkvKioNCi0J
CSAqIEByZXR1cm4gdGhlIGhpbnQNCi0JCSAqLw0KLQkJcHVibGljIGludCBnZXRIaW50KCkgew0K
LQkJCXJldHVybiBoaW50Ow0KLQkJfQ0KLQ0KLQkJLyoqDQotCQkgKiBAcmV0dXJuIHRoZSBzdGF0
dXMNCi0JCSAqLw0KLQkJcHVibGljIElTdGF0dXMgZ2V0U3RhdHVzKCkgew0KLQkJCXJldHVybiBz
dGF0dXM7DQotCQl9DQotCX0NCi0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVk
L29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1BhcnRJbml0RXhjZXB0
aW9uRWRpdG9yLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiBTdGF0dXMgSGFuZGxpbmcgVGVz
dCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3MvUGFydEluaXRF
eGNlcHRpb25FZGl0b3IuamF2YQ0KZGlmZiAtTiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3Jn
L2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3MvUGFydEluaXRFeGNlcHRpb25F
ZGl0b3IuamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90
ZXN0cy9zdGF0dXNoYW5kbGVycy92aWV3cy9QYXJ0SW5pdEV4Y2VwdGlvbkVkaXRvci5qYXZhCTEx
IEFwciAyMDA3IDE1OjA5OjM3IC0wMDAwCTEuMg0KKysrIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAw
OjAwOjAwIC0wMDAwDQpAQCAtMSw1OCArMCwwIEBADQotLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioN
Ci0gKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMDcgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMu
DQotICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55
aW5nIG1hdGVyaWFscw0KLSAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2Yg
dGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KLSAqIHdoaWNoIGFjY29tcGFuaWVzIHRo
aXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQotICogaHR0cDovL3d3dy5lY2xp
cHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwNCi0gKg0KLSAqIENvbnRyaWJ1dG9yczoNCi0gKiAg
ICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKiovDQotcGFja2FnZSBvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0
dXNoYW5kbGVycy52aWV3czsNCi0NCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQ
cm9ncmVzc01vbml0b3I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC53aWRnZXRzLkNvbXBvc2l0
ZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSUVkaXRvcklucHV0Ow0KLWltcG9ydCBvcmcuZWNs
aXBzZS51aS5JRWRpdG9yU2l0ZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuUGFydEluaXRFeGNl
cHRpb247DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLnBhcnQuRWRpdG9yUGFydDsNCi0NCi0vKioN
Ci0gKiANCi0gKi8NCi1wdWJsaWMgY2xhc3MgUGFydEluaXRFeGNlcHRpb25FZGl0b3IgZXh0ZW5k
cyBFZGl0b3JQYXJ0IHsNCi0NCi0JcHVibGljIHZvaWQgZG9TYXZlKElQcm9ncmVzc01vbml0b3Ig
bW9uaXRvcikgew0KLQ0KLQl9DQotDQotCXB1YmxpYyB2b2lkIGRvU2F2ZUFzKCkgew0KLQ0KLQl9
DQotDQotCXB1YmxpYyB2b2lkIGluaXQoSUVkaXRvclNpdGUgc2l0ZSwgSUVkaXRvcklucHV0IGlu
cHV0KQ0KLQkJCXRocm93cyBQYXJ0SW5pdEV4Y2VwdGlvbiB7DQotCQl0aHJvdyBuZXcgUGFydElu
aXRFeGNlcHRpb24oDQotCQkJCSJBIHNhbXBsZSBQYXJ0SW5pdEV4Y2VwdGlvbiB0aHJvd24gZHVy
aW5nIHZpZXdwYXJ0IGluaXRpYWxpemF0aW9uLiIpOw0KLQ0KLQl9DQotDQotCXB1YmxpYyBib29s
ZWFuIGlzRGlydHkoKSB7DQotDQotCQlyZXR1cm4gZmFsc2U7DQotCX0NCi0NCi0JcHVibGljIGJv
b2xlYW4gaXNTYXZlQXNBbGxvd2VkKCkgew0KLQ0KLQkJcmV0dXJuIGZhbHNlOw0KLQl9DQotDQot
CXB1YmxpYyB2b2lkIGNyZWF0ZVBhcnRDb250cm9sKENvbXBvc2l0ZSBwYXJlbnQpIHsNCi0NCi0J
fQ0KLQ0KLQlwdWJsaWMgdm9pZCBzZXRGb2N1cygpIHsNCi0NCi0JfQ0KLQ0KLX0NCkluZGV4OiBT
dGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxl
cnMvaGFuZGxlcnMvRWNsaXBzZVN0YXR1cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3Rh
dHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJz
L2hhbmRsZXJzL0VjbGlwc2VTdGF0dXMuamF2YQ0KZGlmZiAtTiBTdGF0dXMgSGFuZGxpbmcgVGVz
dCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvaGFuZGxlcnMvRWNsaXBz
ZVN0YXR1cy5qYXZhDQotLS0gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3Vp
L3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2hhbmRsZXJzL0VjbGlwc2VTdGF0dXMuamF2YQkxMSBBcHIg
MjAwNyAxNTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDow
MCAtMDAwMA0KQEAgLTEsNjQgKzAsMCBAQA0KLS8qKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICog
Q29weXJpZ2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAq
IEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBt
YXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBF
Y2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRp
c3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5v
cmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBDb250cmlidXRvcnM6DQotICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KLSAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFu
ZGxlcnMuaGFuZGxlcnM7DQotDQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVn
aXN0cnkub3NnaS5PU0dJVXRpbHM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5J
U3RhdHVzOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuTXVsdGlTdGF0dXM7DQot
aW1wb3J0IG9yZy5vc2dpLmZyYW1ld29yay5CdW5kbGU7DQotDQotLyoqDQotICogQW4gRWNsaXBz
ZVN0YXR1cyByZXRyaWV2ZXMgdGhlIGJ1bmRsZSB3aGljaCBzZW50IHRoZSBlbWJlZGRlZCBzdGF0
dXMuDQotICogDQotICovDQotcHVibGljIGNsYXNzIEVjbGlwc2VTdGF0dXMgZXh0ZW5kcyBNdWx0
aVN0YXR1cyBpbXBsZW1lbnRzIElTdGF0dXMgew0KLQ0KLQlwcml2YXRlIEJ1bmRsZSBidW5kbGU7
DQotCXByaXZhdGUgU3RyaW5nIGxvY2F0aW9uOw0KLQ0KLQkvKioNCi0JICogQHBhcmFtIHBsdWdp
bklkDQotCSAqIEBwYXJhbSBjb2RlDQotCSAqIEBwYXJhbSBuZXdDaGlsZHJlbg0KLQkgKiBAcGFy
YW0gbWVzc2FnZQ0KLQkgKiBAcGFyYW0gZXhjZXB0aW9uDQotCSAqLw0KLQlwdWJsaWMgRWNsaXBz
ZVN0YXR1cyhTdHJpbmcgcGx1Z2luSWQsIGludCBjb2RlLCBJU3RhdHVzW10gbmV3Q2hpbGRyZW4s
DQotCQkJU3RyaW5nIG1lc3NhZ2UsIFRocm93YWJsZSBleGNlcHRpb24pIHsNCi0JCXN1cGVyKHBs
dWdpbklkLCBjb2RlLCBuZXdDaGlsZHJlbiwgbWVzc2FnZSwgZXhjZXB0aW9uKTsNCi0JCWluaXRM
b2NhdGlvbihwbHVnaW5JZCk7DQotCX0NCi0NCi0JLyoqDQotCSAqIEBwYXJhbSBwbHVnaW5JZA0K
LQkgKiBAcGFyYW0gY29kZQ0KLQkgKiBAcGFyYW0gbWVzc2FnZQ0KLQkgKiBAcGFyYW0gZXhjZXB0
aW9uDQotCSAqLw0KLQlwdWJsaWMgRWNsaXBzZVN0YXR1cyhTdHJpbmcgcGx1Z2luSWQsIGludCBj
b2RlLCBTdHJpbmcgbWVzc2FnZSwNCi0JCQlUaHJvd2FibGUgZXhjZXB0aW9uKSB7DQotCQlzdXBl
cihwbHVnaW5JZCwgY29kZSwgbWVzc2FnZSwgZXhjZXB0aW9uKTsNCi0JCWluaXRMb2NhdGlvbihw
bHVnaW5JZCk7DQotCX0NCi0NCi0JcHJpdmF0ZSB2b2lkIGluaXRMb2NhdGlvbihTdHJpbmcgcGx1
Z2luSWQpIHsNCi0JCWJ1bmRsZSA9IE9TR0lVdGlscy5nZXREZWZhdWx0KCkuZ2V0QnVuZGxlKHBs
dWdpbklkKTsNCi0JCWlmIChidW5kbGUgIT0gbnVsbCkgew0KLQkJCWxvY2F0aW9uID0gYnVuZGxl
LmdldExvY2F0aW9uKCk7DQotCQl9DQotCX0NCi0NCi0JcHVibGljIFN0cmluZyB0b1N0cmluZygp
IHsNCi0JCVN0cmluZ0J1ZmZlciBidWYgPSBuZXcgU3RyaW5nQnVmZmVyKGxvY2F0aW9uKTsNCi0J
CWJ1Zi5hcHBlbmQoc3VwZXIudG9TdHJpbmcoKSk7DQotCQlyZXR1cm4gYnVmLnRvU3RyaW5nKCk7
DQotCX0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3Vp
L3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvVGhyb3dOdWxsUG9pbnRlckFjdGlvbi5qYXZh
DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xp
cHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvVGhyb3dOdWxsUG9pbnRlckFjdGlv
bi5qYXZhDQpkaWZmIC1OIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90
ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL1Rocm93TnVsbFBvaW50ZXJBY3Rpb24uamF2YQ0K
LS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNo
YW5kbGVycy9hY3Rpb25zL1Rocm93TnVsbFBvaW50ZXJBY3Rpb24uamF2YQkxMSBBcHIgMjAwNyAx
NTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAw
MA0KQEAgLTEsNzAgKzAsMCBAQA0KLS8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJp
Z2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlh
bHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNl
IFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1
dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVn
YWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBDb250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jw
b3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMu
YWN0aW9uczsNCi0NCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb247DQot
aW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbjsNCi1pbXBvcnQgb3Jn
LmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdzsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdv
cmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlOw0KLQ0KLS8qKg0KLSAqIENyZWF0ZXMgYSBzdGF0
dXMgd2l0aCBOdWxsUG9pbnRlckV4Y2VwdGlvbiBhbmQgcGFzc2VzIGl0IHRvIGVycm9yIGhhbmRs
aW5nDQotICogZmFjaWxpdHkuDQotICovDQotcHVibGljIGNsYXNzIFRocm93TnVsbFBvaW50ZXJB
Y3Rpb24gaW1wbGVtZW50cyBJV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUgew0KLQ0KLQkv
KioNCi0JICogVGhlIGNvbnN0cnVjdG9yLg0KLQkgKi8NCi0JcHVibGljIFRocm93TnVsbFBvaW50
ZXJBY3Rpb24oKSB7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0J
ICogQHNlZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjcnVu
KG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uKQ0KLQkgKi8NCi0JcHVibGljIHZvaWQg
cnVuKElBY3Rpb24gYWN0aW9uKSB7DQotCQl0aHJvdyBuZXcgTnVsbFBvaW50ZXJFeGNlcHRpb24o
IlNhbXBsZSBOdWxsUG9pbnRlckV4Y2VwdGlvbiIpOw0KLQkJLy8gU3RhdHVzIHN0YXR1cyA9IG5l
dyBTdGF0dXMoSVN0YXR1cy5FUlJPUiwNCi0JCS8vIFdvcmtiZW5jaFBsdWdpbi5QSV9XT1JLQkVO
Q0gsDQotCQkvLyAiTnVsbFBvaW50ZXJFeGNlcHRpb24gaGFuZGxlZCBieSB1c2VyIGFuZCBwYXNz
ZWQgdG8gZXJyb3IgaGFuZGxlcg0KLQkJLy8gZmFjaWxpdHkgdmlhIEVycm9yTWFuYWdlciBvYmpl
Y3QiLA0KLQkJLy8gbmV3IE51bGxQb2ludGVyRXhjZXB0aW9uKCJOdWxsUG9pbnRlckV4Y2VwdGlv
biIpKTsgLy8kTk9OLU5MUy0xJA0KLQkJLy8gLy8kTk9OLU5MUy0yJA0KLQkJLy8gU3RhdHVzTWFu
YWdlci5nZXRNYW5hZ2VyKCkuaGFuZGxlKHN0YXR1cyk7DQotCX0NCi0NCi0JLyoNCi0JICogKG5v
bi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2lu
ZG93QWN0aW9uRGVsZWdhdGUjZGlzcG9zZSgpDQotCSAqLw0KLQlwdWJsaWMgdm9pZCBkaXNwb3Nl
KCkgew0KLQl9DQotDQotCS8qDQotCSAqIChub24tSmF2YWRvYykNCi0JICogDQotCSAqIEBzZWUg
b3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlI2luaXQob3JnLmVj
bGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdykNCi0JICovDQotCXB1YmxpYyB2b2lkIGluaXQoSVdv
cmtiZW5jaFdpbmRvdyB3aW5kb3cpIHsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2Mp
DQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklBY3Rpb25EZWxlZ2F0ZSNzZWxlY3Rp
b25DaGFuZ2VkKG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uLA0KLQkgKiAgICAgIG9y
Zy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbikNCi0JICovDQotCXB1YmxpYyB2b2lk
IHNlbGVjdGlvbkNoYW5nZWQoSUFjdGlvbiBhY3Rpb24sIElTZWxlY3Rpb24gc2VsZWN0aW9uKSB7
DQotCX0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3Vp
L3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3BlbkluZm9EaWFsb2dBY3Rpb24uamF2YQ0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KUkNTIGZpbGU6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBz
ZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL09wZW5JbmZvRGlhbG9nQWN0aW9uLmph
dmENCmRpZmYgLU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3Rz
L3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3BlbkluZm9EaWFsb2dBY3Rpb24uamF2YQ0KLS0tIFN0
YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVy
cy9hY3Rpb25zL09wZW5JbmZvRGlhbG9nQWN0aW9uLmphdmEJMTEgQXByIDIwMDcgMTU6MDk6Mzcg
LTAwMDAJMS4yDQorKysgL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0x
LDY3ICswLDAgQEANCi0vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykg
MjAwNSwgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wDQotICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQNCi0gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12
MTAuaHRtbA0KLSAqDQotICogQ29udHJpYnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8NCi1wYWNrYWdlIG9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLmFjdGlvbnM7
DQotDQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uOw0KLWltcG9ydCBv
cmcuZWNsaXBzZS5qZmFjZS5kaWFsb2dzLk1lc3NhZ2VEaWFsb2c7DQotaW1wb3J0IG9yZy5lY2xp
cHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdv
cmtiZW5jaFdpbmRvdzsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0Fj
dGlvbkRlbGVnYXRlOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5QbGF0Zm9ybVVJOw0KLQ0KLS8q
Kg0KLSAqIFRocm93cyBPdXRPZk1lbW9yeUVycm9yIGVycm9yLg0KLSAqLw0KLXB1YmxpYyBjbGFz
cyBPcGVuSW5mb0RpYWxvZ0FjdGlvbiBpbXBsZW1lbnRzIElXb3JrYmVuY2hXaW5kb3dBY3Rpb25E
ZWxlZ2F0ZSB7DQotDQotCS8qKg0KLQkgKiBUaGUgY29uc3RydWN0b3IuDQotCSAqLw0KLQlwdWJs
aWMgT3BlbkluZm9EaWFsb2dBY3Rpb24oKSB7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZh
ZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0
aW9uRGVsZWdhdGUjcnVuKG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uKQ0KLQkgKi8N
Ci0JcHVibGljIHZvaWQgcnVuKElBY3Rpb24gYWN0aW9uKSB7DQotCQlNZXNzYWdlRGlhbG9nLm9w
ZW5JbmZvcm1hdGlvbihQbGF0Zm9ybVVJLmdldFdvcmtiZW5jaCgpDQotCQkJCS5nZXRBY3RpdmVX
b3JrYmVuY2hXaW5kb3coKS5nZXRTaGVsbCgpLA0KLQkJCQkiTWVzc2FnZURpYWxvZzpvcGVuSW5m
b3JtYXRpb24oKSIsDQotCQkJCSJNZXNzYWdlRGlhbG9nOm9wZW5JbmZvcm1hdGlvbigpIik7DQot
CX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNs
aXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjZGlzcG9zZSgpDQotCSAqLw0K
LQlwdWJsaWMgdm9pZCBkaXNwb3NlKCkgew0KLQl9DQotDQotCS8qDQotCSAqIChub24tSmF2YWRv
YykNCi0JICogDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlv
bkRlbGVnYXRlI2luaXQob3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdykNCi0JICovDQot
CXB1YmxpYyB2b2lkIGluaXQoSVdvcmtiZW5jaFdpbmRvdyB3aW5kb3cpIHsNCi0JfQ0KLQ0KLQkv
Kg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklB
Y3Rpb25EZWxlZ2F0ZSNzZWxlY3Rpb25DaGFuZ2VkKG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5J
QWN0aW9uLA0KLQkgKiAgICAgIG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbikN
Ci0JICovDQotCXB1YmxpYyB2b2lkIHNlbGVjdGlvbkNoYW5nZWQoSUFjdGlvbiBhY3Rpb24sIElT
ZWxlY3Rpb24gc2VsZWN0aW9uKSB7DQotCX0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRl
c3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvVGhyb3dP
dXRPZk1lbW9yeUFjdGlvbi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRs
aW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMv
VGhyb3dPdXRPZk1lbW9yeUFjdGlvbi5qYXZhDQpkaWZmIC1OIFN0YXR1cyBIYW5kbGluZyBUZXN0
IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL1Rocm93T3V0
T2ZNZW1vcnlBY3Rpb24uamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNs
aXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL1Rocm93T3V0T2ZNZW1vcnlBY3Rp
b24uamF2YQkxMSBBcHIgMjAwNyAxNTowOTozNiAtMDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBK
YW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEsNjIgKzAsMCBAQA0KLS8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBh
bmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhl
IGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2Nv
bXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6
Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBDb250cmlidXRv
cnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRh
dGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWku
dGVzdHMuc3RhdHVzaGFuZGxlcnMuYWN0aW9uczsNCi0NCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZh
Y2UuYWN0aW9uLklBY3Rpb247DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNl
bGVjdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdzsNCi1pbXBv
cnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlOw0KLQ0KLS8q
Kg0KLSAqIFRocm93cyBPdXRPZk1lbW9yeUVycm9yIGVycm9yLg0KLSAqLw0KLXB1YmxpYyBjbGFz
cyBUaHJvd091dE9mTWVtb3J5QWN0aW9uIGltcGxlbWVudHMgSVdvcmtiZW5jaFdpbmRvd0FjdGlv
bkRlbGVnYXRlIHsNCi0NCi0JLyoqDQotCSAqIFRoZSBjb25zdHJ1Y3Rvci4NCi0JICovDQotCXB1
YmxpYyBUaHJvd091dE9mTWVtb3J5QWN0aW9uKCkgew0KLQl9DQotDQotCS8qDQotCSAqIChub24t
SmF2YWRvYykNCi0JICogDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRv
d0FjdGlvbkRlbGVnYXRlI3J1bihvcmcuZWNsaXBzZS5qZmFjZS5hY3Rpb24uSUFjdGlvbikNCi0J
ICovDQotCXB1YmxpYyB2b2lkIHJ1bihJQWN0aW9uIGFjdGlvbikgew0KLQkJdGhyb3cgbmV3IE91
dE9mTWVtb3J5RXJyb3IoIk91dE9mTWVtb3J5IGV4Y2VwdGlvbiBub3QgaGFuZGxlZCBieSB1c2Vy
Iik7IC8vJE5PTi1OTFMtMSQNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAq
IA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklXb3JrYmVuY2hXaW5kb3dBY3Rpb25EZWxlZ2F0
ZSNkaXNwb3NlKCkNCi0JICovDQotCXB1YmxpYyB2b2lkIGRpc3Bvc2UoKSB7DQotCX0NCi0NCi0J
LyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51aS5J
V29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjaW5pdChvcmcuZWNsaXBzZS51aS5JV29ya2Jl
bmNoV2luZG93KQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgaW5pdChJV29ya2JlbmNoV2luZG93IHdp
bmRvdykgew0KLQl9DQotDQotCS8qDQotCSAqIChub24tSmF2YWRvYykNCi0JICogDQotCSAqIEBz
ZWUgb3JnLmVjbGlwc2UudWkuSUFjdGlvbkRlbGVnYXRlI3NlbGVjdGlvbkNoYW5nZWQob3JnLmVj
bGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb24sDQotCSAqICAgICAgb3JnLmVjbGlwc2UuamZhY2Uu
dmlld2Vycy5JU2VsZWN0aW9uKQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgc2VsZWN0aW9uQ2hhbmdl
ZChJQWN0aW9uIGFjdGlvbiwgSVNlbGVjdGlvbiBzZWxlY3Rpb24pIHsNCi0JfQ0KLX0NCkluZGV4
OiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFu
ZGxlcnMvYWN0aW9ucy9PcGVuRXJyb3JEaWFsb2dBY3Rpb24uamF2YQ0KPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNT
IGZpbGU6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0
dXNoYW5kbGVycy9hY3Rpb25zL09wZW5FcnJvckRpYWxvZ0FjdGlvbi5qYXZhDQpkaWZmIC1OIFN0
YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVy
cy9hY3Rpb25zL09wZW5FcnJvckRpYWxvZ0FjdGlvbi5qYXZhDQotLS0gU3RhdHVzIEhhbmRsaW5n
IFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3Bl
bkVycm9yRGlhbG9nQWN0aW9uLmphdmEJMTEgQXByIDIwMDcgMTU6MDk6MzYgLTAwMDAJMS4yDQor
KysgL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0xLDY2ICswLDAgQEAN
Ci0vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBJ
Qk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlz
IHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZh
aWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4w
DQotICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQNCi0gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAq
DQotICogQ29udHJpYnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQ
SSBhbmQgaW1wbGVtZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi1wYWNrYWdl
IG9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLmFjdGlvbnM7DQotDQotaW1wb3J0
IG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5q
ZmFjZS5kaWFsb2dzLk1lc3NhZ2VEaWFsb2c7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZp
ZXdlcnMuSVNlbGVjdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRv
dzsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRl
Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5QbGF0Zm9ybVVJOw0KLQ0KLS8qKg0KLSAqIFRocm93
cyBPdXRPZk1lbW9yeUVycm9yIGVycm9yLg0KLSAqLw0KLXB1YmxpYyBjbGFzcyBPcGVuRXJyb3JE
aWFsb2dBY3Rpb24gaW1wbGVtZW50cyBJV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUgew0K
LQ0KLQkvKioNCi0JICogVGhlIGNvbnN0cnVjdG9yLg0KLQkgKi8NCi0JcHVibGljIE9wZW5FcnJv
ckRpYWxvZ0FjdGlvbigpIHsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAq
IA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklXb3JrYmVuY2hXaW5kb3dBY3Rpb25EZWxlZ2F0
ZSNydW4ob3JnLmVjbGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb24pDQotCSAqLw0KLQlwdWJsaWMg
dm9pZCBydW4oSUFjdGlvbiBhY3Rpb24pIHsNCi0JCU1lc3NhZ2VEaWFsb2cub3BlbkVycm9yKFBs
YXRmb3JtVUkuZ2V0V29ya2JlbmNoKCkNCi0JCQkJLmdldEFjdGl2ZVdvcmtiZW5jaFdpbmRvdygp
LmdldFNoZWxsKCksDQotCQkJCSJNZXNzYWdlRGlhbG9nOm9wZW5FcnJvcigpIiwgIk1lc3NhZ2VE
aWFsb2c6b3BlbkVycm9yKCkiKTsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQot
CSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklXb3JrYmVuY2hXaW5kb3dBY3Rpb25EZWxl
Z2F0ZSNkaXNwb3NlKCkNCi0JICovDQotCXB1YmxpYyB2b2lkIGRpc3Bvc2UoKSB7DQotCX0NCi0N
Ci0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51
aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjaW5pdChvcmcuZWNsaXBzZS51aS5JV29y
a2JlbmNoV2luZG93KQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgaW5pdChJV29ya2JlbmNoV2luZG93
IHdpbmRvdykgew0KLQl9DQotDQotCS8qDQotCSAqIChub24tSmF2YWRvYykNCi0JICogDQotCSAq
IEBzZWUgb3JnLmVjbGlwc2UudWkuSUFjdGlvbkRlbGVnYXRlI3NlbGVjdGlvbkNoYW5nZWQob3Jn
LmVjbGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb24sDQotCSAqICAgICAgb3JnLmVjbGlwc2UuamZh
Y2Uudmlld2Vycy5JU2VsZWN0aW9uKQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgc2VsZWN0aW9uQ2hh
bmdlZChJQWN0aW9uIGFjdGlvbiwgSVNlbGVjdGlvbiBzZWxlY3Rpb24pIHsNCi0JfQ0KLX0NCklu
ZGV4OiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVz
aGFuZGxlcnMvYWN0aW9ucy9PcGVuV2FybmluZ0RpYWxvZ0FjdGlvbi5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3Rz
L3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3Blbldhcm5pbmdEaWFsb2dBY3Rpb24uamF2YQ0KZGlm
ZiAtTiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVz
aGFuZGxlcnMvYWN0aW9ucy9PcGVuV2FybmluZ0RpYWxvZ0FjdGlvbi5qYXZhDQotLS0gU3RhdHVz
IEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2Fj
dGlvbnMvT3Blbldhcm5pbmdEaWFsb2dBY3Rpb24uamF2YQkxMSBBcHIgMjAwNyAxNTowOTozNyAt
MDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEs
NjYgKzAsMCBAQA0KLS8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAy
MDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sDQotICoNCi0gKiBDb250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Lw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMuYWN0aW9uczsN
Ci0NCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb247DQotaW1wb3J0IG9y
Zy5lY2xpcHNlLmpmYWNlLmRpYWxvZ3MuTWVzc2FnZURpYWxvZzsNCi1pbXBvcnQgb3JnLmVjbGlw
c2UuamZhY2Uudmlld2Vycy5JU2VsZWN0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5JV29y
a2JlbmNoV2luZG93Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0
aW9uRGVsZWdhdGU7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLlBsYXRmb3JtVUk7DQotDQotLyoq
DQotICogVGhyb3dzIE91dE9mTWVtb3J5RXJyb3IgZXJyb3IuDQotICovDQotcHVibGljIGNsYXNz
IE9wZW5XYXJuaW5nRGlhbG9nQWN0aW9uIGltcGxlbWVudHMgSVdvcmtiZW5jaFdpbmRvd0FjdGlv
bkRlbGVnYXRlIHsNCi0NCi0JLyoqDQotCSAqIFRoZSBjb25zdHJ1Y3Rvci4NCi0JICovDQotCXB1
YmxpYyBPcGVuV2FybmluZ0RpYWxvZ0FjdGlvbigpIHsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9u
LUphdmFkb2MpDQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklXb3JrYmVuY2hXaW5k
b3dBY3Rpb25EZWxlZ2F0ZSNydW4ob3JnLmVjbGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb24pDQot
CSAqLw0KLQlwdWJsaWMgdm9pZCBydW4oSUFjdGlvbiBhY3Rpb24pIHsNCi0JCU1lc3NhZ2VEaWFs
b2cub3Blbldhcm5pbmcoUGxhdGZvcm1VSS5nZXRXb3JrYmVuY2goKQ0KLQkJCQkuZ2V0QWN0aXZl
V29ya2JlbmNoV2luZG93KCkuZ2V0U2hlbGwoKSwNCi0JCQkJIk1lc3NhZ2VEaWFsb2c6b3Blbldh
cm5pbmcoKSIsICJNZXNzYWdlRGlhbG9nOm9wZW5XYXJuaW5nKCkiKTsNCi0JfQ0KLQ0KLQkvKg0K
LQkgKiAobm9uLUphdmFkb2MpDQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklXb3Jr
YmVuY2hXaW5kb3dBY3Rpb25EZWxlZ2F0ZSNkaXNwb3NlKCkNCi0JICovDQotCXB1YmxpYyB2b2lk
IGRpc3Bvc2UoKSB7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0J
ICogQHNlZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjaW5p
dChvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93KQ0KLQkgKi8NCi0JcHVibGljIHZvaWQg
aW5pdChJV29ya2JlbmNoV2luZG93IHdpbmRvdykgew0KLQl9DQotDQotCS8qDQotCSAqIChub24t
SmF2YWRvYykNCi0JICogDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuSUFjdGlvbkRlbGVnYXRl
I3NlbGVjdGlvbkNoYW5nZWQob3JnLmVjbGlwc2UuamZhY2UuYWN0aW9uLklBY3Rpb24sDQotCSAq
ICAgICAgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5JU2VsZWN0aW9uKQ0KLQkgKi8NCi0JcHVi
bGljIHZvaWQgc2VsZWN0aW9uQ2hhbmdlZChJQWN0aW9uIGFjdGlvbiwgSVNlbGVjdGlvbiBzZWxl
Y3Rpb24pIHsNCi0JfQ0KLX0NCkluZGV4OiAuY2xhc3NwYXRoDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS51aS50ZXN0cy8uY2xhc3NwYXRoLHYNCnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4yNg0KZGlmZiAtdSAtcjEuMjYgLmNsYXNzcGF0aA0KLS0tIC5j
bGFzc3BhdGgJMjcgTWFyIDIwMDcgMTc6Mzk6NDcgLTAwMDAJMS4yNg0KKysrIC5jbGFzc3BhdGgJ
NyBKYW4gMjAwOCAxNjoyNToxMCAtMDAwMA0KQEAgLTQsNyArNCw2IEBADQogCTxjbGFzc3BhdGhl
bnRyeSBraW5kPSJzcmMiIHBhdGg9IkVjbGlwc2UgVUkgVGVzdHMiLz4NCiAJPGNsYXNzcGF0aGVu
dHJ5IGtpbmQ9InNyYyIgcGF0aD0iRWNsaXBzZSBQYXJ0IFJlZmVyZW5jZXMgVGVzdCIvPg0KIAk8
Y2xhc3NwYXRoZW50cnkga2luZD0ic3JjIiBwYXRoPSJCZW5jaG1hcmsgVGVzdHMiLz4NCi0JPGNs
YXNzcGF0aGVudHJ5IGtpbmQ9InNyYyIgcGF0aD0iU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkIi8+
DQogCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLnBkZS5jb3Jl
LnJlcXVpcmVkUGx1Z2lucyIvPg0KIAk8Y2xhc3NwYXRoZW50cnkga2luZD0iY29uIiBwYXRoPSJv
cmcuZWNsaXBzZS5qZHQubGF1bmNoaW5nLkpSRV9DT05UQUlORVIiLz4NCiAJPGNsYXNzcGF0aGVu
dHJ5IGtpbmQ9Im91dHB1dCIgcGF0aD0iYmluIi8+DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRl
c3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVGVzdEpvYi5q
YXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9l
Y2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVGVzdEpvYi5qYXZhDQpkaWZmIC1O
IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5k
bGVycy9qb2JzL1Rlc3RKb2IuamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcv
ZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9qb2JzL1Rlc3RKb2IuamF2YQkxMSBBcHIg
MjAwNyAxNTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDow
MCAtMDAwMA0KQEAgLTEsMTQ5ICswLDAgQEANCi0vKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KLSAq
IENvcHlyaWdodCAoYykgMjAwNiwgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCi0g
KiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcg
bWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
RWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQotICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBk
aXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCi0gKiBodHRwOi8vd3d3LmVjbGlwc2Uu
b3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAqDQotICogQ29udHJpYnV0b3JzOg0KLSAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCi0gKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKi8NCi1wYWNrYWdlIG9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hh
bmRsZXJzLmpvYnM7DQotDQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucmVzb3VyY2VzLlJlc291
cmNlc1BsdWdpbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQcm9ncmVzc01v
bml0b3I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JU3RhdHVzOw0KLWltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuTXVsdGlTdGF0dXM7DQotaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5TdGF0dXM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGlt
ZS5qb2JzLkpvYjsNCi0NCi0vKioNCi0gKiBCYXNlIGNsYXNzIGZvciBhIHNpbXBsZSB0ZXN0IGpv
YiB3aXRoIGNvbmZpZ3VyYWJsZSBwYXJhbWV0ZXJzLg0KLSAqLw0KLXB1YmxpYyBjbGFzcyBUZXN0
Sm9iIGV4dGVuZHMgSm9iIHsNCi0JLyoqDQotCSAqIEEgZmFtaWx5IGlkZW50aWZpZXIgZm9yIGFs
bCB0ZXN0IGpvYnMNCi0JICovDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgT2JqZWN0IEZBTUlMWV9U
RVNUX0pPQiA9IG5ldyBPYmplY3QoKTsNCi0JLyoqDQotCSAqIFRvdGFsIGR1cmF0aW9uIHRoYXQg
dGhlIHRlc3Qgam9iIHNob3VsZCBzbGVlcCwgaW4gbWlsbGlzZWNvbmRzLg0KLQkgKi8NCi0JcHJp
dmF0ZSBsb25nIGR1cmF0aW9uOw0KLQ0KLQlwcml2YXRlIGJvb2xlYW4gcmVzY2hlZHVsZTsNCi0N
Ci0JcHJpdmF0ZSBsb25nIHJlc2NoZWR1bGVXYWl0Ow0KLQ0KLQlwcml2YXRlIGJvb2xlYW4gcmV0
dXJuRXJyb3I7DQotDQotCXByaXZhdGUgVGhyb3dhYmxlIHRvQmVUaHJvd247DQotDQotCXByaXZh
dGUgbG9uZyB0aHJvd0FmdGVyOw0KLQ0KLQkvKioNCi0JICogQ3JlYXRlcyBhIG5ldyB0ZXN0IGpv
Yg0KLQkgKiANCi0JICogQHBhcmFtIGR1cmF0aW9uDQotCSAqICAgICAgICAgICAgdG90YWwgdGlt
ZSB0aGF0IHRoZSB0ZXN0IGpvYiBzaG91bGQgc2xlZXAsIGluIG1pbGxpc2Vjb25kcw0KLQkgKiBA
cGFyYW0gbG9jaw0KLQkgKiAgICAgICAgICAgIHdoZXRoZXIgdGhlIGpvYiBzaG91bGQgdXNlIGEg
d29ya3NwYWNlIHNjaGVkdWxpbmcgcnVsZQ0KLQkgKiBAcGFyYW0gcmVzY2hlZHVsZVdhaXQNCi0J
ICogQHBhcmFtIHJlc2NoZWR1bGUNCi0JICogDQotCSAqIEBwYXJhbSB0aHJvd0FmdGVyDQotCSAq
IEBwYXJhbSB0b0JlVGhyb3duDQotCSAqIEBwYXJhbSByZXR1cm5FcnJvcg0KLQkgKi8NCi0JcHVi
bGljIFRlc3RKb2IobG9uZyBkdXJhdGlvbiwgYm9vbGVhbiBsb2NrLCBib29sZWFuIHJlc2NoZWR1
bGUsDQotCQkJbG9uZyByZXNjaGVkdWxlV2FpdCwgbG9uZyB0aHJvd0FmdGVyLCBUaHJvd2FibGUg
dG9CZVRocm93biwNCi0JCQlib29sZWFuIHJldHVybkVycm9yKSB7DQotCQlzdXBlcigiVGVzdCBq
b2IiKTsgLy8kTk9OLU5MUy0xJA0KLQkJdGhpcy5kdXJhdGlvbiA9IGR1cmF0aW9uOw0KLQkJdGhp
cy5yZXNjaGVkdWxlID0gcmVzY2hlZHVsZTsNCi0JCXRoaXMucmVzY2hlZHVsZVdhaXQgPSByZXNj
aGVkdWxlV2FpdDsNCi0JCXRoaXMudGhyb3dBZnRlciA9IHRocm93QWZ0ZXI7DQotCQl0aGlzLnRv
QmVUaHJvd24gPSB0b0JlVGhyb3duOw0KLQkJdGhpcy5yZXR1cm5FcnJvciA9IHJldHVybkVycm9y
Ow0KLQ0KLQkJaWYgKGxvY2spDQotCQkJc2V0UnVsZShSZXNvdXJjZXNQbHVnaW4uZ2V0V29ya3Nw
YWNlKCkuZ2V0Um9vdCgpKTsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAq
IA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwuam9icy5JbnRlcm5hbEpvYiNi
ZWxvbmdzVG8oamF2YS5sYW5nLk9iamVjdCkNCi0JICovDQotCXB1YmxpYyBib29sZWFuIGJlbG9u
Z3NUbyhPYmplY3QgZmFtaWx5KSB7DQotCQlpZiAoZmFtaWx5IGluc3RhbmNlb2YgVGVzdEpvYikg
ew0KLQkJCXJldHVybiB0cnVlOw0KLQkJfQ0KLQkJcmV0dXJuIGZhbWlseSA9PSBGQU1JTFlfVEVT
VF9KT0I7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNl
ZSBvcmcuZWNsaXBzZS5jb3JlLmludGVybmFsLmpvYnMuSW50ZXJuYWxKb2IjcnVuKG9yZy5lY2xp
cHNlLmNvcmUucnVudGltZS5JUHJvZ3Jlc3NNb25pdG9yKQ0KLQkgKi8NCi0JcHVibGljIElTdGF0
dXMgcnVuKElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikgew0KLQ0KLQkJZmluYWwgbG9uZyBzbGVl
cCA9IDEwOw0KLQkJaW50IHRpY2tzID0gKGludCkgKGR1cmF0aW9uIC8gc2xlZXApOw0KLQkJaW50
IHRpY2tzVG9UaHJvdyA9IChpbnQpICh0aHJvd0FmdGVyIC8gc2xlZXApOw0KLQ0KLQkJbW9uaXRv
ci5iZWdpblRhc2soIlVJIFRhc2siLCB0aWNrcyk7DQotCQltb25pdG9yLnNldFRhc2tOYW1lKCJV
SSBUYXNrIik7DQotCQl0cnkgew0KLQkJCWZvciAoaW50IGkgPSAwOyBpIDwgdGlja3M7IGkrKykg
ew0KLQkJCQlpZiAobW9uaXRvci5pc0NhbmNlbGVkKCkpDQotCQkJCQlyZXR1cm4gU3RhdHVzLkNB
TkNFTF9TVEFUVVM7DQotCQkJCW1vbml0b3Iuc3ViVGFzaygiUHJvY2Vzc2luZyB0aWNrICMiICsg
aSk7IC8vJE5PTi1OTFMtMSQNCi0JCQkJdHJ5IHsNCi0JCQkJCVRocmVhZC5zbGVlcChzbGVlcCk7
DQotCQkJCX0gY2F0Y2ggKEludGVycnVwdGVkRXhjZXB0aW9uIGUpIHsNCi0JCQkJCXJldHVybiBT
dGF0dXMuQ0FOQ0VMX1NUQVRVUzsNCi0JCQkJfQ0KLQkJCQlpZiAoaSA9PSB0aWNrc1RvVGhyb3cp
IHsNCi0JCQkJCWlmIChyZXR1cm5FcnJvcikgew0KLQkJCQkJCU11bHRpU3RhdHVzIHJlc3VsdCA9
IG5ldyBNdWx0aVN0YXR1cygNCi0JCQkJCQkJCSJvcmcuZWNsaXBzZS51aS5leGFtcGxlcy5zdGF0
dXNoYW5kbGluZy5qb2JzIiwgMSwgIlRoaXMgaXMgdGhlIE11bHRpU3RhdHVzIG1lc3NhZ2UiLCBu
ZXcgUnVudGltZUV4Y2VwdGlvbigiVGhpcyBpcyB0aGUgTXVsdGlTdGF0dXMgZXhjZXB0aW9uIikp
OyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgLy8kTk9OLU5MUy0zJA0KLQkJCQkJCXJlc3Vs
dA0KLQkJCQkJCQkJLmFkZChuZXcgU3RhdHVzKA0KLQkJCQkJCQkJCQlJU3RhdHVzLkVSUk9SLA0K
LQkJCQkJCQkJCQkib3JnLmVjbGlwc2UudWkuZXhhbXBsZXMuc3RhdHVzaGFuZGxpbmcuam9icyIs
IDEsICJUaGlzIGlzIHRoZSBjaGlsZCBzdGF0dXMgbWVzc2FnZSIsIHRvQmVUaHJvd24pKTsgLy8k
Tk9OLU5MUy0xJCAvLyROT04tTkxTLTIkIA0KLQkJCQkJCXJldHVybiByZXN1bHQ7DQotCQkJCQl9
DQotCQkJCQl0aHJvd0V4Y2VwdGlvbih0b0JlVGhyb3duKTsNCi0JCQkJCS8vIHRvQmVUaHJvd24g
aXMgbmVpdGhlciBhIHJ1bnRpbWUgZXhjZXB0aW9uIG5vciBhbg0KLQkJCQkJLy8gZXJyb3INCi0J
CQkJCXJldHVybiBTdGF0dXMuQ0FOQ0VMX1NUQVRVUzsNCi0NCi0JCQkJfQ0KLQ0KLQkJCQltb25p
dG9yLndvcmtlZCgxKTsNCi0JCQl9DQotCQl9IGZpbmFsbHkgew0KLQkJCWlmIChyZXNjaGVkdWxl
KQ0KLQkJCQlzY2hlZHVsZShyZXNjaGVkdWxlV2FpdCk7DQotCQkJbW9uaXRvci5kb25lKCk7DQot
CQl9DQotDQotCQlyZXR1cm4gU3RhdHVzLk9LX1NUQVRVUzsNCi0JfQ0KLQ0KLQlwcml2YXRlIHZv
aWQgdGhyb3dFeGNlcHRpb24oVGhyb3dhYmxlIHRoKSB7DQotCQlpZiAodGggPT0gbnVsbCkNCi0J
CQlyZXR1cm47DQotDQotCQlpZiAodGggaW5zdGFuY2VvZiBSdW50aW1lRXhjZXB0aW9uKQ0KLQkJ
CXRocm93IChSdW50aW1lRXhjZXB0aW9uKSB0aDsNCi0NCi0JCWlmICh0aCBpbnN0YW5jZW9mIEVy
cm9yKSB7DQotCQkJdGhyb3cgKEVycm9yKSB0aDsNCi0JCX0NCi0NCi0JCS8vIFRPRE8gZG8gc29t
ZXRoaW5nICEhIHRoZSBleGNlcHRpb24gY2Fubm90IGJlIHRocm93biAtIGl0J3MgbmVpdGhlciBh
DQotCQkvLyBSdW50aW1lRXhjZXB0aW9uIG5vciBhbiBFcnJvcg0KLQl9DQotfQ0KSW5kZXg6IFN0
YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVy
cy9qb2JzL1VJVGVzdEpvYi5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRs
aW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVUlU
ZXN0Sm9iLmphdmENCmRpZmYgLU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNl
L3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVUlUZXN0Sm9iLmphdmENCi0tLSBTdGF0dXMg
SGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvam9i
cy9VSVRlc3RKb2IuamF2YQkxMSBBcHIgMjAwNyAxNTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2
L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEsMTExICswLDAgQEANCi0vKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNiwgMjAwNyBJQk0gQ29y
cG9yYXRpb24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dy
YW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZhaWxhYmxl
IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQotICog
d2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQN
Ci0gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAqDQotICog
Q29udHJpYnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQg
aW1wbGVtZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi1wYWNrYWdlIG9yZy5l
Y2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLmpvYnM7DQotDQotaW1wb3J0IG9yZy5lY2xp
cHNlLmNvcmUucmVzb3VyY2VzLlJlc291cmNlc1BsdWdpbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uu
Y29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0b3I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUu
cnVudGltZS5JU3RhdHVzOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuTXVsdGlT
dGF0dXM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5TdGF0dXM7DQotaW1wb3J0
IG9yZy5lY2xpcHNlLnVpLnByb2dyZXNzLlVJSm9iOw0KLQ0KLS8qKg0KLSAqIEJhc2UgY2xhc3Mg
Zm9yIGEgc2ltcGxlIHRlc3QgVUkgam9iIHdpdGggY29uZmlndXJhYmxlIHBhcmFtZXRlcnMNCi0g
Ki8NCi1wdWJsaWMgY2xhc3MgVUlUZXN0Sm9iIGV4dGVuZHMgVUlKb2Igew0KLQ0KLQlwcml2YXRl
IGxvbmcgZHVyYXRpb247DQotDQotCXByaXZhdGUgYm9vbGVhbiByZXR1cm5FcnJvcjsNCi0NCi0J
cHJpdmF0ZSBUaHJvd2FibGUgdG9CZVRocm93bjsNCi0NCi0JcHJpdmF0ZSBsb25nIHRocm93QWZ0
ZXI7DQotDQotCS8qKg0KLQkgKiBAcGFyYW0gZHVyYXRpb24NCi0JICogQHBhcmFtIGxvY2sNCi0J
ICogQHBhcmFtIHRocm93QWZ0ZXINCi0JICogQHBhcmFtIHRvQmVUaHJvd24NCi0JICogQHBhcmFt
IHJldHVybkVycm9yDQotCSAqLw0KLQlwdWJsaWMgVUlUZXN0Sm9iKGxvbmcgZHVyYXRpb24sIGJv
b2xlYW4gbG9jaywgbG9uZyB0aHJvd0FmdGVyLA0KLQkJCVRocm93YWJsZSB0b0JlVGhyb3duLCBi
b29sZWFuIHJldHVybkVycm9yKSB7DQotCQlzdXBlcigiVGVzdCBqb2IiKTsgLy8kTk9OLU5MUy0x
JA0KLQkJdGhpcy5kdXJhdGlvbiA9IGR1cmF0aW9uOw0KLQ0KLQkJdGhpcy50aHJvd0FmdGVyID0g
dGhyb3dBZnRlcjsNCi0JCXRoaXMudG9CZVRocm93biA9IHRvQmVUaHJvd247DQotCQl0aGlzLnJl
dHVybkVycm9yID0gcmV0dXJuRXJyb3I7DQotDQotCQlpZiAobG9jaykNCi0JCQlzZXRSdWxlKFJl
c291cmNlc1BsdWdpbi5nZXRXb3Jrc3BhY2UoKS5nZXRSb290KCkpOw0KLQl9DQotDQotCXB1Ymxp
YyBJU3RhdHVzIHJ1bkluVUlUaHJlYWQoSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB7DQotDQot
CQlmaW5hbCBsb25nIHNsZWVwID0gMTA7DQotCQlpbnQgdGlja3MgPSAoaW50KSAoZHVyYXRpb24g
LyBzbGVlcCk7DQotCQlpbnQgdGlja3NUb1Rocm93ID0gKGludCkgKHRocm93QWZ0ZXIgLyBzbGVl
cCk7DQotDQotCQltb25pdG9yLmJlZ2luVGFzaygiVGFzayIsIHRpY2tzKTsNCi0JCW1vbml0b3Iu
c2V0VGFza05hbWUoIlRhc2siKTsNCi0JCXRyeSB7DQotCQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0
aWNrczsgaSsrKSB7DQotCQkJCWlmIChtb25pdG9yLmlzQ2FuY2VsZWQoKSkNCi0JCQkJCXJldHVy
biBTdGF0dXMuQ0FOQ0VMX1NUQVRVUzsNCi0JCQkJbW9uaXRvci5zdWJUYXNrKCJQcm9jZXNzaW5n
IHRpY2sgIyIgKyBpKTsgLy8kTk9OLU5MUy0xJA0KLQkJCQl0cnkgew0KLQkJCQkJVGhyZWFkLnNs
ZWVwKHNsZWVwKTsNCi0JCQkJfSBjYXRjaCAoSW50ZXJydXB0ZWRFeGNlcHRpb24gZSkgew0KLQkJ
CQkJcmV0dXJuIFN0YXR1cy5DQU5DRUxfU1RBVFVTOw0KLQkJCQl9DQotDQotCQkJCWlmIChpID09
IHRpY2tzVG9UaHJvdykgew0KLQkJCQkJaWYgKHJldHVybkVycm9yKSB7DQotCQkJCQkJTXVsdGlT
dGF0dXMgcmVzdWx0ID0gbmV3IE11bHRpU3RhdHVzKA0KLQkJCQkJCQkJIm9yZy5lY2xpcHNlLnVp
LmV4YW1wbGVzLnN0YXR1c2hhbmRsaW5nLmpvYnMiLCAxLCAiVGhpcyBpcyB0aGUgTXVsdGlTdGF0
dXMgbWVzc2FnZSIsIG5ldyBSdW50aW1lRXhjZXB0aW9uKCJUaGlzIGlzIHRoZSBNdWx0aVN0YXR1
cyBleGNlcHRpb24iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxTLTMk
DQotCQkJCQkJcmVzdWx0DQotCQkJCQkJCQkuYWRkKG5ldyBTdGF0dXMoDQotCQkJCQkJCQkJCUlT
dGF0dXMuRVJST1IsDQotCQkJCQkJCQkJCSJvcmcuZWNsaXBzZS51aS5leGFtcGxlcy5zdGF0dXNo
YW5kbGluZy5qb2JzIiwgMSwgIlRoaXMgaXMgdGhlIGNoaWxkIHN0YXR1cyBtZXNzYWdlIiwgdG9C
ZVRocm93bikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgDQotCQkJCQkJcmV0dXJuIHJl
c3VsdDsNCi0JCQkJCX0NCi0JCQkJCXRocm93RXhjZXB0aW9uKHRvQmVUaHJvd24pOw0KLQkJCQkJ
Ly8gdG9CZVRocm93biBpcyBuZWl0aGVyIGEgcnVudGltZSBleGNlcHRpb24gbm9yIGFuDQotCQkJ
CQkvLyBlcnJvcg0KLQkJCQkJcmV0dXJuIFN0YXR1cy5DQU5DRUxfU1RBVFVTOw0KLQ0KLQkJCQl9
DQotDQotCQkJCW1vbml0b3Iud29ya2VkKDEpOw0KLQkJCX0NCi0JCX0gZmluYWxseSB7DQotCQkJ
bW9uaXRvci5kb25lKCk7DQotCQl9DQotCQlyZXR1cm4gU3RhdHVzLk9LX1NUQVRVUzsNCi0JfQ0K
LQ0KLQlwcml2YXRlIHZvaWQgdGhyb3dFeGNlcHRpb24oVGhyb3dhYmxlIHRoKSB7DQotCQlpZiAo
dGggPT0gbnVsbCkNCi0JCQlyZXR1cm47DQotDQotCQlpZiAodGggaW5zdGFuY2VvZiBSdW50aW1l
RXhjZXB0aW9uKQ0KLQkJCXRocm93IChSdW50aW1lRXhjZXB0aW9uKSB0aDsNCi0NCi0JCWlmICh0
aCBpbnN0YW5jZW9mIEVycm9yKSB7DQotCQkJdGhyb3cgKEVycm9yKSB0aDsNCi0JCX0NCi0NCi0J
CS8vIFRPRE8gZG8gc29tZXRoaW5nICEhIHRoZSBleGNlcHRpb24gY2Fubm90IGJlIHRocm93biAt
IGl0J3MgbmVpdGhlciBhDQotCQkvLyBSdW50aW1lRXhjZXB0aW9uIG5vciBhbiBFcnJvcg0KLQl9
DQotfQ0KSW5kZXg6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0
cy9zdGF0dXNoYW5kbGVycy93aXphcmRzL0ZhdWx0eUV4cG9ydFdpemFyZC5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rl
c3RzL3N0YXR1c2hhbmRsZXJzL3dpemFyZHMvRmF1bHR5RXhwb3J0V2l6YXJkLmphdmENCmRpZmYg
LU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hh
bmRsZXJzL3dpemFyZHMvRmF1bHR5RXhwb3J0V2l6YXJkLmphdmENCi0tLSBTdGF0dXMgSGFuZGxp
bmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvd2l6YXJkcy9G
YXVsdHlFeHBvcnRXaXphcmQuamF2YQkxNyBBcHIgMjAwNyAyMDo1MjozNyAtMDAwMAkxLjENCisr
KyAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEsODkgKzAsMCBAQA0K
LS8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA3IElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0K
LSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBD
b250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQotDQotcGFja2FnZSBvcmcu
ZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGVycy53aXphcmRzOw0KLQ0KLWltcG9ydCBvcmcu
ZWNsaXBzZS5qZmFjZS52aWV3ZXJzLklTdHJ1Y3R1cmVkU2VsZWN0aW9uOw0KLWltcG9ydCBvcmcu
ZWNsaXBzZS5qZmFjZS53aXphcmQuV2l6YXJkOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS53
aXphcmQuV2l6YXJkUGFnZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LlNXVDsNCi1pbXBvcnQg
b3JnLmVjbGlwc2Uuc3d0LmxheW91dC5HcmlkRGF0YTsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0
LmxheW91dC5HcmlkTGF5b3V0Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5Db21w
b3NpdGU7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC53aWRnZXRzLkxhYmVsOw0KLWltcG9ydCBv
cmcuZWNsaXBzZS51aS5JRXhwb3J0V2l6YXJkOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5JV29y
a2JlbmNoOw0KLQ0KLS8qKg0KLSAqIFRoaXMgd2l6YXJkIHdpdGggbm8gZGVmYXVsdCBjb250cnVj
dG9yLiBVc2VkIGR1cmluZyB0aGUgc3RhdHVzIGhhbmRsaW5nDQotICogZmFjaWxpdHkgdGVzdHMu
DQotICogDQotICogQHNlZSBvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGVycy5XaXph
cmRzU3RhdHVzSGFuZGxpbmdUZXN0Q2FzZQ0KLSAqIA0KLSAqIEBzaW5jZSAzLjMNCi0gKi8NCi1w
dWJsaWMgY2xhc3MgRmF1bHR5RXhwb3J0V2l6YXJkIGV4dGVuZHMgV2l6YXJkIGltcGxlbWVudHMg
SUV4cG9ydFdpemFyZCB7DQotDQotCXB1YmxpYyBGYXVsdHlFeHBvcnRXaXphcmQoU3RyaW5nIG5h
bWUpIHsNCi0JCXN1cGVyKCk7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkg
KiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS5qZmFjZS53aXphcmQuV2l6YXJkI3BlcmZvcm1GaW5p
c2goKQ0KLQkgKi8NCi0JcHVibGljIGJvb2xlYW4gcGVyZm9ybUZpbmlzaCgpIHsNCi0JCS8vIFRP
RE8gQXV0by1nZW5lcmF0ZWQgbWV0aG9kIHN0dWINCi0JCXJldHVybiBmYWxzZTsNCi0JfQ0KLQ0K
LQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVp
LklXb3JrYmVuY2hXaXphcmQjaW5pdChvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoLA0KLQkgKiAg
ICAgIG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVN0cnVjdHVyZWRTZWxlY3Rpb24pDQotCSAq
Lw0KLQlwdWJsaWMgdm9pZCBpbml0KElXb3JrYmVuY2ggd29ya2JlbmNoLCBJU3RydWN0dXJlZFNl
bGVjdGlvbiBzZWxlY3Rpb24pIHsNCi0JCXNldFdpbmRvd1RpdGxlKCJ3aW5kb3dfdGl0bGUiKTsg
Ly8kTk9OLU5MUy0xJA0KLQkJLy8gc2V0TmVlZHNQcm9ncmVzc01vbml0b3IodHJ1ZSk7DQotCX0N
Ci0NCi0JcHVibGljIHZvaWQgYWRkUGFnZXMoKSB7DQotCQlzdXBlci5hZGRQYWdlcygpOw0KLQkJ
YWRkUGFnZShuZXcgTXlXaXphcmRQYWdlKCJ3aXphcmQiKSk7DQotCX0NCi0NCi0JcHVibGljIGNs
YXNzIE15V2l6YXJkUGFnZSBleHRlbmRzIFdpemFyZFBhZ2Ugew0KLQkJLyoqDQotCQkgKiBAcGFy
YW0gcGFnZU5hbWUNCi0JCSAqLw0KLQkJcHJvdGVjdGVkIE15V2l6YXJkUGFnZShTdHJpbmcgcGFn
ZU5hbWUpIHsNCi0JCQlzdXBlcihwYWdlTmFtZSk7DQotCQkJLy8gVE9ETyBBdXRvLWdlbmVyYXRl
ZCBjb25zdHJ1Y3RvciBzdHViDQotCQl9DQotDQotCQkvKg0KLQkJICogKG5vbi1KYXZhZG9jKQ0K
LQkJICogDQotCQkgKiBAc2VlIG9yZy5lY2xpcHNlLmpmYWNlLmRpYWxvZ3MuSURpYWxvZ1BhZ2Uj
Y3JlYXRlQ29udHJvbChvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5Db21wb3NpdGUpDQotCQkgKi8N
Ci0JCXB1YmxpYyB2b2lkIGNyZWF0ZUNvbnRyb2woQ29tcG9zaXRlIHBhcmVudCkgew0KLQkJCUNv
bXBvc2l0ZSBwYWdlID0gbmV3IENvbXBvc2l0ZShwYXJlbnQsIFNXVC5OT05FKTsNCi0JCQlHcmlk
TGF5b3V0IHBhZ2VMYXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0KLQkJCXBhZ2Uuc2V0TGF5b3V0
KHBhZ2VMYXlvdXQpOw0KLQkJCXBhZ2Uuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERh
dGEuRklMTF9CT1RIKSk7DQotCQkJTGFiZWwgbmFtZUxhYmVsID0gbmV3IExhYmVsKHBhZ2UsIFNX
VC5OT05FKTsNCi0JCQluYW1lTGFiZWwuc2V0VGV4dCgibGFiZWwiKTsgLy8kTk9OLU5MUy0xJA0K
LQkJCS8vIHNldENvbnRyb2wocGFnZSk7DQotCQl9DQotCX0NCi19
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>86663</attachid>
            <date>2008-01-11 06:50:00 -0500</date>
            <delta_ts>2008-01-11 06:50:33 -0500</delta_ts>
            <desc>Patch with modified plugin xml</desc>
            <filename>214502_20080111.txt</filename>
            <type>text/plain</type>
            <size>66515</size>
            <attacher name="Krzysztof Daniel">krzysztof.daniel</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UudWkudGVzdHMN
CkluZGV4OiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3Rh
dHVzaGFuZGxlcnMvdmlld3MvU3RhdHVzSGFuZGxpbmdWaWV3LmphdmENCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJD
UyBmaWxlOiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3Rh
dHVzaGFuZGxlcnMvdmlld3MvU3RhdHVzSGFuZGxpbmdWaWV3LmphdmENCmRpZmYgLU4gU3RhdHVz
IEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3Zp
ZXdzL1N0YXR1c0hhbmRsaW5nVmlldy5qYXZhDQotLS0gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVk
L29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1N0YXR1c0hhbmRsaW5n
Vmlldy5qYXZhCTExIEFwciAyMDA3IDE1OjA5OjM3IC0wMDAwCTEuMg0KKysrIC9kZXYvbnVsbAkx
IEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpAQCAtMSwxMDk0ICswLDAgQEANCi0vKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQotICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCi0gKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAqDQotICogQ29udHJp
YnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi1wYWNrYWdlIG9yZy5lY2xpcHNl
LnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLnZpZXdzOw0KLQ0KLWltcG9ydCBqYXZhLmxhbmcucmVm
bGVjdC5JbnZvY2F0aW9uVGFyZ2V0RXhjZXB0aW9uOw0KLWltcG9ydCBqYXZhLnV0aWwuQXJyYXlM
aXN0Ow0KLWltcG9ydCBqYXZhLnV0aWwuQ29sbGVjdGlvbnM7DQotaW1wb3J0IGphdmEudXRpbC5J
dGVyYXRvcjsNCi1pbXBvcnQgamF2YS51dGlsLkxpc3Q7DQotDQotaW1wb3J0IG9yZy5lY2xpcHNl
LmNvcmUucmVzb3VyY2VzLklXb3Jrc3BhY2VSdW5uYWJsZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uu
Y29yZS5yZXNvdXJjZXMuUmVzb3VyY2VzUGx1Z2luOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LklDb25maWd1cmF0aW9uRWxlbWVudDsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LklQcm9ncmVzc01vbml0b3I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JU3Rh
dHVzOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuTnVsbFByb2dyZXNzTW9uaXRv
cjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBsYXRmb3JtOw0KLWltcG9ydCBv
cmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuU3RhdHVzOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3Jl
LnJ1bnRpbWUuam9icy5Kb2I7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLmRpYWxvZ3MuSURp
YWxvZ0NvbnN0YW50czsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2Uub3BlcmF0aW9uLklSdW5u
YWJsZVdpdGhQcm9ncmVzczsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2UucmVzb3VyY2UuSW1h
Z2VEZXNjcmlwdG9yOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLklTdHJ1Y3R1
cmVkQ29udGVudFByb3ZpZGVyOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLlN0
cnVjdHVyZWRTZWxlY3Rpb247DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuVGFi
bGVWaWV3ZXI7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuVmlld2VyOw0KLWlt
cG9ydCBvcmcuZWNsaXBzZS5zd3QuU1dUOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3QuY3VzdG9t
LlNjcm9sbGVkQ29tcG9zaXRlOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3QuZXZlbnRzLlNlbGVj
dGlvbkFkYXB0ZXI7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC5ldmVudHMuU2VsZWN0aW9uRXZl
bnQ7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnN3dC5sYXlvdXQuR3JpZERhdGE7DQotaW1wb3J0IG9y
Zy5lY2xpcHNlLnN3dC5sYXlvdXQuR3JpZExheW91dDsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0
LndpZGdldHMuQnV0dG9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5Db21ibzsN
Ci1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LndpZGdldHMuQ29tcG9zaXRlOw0KLWltcG9ydCBvcmcu
ZWNsaXBzZS5zd3Qud2lkZ2V0cy5MYWJlbDsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LndpZGdl
dHMuU3Bpbm5lcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uuc3d0LndpZGdldHMuVGV4dDsNCi1pbXBv
cnQgb3JnLmVjbGlwc2UudWkuSUVkaXRvcklucHV0Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5J
UGVyc2lzdGFibGVFbGVtZW50Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5QYXJ0SW5pdEV4Y2Vw
dGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuUGxhdGZvcm1VSTsNCi1pbXBvcnQgb3JnLmVj
bGlwc2UudWkuYWN0aW9ucy5Xb3Jrc3BhY2VNb2RpZnlPcGVyYXRpb247DQotaW1wb3J0IG9yZy5l
Y2xpcHNlLnVpLmludGVybmFsLldvcmtiZW5jaFBsdWdpbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2Uu
dWkuaW50ZXJuYWwucmVnaXN0cnkuUmVnaXN0cnlSZWFkZXI7DQotaW1wb3J0IG9yZy5lY2xpcHNl
LnVpLnBhcnQuVmlld1BhcnQ7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLnByb2dyZXNzLklQcm9n
cmVzc1NlcnZpY2U7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLnN0YXR1c2hhbmRsZXJzLlN0YXR1
c01hbmFnZXI7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLmpv
YnMuVGVzdEpvYjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMu
am9icy5VSVRlc3RKb2I7DQotDQotLyoqDQotICogQSB2aWV3IGRlZGljYXRlZCB0byBnZW5lcmF0
aW5nIHN0YXR1cyAoZXJyb3IuDQotICovDQotcHVibGljIGNsYXNzIFN0YXR1c0hhbmRsaW5nVmll
dyBleHRlbmRzIFZpZXdQYXJ0IHsNCi0NCi0JcHJpdmF0ZSBDb21ibyBkdXJhdGlvbkZpZWxkLCBl
eGNlcHRpb25GaWVsZCwgc3RhdHVzU2V2ZXJpdHlGaWVsZDsNCi0NCi0JcHJpdmF0ZSBTcGlubmVy
IHBlcmNlbnQ7DQotDQotCXByaXZhdGUgVGV4dCBkZWxheUZpZWxkLCBxdWFudGl0eUZpZWxkLCBy
ZXNjaGVkdWxlRGVsYXksIHN0YXR1c1BsdWdpbklEOw0KLQ0KLQlwcml2YXRlIEJ1dHRvbiBwcm9n
cmVzc05vRm9ya0xvY2tGaWVsZCwgdGhyZWFkRmllbGQsIGpvYkxvY2tGaWVsZCwNCi0JCQlzeXN0
ZW1GaWVsZCwgdXNlckZpZWxkLCBncm91cEZpZWxkLCByZXNjaGVkdWxlRmllbGQsDQotCQkJcmV0
dXJuRXJyb3JTdGF0dXMsIHNob3dTdGF0dXNGaWVsZCwgbG9nU3RhdHVzRmllbGQ7DQotDQotCXBy
aXZhdGUgVGFibGVWaWV3ZXIgc3RhdHVzVGFibGVWaWV2ZXI7DQotDQotCXByaXZhdGUgQ29udGVu
dFByb3ZpZGVyIGNvbnRlbnRQcm92aWRlcjsNCi0NCi0JcHJpdmF0ZSBMaXN0IHN0YXR1c0l0ZW1z
ID0gQ29sbGVjdGlvbnMuc3luY2hyb25pemVkTGlzdChuZXcgQXJyYXlMaXN0KCkpOw0KLQ0KLQlw
cml2YXRlIGludCBzdGF0dXNObzsNCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiAN
Ci0JICogQHNlZSBvcmcuZWNsaXBzZS51aS5wYXJ0LldvcmtiZW5jaFBhcnQjY3JlYXRlUGFydENv
bnRyb2wob3JnLmVjbGlwc2Uuc3d0LndpZGdldHMuQ29tcG9zaXRlKQ0KLQkgKi8NCi0JcHVibGlj
IHZvaWQgY3JlYXRlUGFydENvbnRyb2woQ29tcG9zaXRlIHBhcmVudCkgew0KLQ0KLQkJU2Nyb2xs
ZWRDb21wb3NpdGUgc2Nyb2xsZXIgPSBuZXcgU2Nyb2xsZWRDb21wb3NpdGUocGFyZW50LCBTV1Qu
SF9TQ1JPTEwNCi0JCQkJfCBTV1QuVl9TQ1JPTEwpOw0KLQ0KLQkJQ29tcG9zaXRlIGJvZHkgPSBu
ZXcgQ29tcG9zaXRlKHNjcm9sbGVyLCBTV1QuTk9ORSk7DQotCQlHcmlkTGF5b3V0IGxheW91dCA9
IG5ldyBHcmlkTGF5b3V0KCk7DQotCQlib2R5LnNldExheW91dChsYXlvdXQpOw0KLQkJR3JpZERh
dGEgZ2QgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9CT1RIKTsNCi0JCWJvZHkuc2V0TGF5
b3V0RGF0YShnZCk7DQotDQotCQlDb21wb3NpdGUgam9ic0FuZFJ1bm5hYmxlcyA9IG5ldyBDb21w
b3NpdGUoYm9keSwgU1dULkJPUkRFUik7DQotCQlsYXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0K
LQkJbGF5b3V0Lm51bUNvbHVtbnMgPSAyOw0KLQkJbGF5b3V0Lm1ha2VDb2x1bW5zRXF1YWxXaWR0
aCA9IHRydWU7DQotCQlqb2JzQW5kUnVubmFibGVzLnNldExheW91dChsYXlvdXQpOw0KLQkJZ2Qg
PSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCWpvYnNBbmRSdW5u
YWJsZXMuc2V0TGF5b3V0RGF0YShnZCk7DQotDQotCQljcmVhdGVFbnRyeUZpZWxkR3JvdXAoam9i
c0FuZFJ1bm5hYmxlcyk7DQotCQljcmVhdGVKb2JBbmRSdW5uYWJsZVNwZWNpZmljR3JvdXBzKGpv
YnNBbmRSdW5uYWJsZXMpOw0KLQ0KLQkJQ29tcG9zaXRlIHZpZXdzID0gbmV3IENvbXBvc2l0ZShi
b2R5LCBTV1QuQk9SREVSKTsNCi0JCWxheW91dCA9IG5ldyBHcmlkTGF5b3V0KCk7DQotCQl2aWV3
cy5zZXRMYXlvdXQobGF5b3V0KTsNCi0JCWdkID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExf
SE9SSVpPTlRBTCk7DQotCQl2aWV3cy5zZXRMYXlvdXREYXRhKGdkKTsNCi0NCi0JCWNyZWF0ZVNo
b3dWaWV3c0dyb3VwKHZpZXdzKTsNCi0NCi0JCUNvbXBvc2l0ZSBpbnZhbGlkRXh0ZW5zaW9ucyA9
IG5ldyBDb21wb3NpdGUoYm9keSwgU1dULkJPUkRFUik7DQotCQlsYXlvdXQgPSBuZXcgR3JpZExh
eW91dCgpOw0KLQkJaW52YWxpZEV4dGVuc2lvbnMuc2V0TGF5b3V0KGxheW91dCk7DQotCQlnZCA9
IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJaW52YWxpZEV4dGVu
c2lvbnMuc2V0TGF5b3V0RGF0YShnZCk7DQotDQotCQljcmVhdGVJbnZhbGlkRXh0R3JvdXAoaW52
YWxpZEV4dGVuc2lvbnMpOw0KLQ0KLQkJQ29tcG9zaXRlIGdlbmVyYXRlU3RhdHVzVG9CZVNob3du
ID0gbmV3IENvbXBvc2l0ZShib2R5LCBTV1QuQk9SREVSKTsNCi0JCWxheW91dCA9IG5ldyBHcmlk
TGF5b3V0KCk7DQotCQlnZW5lcmF0ZVN0YXR1c1RvQmVTaG93bi5zZXRMYXlvdXQobGF5b3V0KTsN
Ci0JCWdkID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlnZW5l
cmF0ZVN0YXR1c1RvQmVTaG93bi5zZXRMYXlvdXREYXRhKGdkKTsNCi0NCi0JCWNyZWF0ZVNob3dT
dGF0dXNUb0JlU2hvd0dyb3VwKGdlbmVyYXRlU3RhdHVzVG9CZVNob3duKTsNCi0NCi0JCXNjcm9s
bGVyLnNldENvbnRlbnQoYm9keSk7DQotCQlzY3JvbGxlci5zZXRNaW5TaXplKGJvZHkuY29tcHV0
ZVNpemUoU1dULkRFRkFVTFQsIFNXVC5ERUZBVUxUKSk7DQotCQlzY3JvbGxlci5zZXRFeHBhbmRI
b3Jpem9udGFsKHRydWUpOw0KLQkJc2Nyb2xsZXIuc2V0RXhwYW5kVmVydGljYWwodHJ1ZSk7DQot
DQotCX0NCi0NCi0JLyoqDQotCSAqIENyZWF0ZXMgZ2xvYmFsIGVudHJ5IGdyb3VwLg0KLQkgKiAN
Ci0JICogQHBhcmFtIGJvZHkNCi0JICogICAgICAgICAgICBwYXJlbnQNCi0JICovDQotCXByaXZh
dGUgdm9pZCBjcmVhdGVFbnRyeUZpZWxkR3JvdXAoQ29tcG9zaXRlIGJvZHkpIHsNCi0JCS8vIGR1
cmF0aW9uDQotCQlMYWJlbCBsYWJlbCA9IG5ldyBMYWJlbChib2R5LCBTV1QuTk9ORSk7DQotCQls
YWJlbC5zZXRUZXh0KCJEdXJhdGlvbjoiKTsgLy8kTk9OLU5MUy0xJA0KLQkJZHVyYXRpb25GaWVs
ZCA9IG5ldyBDb21ibyhib2R5LCBTV1QuRFJPUF9ET1dOIHwgU1dULlJFQURfT05MWSk7DQotCQlH
cmlkRGF0YSBkYXRhID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQot
CQlkYXRhLndpZHRoSGludCA9IElEaWFsb2dDb25zdGFudHMuRU5UUllfRklFTERfV0lEVEg7DQot
CQlkdXJhdGlvbkZpZWxkLnNldExheW91dERhdGEoZGF0YSk7DQotCQlkdXJhdGlvbkZpZWxkLnNl
dFRvb2xUaXBUZXh0KCJEdXJhdGlvbiBvZiB0aGUgam9iL3J1bm5hYmxlIik7DQotCQlkdXJhdGlv
bkZpZWxkLmFkZCgiMCIpOyAvLyROT04tTkxTLTEkDQotCQlkdXJhdGlvbkZpZWxkLmFkZCgiMSBt
aWxsaXNlY29uZCIpOyAvLyROT04tTkxTLTEkDQotCQlkdXJhdGlvbkZpZWxkLmFkZCgiMSBzZWNv
bmQiKTsgLy8kTk9OLU5MUy0xJA0KLQkJZHVyYXRpb25GaWVsZC5hZGQoIjEwIHNlY29uZHMiKTsg
Ly8kTk9OLU5MUy0xJA0KLQkJZHVyYXRpb25GaWVsZC5hZGQoIjEgbWludXRlIik7IC8vJE5PTi1O
TFMtMSQNCi0JCWR1cmF0aW9uRmllbGQuYWRkKCIxMCBtaW51dGVzIik7IC8vJE5PTi1OTFMtMSQN
Ci0JCWR1cmF0aW9uRmllbGQuc2VsZWN0KDMpOw0KLQ0KLQkJbGFiZWwgPSBuZXcgTGFiZWwoYm9k
eSwgU1dULk5PTkUpOw0KLQkJbGFiZWwuc2V0VGV4dCgiVGhyb3cgZXhjZXB0aW9uIGFmdGVyICgl
IG9mIGR1cmF0aW9uKToiKTsgLy8kTk9OLU5MUy0xJA0KLQkJcGVyY2VudCA9IG5ldyBTcGlubmVy
KGJvZHksIFNXVC5CT1JERVIpOw0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxM
X0hPUklaT05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQgPSBJRGlhbG9nQ29uc3RhbnRzLkVOVFJZ
X0ZJRUxEX1dJRFRIOw0KLQkJcGVyY2VudC5zZXRMYXlvdXREYXRhKGRhdGEpOw0KLQkJcGVyY2Vu
dA0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIkV4Y2VwdGlvbi9FcnJvciB3aWxsIGJlIHRocm93biBh
ZnRlciBwZXJjZW50KmR1cmF0aW9uIik7DQotCQlwZXJjZW50LnNldE1pbmltdW0oMSk7DQotCQlw
ZXJjZW50LnNldE1heGltdW0oMTAwKTsNCi0JCXBlcmNlbnQuc2V0U2VsZWN0aW9uKDUwKTsNCi0N
Ci0JCWxhYmVsID0gbmV3IExhYmVsKGJvZHksIFNXVC5OT05FKTsNCi0JCWxhYmVsLnNldFRleHQo
IkV4Y2VwdGlvbjoiKTsgLy8kTk9OLU5MUy0xJA0KLQkJZXhjZXB0aW9uRmllbGQgPSBuZXcgQ29t
Ym8oYm9keSwgU1dULkRST1BfRE9XTiB8IFNXVC5SRUFEX09OTFkpOw0KLQkJZGF0YSA9IG5ldyBH
cmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQgPSBJ
RGlhbG9nQ29uc3RhbnRzLkVOVFJZX0ZJRUxEX1dJRFRIOw0KLQkJZXhjZXB0aW9uRmllbGQuc2V0
TGF5b3V0RGF0YShkYXRhKTsNCi0JCWV4Y2VwdGlvbkZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4
dCgiRXhjZXB0aW9uL0Vycm9yIHRvIGJlIHRocm93biBmcm9tIHRoZSBqb2IvcnVubmFibGUiKTsN
Ci0JCWV4Y2VwdGlvbkZpZWxkLmFkZCgiTnVsbFBvaW50ZXJFeGNlcHRpb24iKTsgLy8kTk9OLU5M
Uy0xJA0KLQkJZXhjZXB0aW9uRmllbGQuYWRkKCJPdXRPZk1lbW9yeUVycm9yIik7IC8vJE5PTi1O
TFMtMSQNCi0JCWV4Y2VwdGlvbkZpZWxkLmFkZCgiSW5kZXhPdXRPZkJvdW5kc0V4Y2VwdGlvbiIp
Oy8vJE5PTi1OTFMtMSQNCi0JCWV4Y2VwdGlvbkZpZWxkLnNlbGVjdCgwKTsNCi0NCi0JfQ0KLQ0K
LQkvKioNCi0JICogQ3JlYXRlcyBncm91cHMgZm9yIHJ1biBpbiBVSSAvIHJ1biBpbiB1c2VyIHRo
cmVhZCBhbmQgcnVuIGpvYiBhY3Rpb25zLg0KLQkgKiANCi0JICogQHBhcmFtIHBhcmVudA0KLQkg
Ki8NCi0JcHJpdmF0ZSB2b2lkIGNyZWF0ZUpvYkFuZFJ1bm5hYmxlU3BlY2lmaWNHcm91cHMoQ29t
cG9zaXRlIHBhcmVudCkgew0KLQ0KLQkJQ29tcG9zaXRlIGdyb3VwID0gbmV3IENvbXBvc2l0ZShw
YXJlbnQsIFNXVC5OT05FKTsNCi0JCUdyaWRMYXlvdXQgbGF5b3V0ID0gbmV3IEdyaWRMYXlvdXQo
KTsNCi0JCWxheW91dC5udW1Db2x1bW5zID0gMTsNCi0JCWdyb3VwLnNldExheW91dChsYXlvdXQp
Ow0KLQkJR3JpZERhdGEgZ2QgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9CT1RIKTsNCi0J
CWdkLmhvcml6b250YWxTcGFuID0gMjsNCi0JCWdyb3VwLnNldExheW91dERhdGEoZ2QpOw0KLQ0K
LQkJY3JlYXRlUnVuSW5VSUdyb3VwKGdyb3VwKTsNCi0JCWNyZWF0ZVJ1bkluVXNlckludGVyZmFj
ZVRocmVhZChncm91cCk7DQotCQljcmVhdGVSdW5Kb2IoZ3JvdXApOw0KLQ0KLQl9DQotDQotCXBy
aXZhdGUgdm9pZCBjcmVhdGVSdW5JblVJR3JvdXAoQ29tcG9zaXRlIHBhcmVudCkgew0KLQkJQ29t
cG9zaXRlIGdyb3VwID0gbmV3IENvbXBvc2l0ZShwYXJlbnQsIFNXVC5CT1JERVIpOw0KLQkJR3Jp
ZExheW91dCBsYXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0KLQkJbGF5b3V0Lm51bUNvbHVtbnMg
PSAyOw0KLQkJbGF5b3V0Lm1ha2VDb2x1bW5zRXF1YWxXaWR0aCA9IHRydWU7DQotCQlncm91cC5z
ZXRMYXlvdXQobGF5b3V0KTsNCi0JCWdyb3VwLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdy
aWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQ0KLQkJQnV0dG9uIG5vRm9yayA9IG5ldyBCdXR0
b24oZ3JvdXAsIFNXVC5QVVNIKTsNCi0JCW5vRm9yay5zZXRUZXh0KCJSdW4gSW4gVUkgdGhyZWFk
IChkb2VzIG5vdCBmb3JrKSIpOyAvLyROT04tTkxTLTEkDQotCQlub0Zvcmsuc2V0VG9vbFRpcFRl
eHQoIlVzZSBJUHJvZ3Jlc3NTZXJ2aWNlLnJ1bkluVUkoLi4uKSIpOyAvLyROT04tTkxTLTEkDQot
CQlub0Zvcmsuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9O
VEFMKSk7DQotCQlub0ZvcmsuYWRkU2VsZWN0aW9uTGlzdGVuZXIobmV3IFNlbGVjdGlvbkFkYXB0
ZXIoKSB7DQotCQkJcHVibGljIHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkg
ew0KLQkJCQlwcm9ncmVzc05vRm9yaygpOw0KLQkJCX0NCi0JCX0pOw0KLQ0KLQkJcHJvZ3Jlc3NO
b0ZvcmtMb2NrRmllbGQgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuQ0hFQ0spOw0KLQkJcHJvZ3Jl
c3NOb0ZvcmtMb2NrRmllbGQNCi0JCQkJLnNldFRleHQoIkxvY2sgdGhlIHdvcmtzcGFjZSAocnVu
IGluIHdvcmtzcGFjZSkiKTsgLy8kTk9OLU5MUy0xJA0KLQkJR3JpZERhdGEgZGF0YSA9IG5ldyBH
cmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJcHJvZ3Jlc3NOb0ZvcmtMb2Nr
RmllbGQuc2V0TGF5b3V0RGF0YShkYXRhKTsNCi0JCXByb2dyZXNzTm9Gb3JrTG9ja0ZpZWxkDQot
CQkJCS5zZXRUb29sVGlwVGV4dCgiVXNlIFJlc291cmNlc1BsdWdpbi5nZXRXb3Jrc3BhY2UoKS5y
dW4obmV3IElXb3Jrc3BhY2VSdW5uYWJsZSgpey4uLn0pIGluc2lkZSB0aGUgSVByb2dyZXNzU2Vy
dmljZS5ydW5JblVJKC4uLikiKTsNCi0NCi0JfQ0KLQ0KLQlwcml2YXRlIHZvaWQgY3JlYXRlUnVu
SW5Vc2VySW50ZXJmYWNlVGhyZWFkKENvbXBvc2l0ZSBwYXJlbnQpIHsNCi0NCi0JCUNvbXBvc2l0
ZSBncm91cCA9IG5ldyBDb21wb3NpdGUocGFyZW50LCBTV1QuQk9SREVSKTsNCi0JCUdyaWRMYXlv
dXQgbGF5b3V0ID0gbmV3IEdyaWRMYXlvdXQoKTsNCi0JCWxheW91dC5udW1Db2x1bW5zID0gMjsN
Ci0JCWxheW91dC5tYWtlQ29sdW1uc0VxdWFsV2lkdGggPSB0cnVlOw0KLQkJZ3JvdXAuc2V0TGF5
b3V0KGxheW91dCk7DQotCQlncm91cC5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YShHcmlkRGF0
YS5GSUxMX0hPUklaT05UQUwpKTsNCi0NCi0JCUJ1dHRvbiB3aW5kb3cgPSBuZXcgQnV0dG9uKGdy
b3VwLCBTV1QuUFVTSCk7DQotCQl3aW5kb3cuc2V0VGV4dCgiUnVubmFibGUgaW4gV2luZG93Iik7
IC8vJE5PTi1OTFMtMSQNCi0JCXdpbmRvdw0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlVzZSBQbGF0
Zm9ybVVJLmdldFdvcmtiZW5jaCgpLmdldEFjdGl2ZVdvcmtiZW5jaFdpbmRvdygpLnJ1bih0cnVl
LCB0cnVlLCBuZXcgSVJ1bm5hYmxlV2l0aFByb2dyZXNzKCl7Li4ufSkiKTsgLy8kTk9OLU5MUy0x
JA0KLQkJd2luZG93LnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9S
SVpPTlRBTCkpOw0KLQkJd2luZG93LmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25B
ZGFwdGVyKCkgew0KLQkJCXB1YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50
IGUpIHsNCi0JCQkJcnVubmFibGVJbldpbmRvdygpOw0KLQkJCX0NCi0JCX0pOw0KLQl9DQotDQot
CS8qKg0KLQkgKiBAcGFyYW0gcGFyZW50DQotCSAqLw0KLQlwcml2YXRlIHZvaWQgY3JlYXRlUnVu
Sm9iKENvbXBvc2l0ZSBwYXJlbnQpIHsNCi0JCUNvbXBvc2l0ZSBncm91cCA9IG5ldyBDb21wb3Np
dGUocGFyZW50LCBTV1QuQk9SREVSKTsNCi0JCUdyaWRMYXlvdXQgbGF5b3V0ID0gbmV3IEdyaWRM
YXlvdXQoKTsNCi0JCWxheW91dC5udW1Db2x1bW5zID0gMjsNCi0JCWxheW91dC5tYWtlQ29sdW1u
c0VxdWFsV2lkdGggPSB0cnVlOw0KLQkJZ3JvdXAuc2V0TGF5b3V0KGxheW91dCk7DQotCQlncm91
cC5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpKTsN
Ci0NCi0JCUxhYmVsIGxhYmVsID0gbmV3IExhYmVsKGdyb3VwLCBTV1QuTk9ORSk7DQotCQlsYWJl
bC5zZXRUZXh0KCJTdGFydCBkZWxheSAobXMpOiIpOyAvLyROT04tTkxTLTEkDQotCQlkZWxheUZp
ZWxkID0gbmV3IFRleHQoZ3JvdXAsIFNXVC5CT1JERVIpOw0KLQkJR3JpZERhdGEgZGF0YSA9IG5l
dyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQg
PSBJRGlhbG9nQ29uc3RhbnRzLkVOVFJZX0ZJRUxEX1dJRFRIOw0KLQkJZGVsYXlGaWVsZC5zZXRM
YXlvdXREYXRhKGRhdGEpOw0KLQkJZGVsYXlGaWVsZC5zZXRUb29sVGlwVGV4dCgiRGVsYXkgdG8g
c3RhcnQgdGhlIGpvYiIpOw0KLQkJZGVsYXlGaWVsZC5zZXRUZXh0KCIwIik7IC8vJE5PTi1OTFMt
MSQNCi0NCi0JCWxhYmVsID0gbmV3IExhYmVsKGdyb3VwLCBTV1QuTk9ORSk7DQotCQlsYWJlbC5z
ZXRUZXh0KCJRdWFudGl0eToiKTsgLy8kTk9OLU5MUy0xJA0KLQkJcXVhbnRpdHlGaWVsZCA9IG5l
dyBUZXh0KGdyb3VwLCBTV1QuQk9SREVSKTsNCi0JCWRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERh
dGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCWRhdGEud2lkdGhIaW50ID0gSURpYWxvZ0NvbnN0YW50
cy5FTlRSWV9GSUVMRF9XSURUSDsNCi0JCXF1YW50aXR5RmllbGQuc2V0TGF5b3V0RGF0YShkYXRh
KTsNCi0JCXF1YW50aXR5RmllbGQuc2V0VG9vbFRpcFRleHQoIkhvdyBtYW55IGpvYnMgb3VnaHQg
dG8gYmUgc3RhcnRlZCA/Iik7DQotCQlxdWFudGl0eUZpZWxkLnNldFRleHQoIjEiKTsgLy8kTk9O
LU5MUy0xJA0KLQ0KLQkJLy8gcmVzY2hlZHVsZSBkZWxheQ0KLQkJbGFiZWwgPSBuZXcgTGFiZWwo
Z3JvdXAsIFNXVC5OT05FKTsNCi0JCWxhYmVsLnNldFRleHQoIlJlc2NoZWR1bGUgRGVsYXkgKG1z
KToiKTsgLy8kTk9OLU5MUy0xJA0KLQkJcmVzY2hlZHVsZURlbGF5ID0gbmV3IFRleHQoZ3JvdXAs
IFNXVC5CT1JERVIpOw0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hPUkla
T05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQgPSBJRGlhbG9nQ29uc3RhbnRzLkVOVFJZX0ZJRUxE
X1dJRFRIOw0KLQkJcmVzY2hlZHVsZURlbGF5LnNldExheW91dERhdGEoZGF0YSk7DQotCQlyZXNj
aGVkdWxlRGVsYXkNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJSZXNjaGVkdWxlIGFmdGVyIC4uLiAo
c2VlIHRoZSByZXNjaGVkdWxlIGNoZWNrYm94KSIpOw0KLQkJcmVzY2hlZHVsZURlbGF5LnNldFRl
eHQoIjEwMDAiKTsgLy8kTk9OLU5MUy0xJA0KLQ0KLQkJLy8gdGhyZWFkDQotCQl0aHJlYWRGaWVs
ZCA9IG5ldyBCdXR0b24oZ3JvdXAsIFNXVC5DSEVDSyk7DQotCQl0aHJlYWRGaWVsZC5zZXRUZXh0
KCJSdW4gaW4gVUkgdGhyZWFkIik7IC8vJE5PTi1OTFMtMSQNCi0JCWRhdGEgPSBuZXcgR3JpZERh
dGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCXRocmVhZEZpZWxkLnNldExheW91dERh
dGEoZGF0YSk7DQotCQl0aHJlYWRGaWVsZA0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlVzZSBvcmcu
ZWNsaXBzZS51aS5wcm9ncmVzcy5VSUpvYiAoaW5zdGVhZCBvZiBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuam9icy5Kb2IpIik7DQotDQotCQkvLyBsb2NrDQotCQlqb2JMb2NrRmllbGQgPSBuZXcg
QnV0dG9uKGdyb3VwLCBTV1QuQ0hFQ0spOw0KLQkJam9iTG9ja0ZpZWxkLnNldFRleHQoIkxvY2sg
dGhlIHdvcmtzcGFjZSIpOyAvLyROT04tTkxTLTEkDQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdy
aWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlqb2JMb2NrRmllbGQuc2V0TGF5b3V0RGF0YShk
YXRhKTsNCi0JCWpvYkxvY2tGaWVsZA0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlJlc2VydmUgZXhj
bHVzaXZlIGFjY2VzcyB0byB3b3Jrc3BhY2UgLSBzZXRSdWxlKFJlc291cmNlc1BsdWdpbi5nZXRX
b3Jrc3BhY2UoKS5nZXRSb290KCkpIik7DQotDQotCQkvLyBzeXN0ZW0NCi0JCXN5c3RlbUZpZWxk
ID0gbmV3IEJ1dHRvbihncm91cCwgU1dULkNIRUNLKTsNCi0JCXN5c3RlbUZpZWxkLnNldFRleHQo
IlN5c3RlbSBqb2IiKTsgLy8kTk9OLU5MUy0xJA0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlk
RGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJc3lzdGVtRmllbGQuc2V0TGF5b3V0RGF0YShkYXRh
KTsNCi0JCXN5c3RlbUZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiRGVjaWRlIHdoZXRoZXIg
dGhlIGpvYiBpcyBhIHN5c3RlbSBqb2IgL2lzIHByZXNlbnRlZCBvbiBVSS8iKTsNCi0NCi0JCS8v
IHdoZXRoZXIgdGhlIGpvYiBpcyBhIHVzZXIgam9iDQotCQl1c2VyRmllbGQgPSBuZXcgQnV0dG9u
KGdyb3VwLCBTV1QuQ0hFQ0spOw0KLQkJdXNlckZpZWxkLnNldFRleHQoIlVzZXIgam9iIik7IC8v
JE5PTi1OTFMtMSQNCi0JCWRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9O
VEFMKTsNCi0JCXVzZXJGaWVsZC5zZXRMYXlvdXREYXRhKGRhdGEpOw0KLQkJdXNlckZpZWxkDQot
CQkJCS5zZXRUb29sVGlwVGV4dCgiRGVjaWRlIHdoZXRoZXIgdGhlIGpvYiBpcyBpbml0aWF0ZWQg
ZGlyZWN0bHkgYnkgdGhlIFVJIGVuZCB1c2VyIik7DQotDQotCQkvLyBncm91cHMNCi0JCWdyb3Vw
RmllbGQgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuQ0hFQ0spOw0KLQkJZ3JvdXBGaWVsZC5zZXRU
ZXh0KCJSdW4gaW4gR3JvdXAiKTsgLy8kTk9OLU5MUy0xJA0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0
YShHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpOw0KLQkJZ3JvdXBGaWVsZC5zZXRMYXlvdXREYXRh
KGRhdGEpOw0KLQkJZ3JvdXBGaWVsZA0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlJ1biBhbGwgb2Yg
dGhlIGpvYnMgYXMgYSBzaW5nbGUgZ3JvdXAgKGlmIHRoZXJlIGlzIG1vcmUgdGhhbiBvbmUgam9i
KSIpOw0KLQ0KLQkJLy8gcmVzY2hlZHVsZQ0KLQkJcmVzY2hlZHVsZUZpZWxkID0gbmV3IEJ1dHRv
bihncm91cCwgU1dULkNIRUNLKTsNCi0JCXJlc2NoZWR1bGVGaWVsZC5zZXRUZXh0KCJSZXNjaGVk
dWxlIik7IC8vJE5PTi1OTFMtMSQNCi0JCWRhdGEgPSBuZXcgR3JpZERhdGEoR3JpZERhdGEuRklM
TF9IT1JJWk9OVEFMKTsNCi0JCXJlc2NoZWR1bGVGaWVsZC5zZXRMYXlvdXREYXRhKGRhdGEpOw0K
LQkJcmVzY2hlZHVsZUZpZWxkDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiUmVzY2hlZHVsZSB0aGUg
am9iICgnUmVzY2hlZHVsZSBEZWxheScgaXMgdGhlIHBlcmlvZCBiZXR3ZWVuIHJlc2NoZWR1bGVz
KSIpOw0KLQ0KLQkJLy8gY3JlYXRlIGpvYnMNCi0JCUJ1dHRvbiBjcmVhdGUgPSBuZXcgQnV0dG9u
KGdyb3VwLCBTV1QuUFVTSCk7DQotCQljcmVhdGUuc2V0VGV4dCgiQ3JlYXRlIGpvYnMiKTsgLy8k
Tk9OLU5MUy0xJA0KLQkJY3JlYXRlDQotCQkJCS5zZXRUb29sVGlwVGV4dCgiQ3JlYXRlcyBhbmQg
c2NoZWR1bGVzIGpvYnMgYWNjb3JkaW5nIHRvIGFib3ZlIHBhcmFtZXRlcnMiKTsgLy8kTk9OLU5M
Uy0xJA0KLQkJY3JlYXRlLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExf
SE9SSVpPTlRBTCkpOw0KLQkJY3JlYXRlLmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rp
b25BZGFwdGVyKCkgew0KLQkJCXB1YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2
ZW50IGUpIHsNCi0JCQkJY3JlYXRlSm9icygpOw0KLQkJCX0NCi0JCX0pOw0KLQ0KLQkJcmV0dXJu
RXJyb3JTdGF0dXMgPSBuZXcgQnV0dG9uKGdyb3VwLCBTV1QuQ0hFQ0spOw0KLQkJcmV0dXJuRXJy
b3JTdGF0dXMNCi0JCQkJLnNldFRleHQoIlJldHVybiBhbiBleGNlcHRpb24gd3JhcHBlZCBpbiBh
IGVycm9yIHN0YXR1cyIpOyAvLyROT04tTkxTLTEkDQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdy
aWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlyZXR1cm5FcnJvclN0YXR1cy5zZXRMYXlvdXRE
YXRhKGRhdGEpOw0KLQkJcmV0dXJuRXJyb3JTdGF0dXMNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJX
cmFwIHRoZSBleGNlcHRpb24gaW4gYSBNdWx0aVN0YXR1cyBpbnN0YW5jZSIpOw0KLQ0KLQl9DQot
DQotCS8qKg0KLQkgKiBAcGFyYW0gcGFyZW50DQotCSAqLw0KLQlwcml2YXRlIHZvaWQgY3JlYXRl
U2hvd1ZpZXdzR3JvdXAoQ29tcG9zaXRlIHBhcmVudCkgew0KLQ0KLQkJQ29tcG9zaXRlIGdyb3Vw
ID0gbmV3IENvbXBvc2l0ZShwYXJlbnQsIFNXVC5OT05FKTsNCi0JCUdyaWRMYXlvdXQgbGF5b3V0
ID0gbmV3IEdyaWRMYXlvdXQoKTsNCi0JCWxheW91dC5udW1Db2x1bW5zID0gMjsNCi0JCWxheW91
dC5tYWtlQ29sdW1uc0VxdWFsV2lkdGggPSB0cnVlOw0KLQkJZ3JvdXAuc2V0TGF5b3V0KGxheW91
dCk7DQotCQlncm91cC5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YShHcmlkRGF0YS5GSUxMX0hP
UklaT05UQUwpKTsNCi0NCi0JCUJ1dHRvbiBzaG93UGFydEluaXRFeGNlcHRpb25WaWV3ID0gbmV3
IEJ1dHRvbihncm91cCwgU1dULlBVU0gpOw0KLQkJc2hvd1BhcnRJbml0RXhjZXB0aW9uVmlldw0K
LQkJCQkuc2V0VGV4dCgiU2hvdyB2aWV3IHRocm93aW5nIFBhcnRJbml0RXhjZXB0aW9uIik7IC8v
JE5PTi1OTFMtMSQNCi0JCXNob3dQYXJ0SW5pdEV4Y2VwdGlvblZpZXcuc2V0TGF5b3V0RGF0YShu
ZXcgR3JpZERhdGEoDQotCQkJCUdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQkJc2hvd1Bh
cnRJbml0RXhjZXB0aW9uVmlldy5hZGRTZWxlY3Rpb25MaXN0ZW5lcihuZXcgU2VsZWN0aW9uQWRh
cHRlcigpIHsNCi0JCQlwdWJsaWMgdm9pZCB3aWRnZXRTZWxlY3RlZChTZWxlY3Rpb25FdmVudCBl
KSB7DQotDQotCQkJCXRyeSB7DQotCQkJCQlQbGF0Zm9ybVVJDQotCQkJCQkJCS5nZXRXb3JrYmVu
Y2goKQ0KLQkJCQkJCQkuZ2V0QWN0aXZlV29ya2JlbmNoV2luZG93KCkNCi0JCQkJCQkJLmdldEFj
dGl2ZVBhZ2UoKQ0KLQkJCQkJCQkuc2hvd1ZpZXcoDQotCQkJCQkJCQkJIm9yZy5lY2xpcHNlaW50
ZXJuYWwudWkudGVzdHMuc3RhdHVzaGFuZGxpbmcuUGFydEluaXRFeGNlcHRpb25WaWV3Iik7DQot
CQkJCX0gY2F0Y2ggKFBhcnRJbml0RXhjZXB0aW9uIGUxKSB7DQotCQkJCQkvLyBzaG91bGQgbm90
IGJlIHRocm93biAhDQotCQkJCQllMS5wcmludFN0YWNrVHJhY2UoKTsNCi0JCQkJfQ0KLQkJCX0N
Ci0JCX0pOw0KLQ0KLQkJQnV0dG9uIHNob3dSdW50aW1lRXhjZXB0aW9uVmlldyA9IG5ldyBCdXR0
b24oZ3JvdXAsIFNXVC5QVVNIKTsNCi0JCXNob3dSdW50aW1lRXhjZXB0aW9uVmlldy5zZXRUZXh0
KCJTaG93IHZpZXcgdGhyb3dpbmcgUnVudGltZUV4Y2VwdGlvbiIpOyAvLyROT04tTkxTLTEkDQot
CQlzaG93UnVudGltZUV4Y2VwdGlvblZpZXcuc2V0TGF5b3V0RGF0YShuZXcgR3JpZERhdGEoDQot
CQkJCUdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQkJc2hvd1J1bnRpbWVFeGNlcHRpb25W
aWV3LmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVyKCkgew0KLQkJCXB1
YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50IGUpIHsNCi0NCi0JCQkJdHJ5
IHsNCi0JCQkJCVBsYXRmb3JtVUkNCi0JCQkJCQkJLmdldFdvcmtiZW5jaCgpDQotCQkJCQkJCS5n
ZXRBY3RpdmVXb3JrYmVuY2hXaW5kb3coKQ0KLQkJCQkJCQkuZ2V0QWN0aXZlUGFnZSgpDQotCQkJ
CQkJCS5zaG93VmlldygNCi0JCQkJCQkJCQkib3JnLmVjbGlwc2VpbnRlcm5hbC51aS50ZXN0cy5z
dGF0dXNoYW5kbGluZy5SdW50aW1lRXhjZXB0aW9uVmlldyIpOw0KLQkJCQl9IGNhdGNoIChQYXJ0
SW5pdEV4Y2VwdGlvbiBlMSkgew0KLQkJCQkJLy8gc2hvdWxkIG5vdCBiZSB0aHJvd24gIQ0KLQkJ
CQkJZTEucHJpbnRTdGFja1RyYWNlKCk7DQotCQkJCX0NCi0JCQl9DQotCQl9KTsNCi0NCi0JCUJ1
dHRvbiBzaG93UnVudGltZUV4Y2VwdGlvbkVkaXRvciA9IG5ldyBCdXR0b24oZ3JvdXAsIFNXVC5Q
VVNIKTsNCi0JCXNob3dSdW50aW1lRXhjZXB0aW9uRWRpdG9yDQotCQkJCS5zZXRUZXh0KCJTaG93
IGVkaXRvciB0aHJvd2luZyBSdW50aW1lRXhjZXB0aW9uIik7IC8vJE5PTi1OTFMtMSQNCi0JCXNo
b3dSdW50aW1lRXhjZXB0aW9uRWRpdG9yLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKA0KLQkJ
CQlHcmlkRGF0YS5GSUxMX0hPUklaT05UQUwpKTsNCi0JCXNob3dSdW50aW1lRXhjZXB0aW9uRWRp
dG9yLmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVyKCkgew0KLQkJCXB1
YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50IGUpIHsNCi0NCi0JCQkJdHJ5
IHsNCi0JCQkJCVBsYXRmb3JtVUkNCi0JCQkJCQkJLmdldFdvcmtiZW5jaCgpDQotCQkJCQkJCS5n
ZXRBY3RpdmVXb3JrYmVuY2hXaW5kb3coKQ0KLQkJCQkJCQkuZ2V0QWN0aXZlUGFnZSgpDQotCQkJ
CQkJCS5vcGVuRWRpdG9yKG5ldyBJRWRpdG9ySW5wdXQoKSB7DQotDQotCQkJCQkJCQlwdWJsaWMg
Ym9vbGVhbiBleGlzdHMoKSB7DQotDQotCQkJCQkJCQkJcmV0dXJuIGZhbHNlOw0KLQkJCQkJCQkJ
fQ0KLQ0KLQkJCQkJCQkJcHVibGljIEltYWdlRGVzY3JpcHRvciBnZXRJbWFnZURlc2NyaXB0b3Io
KSB7DQotDQotCQkJCQkJCQkJcmV0dXJuIG51bGw7DQotCQkJCQkJCQl9DQotDQotCQkJCQkJCQlw
dWJsaWMgU3RyaW5nIGdldE5hbWUoKSB7DQotDQotCQkJCQkJCQkJcmV0dXJuIG51bGw7DQotCQkJ
CQkJCQl9DQotDQotCQkJCQkJCQlwdWJsaWMgSVBlcnNpc3RhYmxlRWxlbWVudCBnZXRQZXJzaXN0
YWJsZSgpIHsNCi0NCi0JCQkJCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCQkJCX0NCi0NCi0JCQkJ
CQkJCXB1YmxpYyBTdHJpbmcgZ2V0VG9vbFRpcFRleHQoKSB7DQotDQotCQkJCQkJCQkJcmV0dXJu
IG51bGw7DQotCQkJCQkJCQl9DQotDQotCQkJCQkJCQlwdWJsaWMgT2JqZWN0IGdldEFkYXB0ZXIo
Q2xhc3MgYWRhcHRlcikgew0KLQ0KLQkJCQkJCQkJCXJldHVybiBudWxsOw0KLQkJCQkJCQkJfQ0K
LQ0KLQkJCQkJCQl9LA0KLQkJCQkJCQkJCSJvcmcuZWNsaXBzZWludGVybmFsLnVpLnRlc3RzLnN0
YXR1c2hhbmRsaW5nLlJ1bnRpbWVFeGNlcHRpb25FZGl0b3IiKTsNCi0JCQkJfSBjYXRjaCAoUGFy
dEluaXRFeGNlcHRpb24gZTEpIHsNCi0JCQkJCS8vIHNob3VsZCBub3QgYmUgdGhyb3duICENCi0J
CQkJCWUxLnByaW50U3RhY2tUcmFjZSgpOw0KLQkJCQl9DQotCQkJfQ0KLQkJfSk7DQotDQotCQlC
dXR0b24gc2hvd1BhcnRJbml0RXhjZXB0aW9uRWRpdG9yID0gbmV3IEJ1dHRvbihncm91cCwgU1dU
LlBVU0gpOw0KLQkJc2hvd1BhcnRJbml0RXhjZXB0aW9uRWRpdG9yLnNldFRleHQoIlNob3cgZWRp
dG9yIHRocm93aW5nIFBhcnRJbml0Iik7IC8vJE5PTi1OTFMtMSQNCi0JCXNob3dQYXJ0SW5pdEV4
Y2VwdGlvbkVkaXRvci5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YSgNCi0JCQkJR3JpZERhdGEu
RklMTF9IT1JJWk9OVEFMKSk7DQotCQlzaG93UGFydEluaXRFeGNlcHRpb25FZGl0b3INCi0JCQkJ
LmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVyKCkgew0KLQkJCQkJcHVi
bGljIHZvaWQgd2lkZ2V0U2VsZWN0ZWQoU2VsZWN0aW9uRXZlbnQgZSkgew0KLQ0KLQkJCQkJCXRy
eSB7DQotCQkJCQkJCVBsYXRmb3JtVUkuZ2V0V29ya2JlbmNoKCkNCi0JCQkJCQkJCQkuZ2V0QWN0
aXZlV29ya2JlbmNoV2luZG93KCkuZ2V0QWN0aXZlUGFnZSgpDQotCQkJCQkJCQkJLm9wZW5FZGl0
b3IoDQotCQkJCQkJCQkJCQluZXcgSUVkaXRvcklucHV0KCkgew0KLQ0KLQkJCQkJCQkJCQkJCXB1
YmxpYyBib29sZWFuIGV4aXN0cygpIHsNCi0NCi0JCQkJCQkJCQkJCQkJcmV0dXJuIGZhbHNlOw0K
LQkJCQkJCQkJCQkJCX0NCi0NCi0JCQkJCQkJCQkJCQlwdWJsaWMgSW1hZ2VEZXNjcmlwdG9yIGdl
dEltYWdlRGVzY3JpcHRvcigpIHsNCi0NCi0JCQkJCQkJCQkJCQkJcmV0dXJuIG51bGw7DQotCQkJ
CQkJCQkJCQkJfQ0KLQ0KLQkJCQkJCQkJCQkJCXB1YmxpYyBTdHJpbmcgZ2V0TmFtZSgpIHsNCi0N
Ci0JCQkJCQkJCQkJCQkJcmV0dXJuIG51bGw7DQotCQkJCQkJCQkJCQkJfQ0KLQ0KLQkJCQkJCQkJ
CQkJCXB1YmxpYyBJUGVyc2lzdGFibGVFbGVtZW50IGdldFBlcnNpc3RhYmxlKCkgew0KLQ0KLQkJ
CQkJCQkJCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCQkJCQkJCQl9DQotDQotCQkJCQkJCQkJCQkJ
cHVibGljIFN0cmluZyBnZXRUb29sVGlwVGV4dCgpIHsNCi0NCi0JCQkJCQkJCQkJCQkJcmV0dXJu
IG51bGw7DQotCQkJCQkJCQkJCQkJfQ0KLQ0KLQkJCQkJCQkJCQkJCXB1YmxpYyBPYmplY3QgZ2V0
QWRhcHRlcigNCi0JCQkJCQkJCQkJCQkJCUNsYXNzIGFkYXB0ZXIpIHsNCi0NCi0JCQkJCQkJCQkJ
CQkJcmV0dXJuIG51bGw7DQotCQkJCQkJCQkJCQkJfQ0KLQ0KLQkJCQkJCQkJCQkJfSwNCi0JCQkJ
CQkJCQkJCSJvcmcuZWNsaXBzZWludGVybmFsLnVpLnRlc3RzLnN0YXR1c2hhbmRsaW5nLlBhcnRJ
bml0RXhjZXB0aW9uRWRpdG9yIik7DQotCQkJCQkJfSBjYXRjaCAoUGFydEluaXRFeGNlcHRpb24g
ZTEpIHsNCi0JCQkJCQkJLy8gc2hvdWxkIG5vdCBiZSB0aHJvd24gIQ0KLQkJCQkJCQllMS5wcmlu
dFN0YWNrVHJhY2UoKTsNCi0JCQkJCQl9DQotCQkJCQl9DQotCQkJCX0pOw0KLQ0KLQl9DQotDQot
CS8qKg0KLQkgKiBDcmVhdGVzIGEgZ3JvdXAgZm9yIGludmFsaWQgZXh0ZW5zaW9uIGluaXRpYWxp
emF0aW9uLg0KLQkgKiANCi0JICogQHBhcmFtIHBhcmVudA0KLQkgKi8NCi0JcHJpdmF0ZSB2b2lk
IGNyZWF0ZUludmFsaWRFeHRHcm91cChDb21wb3NpdGUgcGFyZW50KSB7DQotDQotCQlDb21wb3Np
dGUgZ3JvdXAgPSBuZXcgQ29tcG9zaXRlKHBhcmVudCwgU1dULk5PTkUpOw0KLQkJR3JpZExheW91
dCBsYXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0KLQkJbGF5b3V0Lm51bUNvbHVtbnMgPSAyOw0K
LQkJbGF5b3V0Lm1ha2VDb2x1bW5zRXF1YWxXaWR0aCA9IHRydWU7DQotCQlncm91cC5zZXRMYXlv
dXQobGF5b3V0KTsNCi0JCWdyb3VwLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRh
LkZJTExfSE9SSVpPTlRBTCkpOw0KLQ0KLQkJQnV0dG9uIGxvYWRJbnZhbGlkRXh0ID0gbmV3IEJ1
dHRvbihncm91cCwgU1dULlBVU0gpOw0KLQkJbG9hZEludmFsaWRFeHQNCi0JCQkJLnNldFRleHQo
IkV4dGVuc2lvbnMgLSBpbnZhbGlkIHJlZmVyZW5jZXMgZGV0ZXJtaW5lZCBhdCBsb2FkIHRpbWUi
KTsgLy8kTk9OLU5MUy0xJA0KLQkJbG9hZEludmFsaWRFeHQuc2V0TGF5b3V0RGF0YShuZXcgR3Jp
ZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKSk7DQotCQlsb2FkSW52YWxpZEV4dC5hZGRT
ZWxlY3Rpb25MaXN0ZW5lcihuZXcgU2VsZWN0aW9uQWRhcHRlcigpIHsNCi0JCQlwdWJsaWMgdm9p
ZCB3aWRnZXRTZWxlY3RlZChTZWxlY3Rpb25FdmVudCBlKSB7DQotDQotCQkJCVNhbXBsZVJlZ2lz
dHJ5UmVhZGVyIHJlYWRlciA9IG5ldyBTYW1wbGVSZWdpc3RyeVJlYWRlcigpOw0KLQkJCQlyZWFk
ZXIucmVhZFJlZ2lzdHJ5KFBsYXRmb3JtLmdldEV4dGVuc2lvblJlZ2lzdHJ5KCksDQotCQkJCQkJ
Im9yZy5lY2xpcHNlLnVpLnRlc3RzIiwgInNhbXBsZSIpOw0KLQkJCX0NCi0JCX0pOw0KLQl9DQot
DQotCXByaXZhdGUgdm9pZCBjcmVhdGVTaG93U3RhdHVzVG9CZVNob3dHcm91cChDb21wb3NpdGUg
cGFyZW50KSB7DQotDQotCQlDb21wb3NpdGUgZ3JvdXAgPSBuZXcgQ29tcG9zaXRlKHBhcmVudCwg
U1dULk5PTkUpOw0KLQkJR3JpZExheW91dCBsYXlvdXQgPSBuZXcgR3JpZExheW91dCgpOw0KLQkJ
bGF5b3V0Lm51bUNvbHVtbnMgPSAyOw0KLQkJbGF5b3V0Lm1ha2VDb2x1bW5zRXF1YWxXaWR0aCA9
IHRydWU7DQotCQlncm91cC5zZXRMYXlvdXQobGF5b3V0KTsNCi0JCWdyb3VwLnNldExheW91dERh
dGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQ0KLQkJQnV0dG9u
IGhhbmRsZVN0YXR1c2VzID0gbmV3IEJ1dHRvbihncm91cCwgU1dULlBVU0gpOw0KLQkJaGFuZGxl
U3RhdHVzZXMuc2V0VGV4dCgiSGFuZGxlIHN0YXR1c2VzIChTdGF0dXNNYW5hZ2VyKSIpOyAvLyRO
T04tTkxTLTEkDQotCQloYW5kbGVTdGF0dXNlcy5zZXRMYXlvdXREYXRhKG5ldyBHcmlkRGF0YShH
cmlkRGF0YS5GSUxMX0hPUklaT05UQUwpKTsNCi0JCWhhbmRsZVN0YXR1c2VzLmFkZFNlbGVjdGlv
bkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVyKCkgew0KLQ0KLQkJCXB1YmxpYyB2b2lkIHdp
ZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50IGUpIHsNCi0JCQkJZm9yIChJdGVyYXRvciBpdCA9
IHN0YXR1c0l0ZW1zLml0ZXJhdG9yKCk7IGl0Lmhhc05leHQoKTspIHsNCi0JCQkJCURpc3BsYXll
ZEl0ZW0gZGkgPSAoRGlzcGxheWVkSXRlbSkgaXQubmV4dCgpOw0KLQkJCQkJLy8gc2VlIFNhbXBs
ZVN0YXR1c0hhbmRsZXINCi0JCQkJCS8vIGhpbnRzIGFuZCBzdGF0dXNlcyBjb3VsZCBiZSBlYXNp
bHkgbW9kaWZpZWQgdGhlcmUNCi0JCQkJCVN0YXR1c01hbmFnZXIuZ2V0TWFuYWdlcigpLmhhbmRs
ZShkaS5nZXRTdGF0dXMoKSwNCi0JCQkJCQkJZGkuZ2V0SGludCgpKTsNCi0JCQkJfQ0KLQkJCX0N
Ci0JCX0pOw0KLQ0KLQkJc3RhdHVzVGFibGVWaWV2ZXIgPSBuZXcgVGFibGVWaWV3ZXIoZ3JvdXAs
IFNXVC5NVUxUSSB8IFNXVC5CT1JERVINCi0JCQkJfCBTV1QuVl9TQ1JPTEwgfCBTV1QuVklSVFVB
TCk7DQotCQljb250ZW50UHJvdmlkZXIgPSBuZXcgQ29udGVudFByb3ZpZGVyKCk7DQotCQlzdGF0
dXNUYWJsZVZpZXZlci5zZXRDb250ZW50UHJvdmlkZXIoY29udGVudFByb3ZpZGVyKTsNCi0JCUdy
aWREYXRhIGdkID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfQk9USCk7DQotCQlnZC5ob3Jp
em9udGFsU3BhbiA9IDI7DQotCQlzdGF0dXNUYWJsZVZpZXZlci5nZXRUYWJsZSgpLnNldExheW91
dERhdGEoZ2QpOw0KLQkJc3RhdHVzVGFibGVWaWV2ZXIuc2V0SW5wdXQobmV3IE9iamVjdFswXSk7
DQotDQotCQlCdXR0b24gYWRkU3RhdHVzID0gbmV3IEJ1dHRvbihncm91cCwgU1dULlBVU0gpOw0K
LQkJYWRkU3RhdHVzLnNldFRleHQoIkFkZCBzdGF0dXMgdG8gdGhlIGxpc3QiKTsgLy8kTk9OLU5M
Uy0xJA0KLQkJYWRkU3RhdHVzLnNldExheW91dERhdGEobmV3IEdyaWREYXRhKEdyaWREYXRhLkZJ
TExfSE9SSVpPTlRBTCkpOw0KLQkJYWRkU3RhdHVzLmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBT
ZWxlY3Rpb25BZGFwdGVyKCkgew0KLQ0KLQkJCXB1YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNl
bGVjdGlvbkV2ZW50IGUpIHsNCi0JCQkJYm9vbGVhbiBsb2cgPSBsb2dTdGF0dXNGaWVsZC5nZXRT
ZWxlY3Rpb24oKTsNCi0JCQkJYm9vbGVhbiBzaG93ID0gc2hvd1N0YXR1c0ZpZWxkLmdldFNlbGVj
dGlvbigpOw0KLQ0KLQkJCQlpbnQgaGludCA9IFN0YXR1c01hbmFnZXIuTk9ORTsNCi0JCQkJaWYg
KGxvZyAmJiBzaG93KQ0KLQkJCQkJaGludCA9IFN0YXR1c01hbmFnZXIuU0hPVyB8IFN0YXR1c01h
bmFnZXIuTE9HOw0KLQkJCQllbHNlIGlmIChsb2cpDQotCQkJCQloaW50ID0gU3RhdHVzTWFuYWdl
ci5MT0c7DQotCQkJCWVsc2UgaWYgKHNob3cpDQotCQkJCQloaW50ID0gU3RhdHVzTWFuYWdlci5T
SE9XOw0KLQ0KLQkJCQlpbnQgc2V2ZXJpdHkgPSBJU3RhdHVzLk9LOw0KLQkJCQlzd2l0Y2ggKHN0
YXR1c1NldmVyaXR5RmllbGQuZ2V0U2VsZWN0aW9uSW5kZXgoKSkgew0KLQkJCQljYXNlIDA6DQot
CQkJCQlzZXZlcml0eSA9IElTdGF0dXMuT0s7DQotCQkJCQlicmVhazsNCi0JCQkJY2FzZSAxOg0K
LQkJCQkJc2V2ZXJpdHkgPSBJU3RhdHVzLklORk87DQotCQkJCQlicmVhazsNCi0JCQkJY2FzZSAy
Og0KLQkJCQkJc2V2ZXJpdHkgPSBJU3RhdHVzLldBUk5JTkc7DQotCQkJCQlicmVhazsNCi0JCQkJ
Y2FzZSAzOg0KLQkJCQkJc2V2ZXJpdHkgPSBJU3RhdHVzLkNBTkNFTDsNCi0JCQkJCWJyZWFrOw0K
LQkJCQljYXNlIDQ6DQotCQkJCQlzZXZlcml0eSA9IElTdGF0dXMuRVJST1I7DQotCQkJCQlicmVh
azsNCi0JCQkJfQ0KLQ0KLQkJCQlzdGF0dXNObysrOw0KLQ0KLQkJCQlzdGF0dXNJdGVtcy5hZGQo
bmV3IERpc3BsYXllZEl0ZW0obmV3IFN0YXR1cyhzZXZlcml0eSwNCi0JCQkJCQlzdGF0dXNQbHVn
aW5JRC5nZXRUZXh0KCksICJBIHRlc3Qgc3RhdHVzIE5vLiAiDQotCQkJCQkJCQkrIHN0YXR1c05v
ICsgIiAhIiksIGhpbnQpKTsNCi0JCQkJc3RhdHVzVGFibGVWaWV2ZXIucmVmcmVzaCgpOw0KLQkJ
CX0NCi0JCX0pOw0KLQ0KLQkJQnV0dG9uIHJlbW92ZVN0YXR1cyA9IG5ldyBCdXR0b24oZ3JvdXAs
IFNXVC5QVVNIKTsNCi0JCXJlbW92ZVN0YXR1cy5zZXRUZXh0KCJSZW1vdmUgc3RhdHVzIGZyb20g
dGhlIGxpc3QiKTsgLy8kTk9OLU5MUy0xJA0KLQkJcmVtb3ZlU3RhdHVzLnNldExheW91dERhdGEo
bmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9SSVpPTlRBTCkpOw0KLQkJcmVtb3ZlU3RhdHVz
LmFkZFNlbGVjdGlvbkxpc3RlbmVyKG5ldyBTZWxlY3Rpb25BZGFwdGVyKCkgew0KLQ0KLQkJCXB1
YmxpYyB2b2lkIHdpZGdldFNlbGVjdGVkKFNlbGVjdGlvbkV2ZW50IGUpIHsNCi0JCQkJU3RydWN0
dXJlZFNlbGVjdGlvbiBzZWwgPSAoU3RydWN0dXJlZFNlbGVjdGlvbikgc3RhdHVzVGFibGVWaWV2
ZXINCi0JCQkJCQkuZ2V0U2VsZWN0aW9uKCk7DQotCQkJCWZvciAoSXRlcmF0b3IgaXQgPSBzZWwu
aXRlcmF0b3IoKTsgaXQuaGFzTmV4dCgpOykgew0KLQkJCQkJc3RhdHVzSXRlbXMucmVtb3ZlKGl0
Lm5leHQoKSk7DQotCQkJCX0NCi0JCQkJc3RhdHVzVGFibGVWaWV2ZXIucmVmcmVzaCgpOw0KLQkJ
CX0NCi0JCX0pOw0KLQ0KLQkJc2hvd1N0YXR1c0ZpZWxkID0gbmV3IEJ1dHRvbihncm91cCwgU1dU
LkNIRUNLKTsNCi0JCXNob3dTdGF0dXNGaWVsZC5zZXRUZXh0KCJTaG93IHN0YXR1cyAoVUkgZGlh
bG9nKSIpOyAvLyROT04tTkxTLTEkDQotCQlHcmlkRGF0YSBkYXRhID0gbmV3IEdyaWREYXRhKEdy
aWREYXRhLkZJTExfSE9SSVpPTlRBTCk7DQotCQlzaG93U3RhdHVzRmllbGQuc2V0TGF5b3V0RGF0
YShkYXRhKTsNCi0JCXNob3dTdGF0dXNGaWVsZA0KLQkJCQkuc2V0VG9vbFRpcFRleHQoIlNldHMg
b25lIG9mIHRoZSBTdGF0dXNNYW5hZ2VyIGhpbnRzIGZvciBzaG93aW5nIHN0YXR1c2VzIChTSE9X
IG9yIFNIT1dBTkRMT0cpISIpOw0KLQ0KLQkJbG9nU3RhdHVzRmllbGQgPSBuZXcgQnV0dG9uKGdy
b3VwLCBTV1QuQ0hFQ0spOw0KLQkJbG9nU3RhdHVzRmllbGQuc2V0VGV4dCgiTG9nIHN0YXR1cyIp
OyAvLyROT04tTkxTLTEkDQotCQlkYXRhID0gbmV3IEdyaWREYXRhKEdyaWREYXRhLkZJTExfSE9S
SVpPTlRBTCk7DQotCQlsb2dTdGF0dXNGaWVsZC5zZXRMYXlvdXREYXRhKGRhdGEpOw0KLQkJbG9n
U3RhdHVzRmllbGQNCi0JCQkJLnNldFRvb2xUaXBUZXh0KCJTZXRzIG9uZSBvZiB0aGUgU3RhdHVz
TWFuYWdlciBoaW50cyBmb3IgbG9nZ2luZyBzdGF0dXNlcyAoTE9HIG9yIFNIT1dBTkRMT0cpISIp
Ow0KLQ0KLQkJLy8gZHVyYXRpb24NCi0JCUxhYmVsIGxhYmVsID0gbmV3IExhYmVsKGdyb3VwLCBT
V1QuTk9ORSk7DQotCQlsYWJlbC5zZXRUZXh0KCJTZXZlcml0eSBsZXZlbDoiKTsgLy8kTk9OLU5M
Uy0xJA0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZCA9IG5ldyBDb21ibyhncm91cCwgU1dULkRST1Bf
RE9XTiB8IFNXVC5SRUFEX09OTFkpOw0KLQkJZGF0YSA9IG5ldyBHcmlkRGF0YShHcmlkRGF0YS5G
SUxMX0hPUklaT05UQUwpOw0KLQkJZGF0YS53aWR0aEhpbnQgPSBJRGlhbG9nQ29uc3RhbnRzLkVO
VFJZX0ZJRUxEX1dJRFRIOw0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZC5zZXRMYXlvdXREYXRhKGRh
dGEpOw0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZC5zZXRUb29sVGlwVGV4dCgiU2V2ZXJpdHkgb2Yg
dGhlIGdlbmVyYXRlZCBzdGF0dXMiKTsvLyROT04tTkxTLTEkDQotCQlzdGF0dXNTZXZlcml0eUZp
ZWxkLmFkZCgiT0siKTsgLy8kTk9OLU5MUy0xJA0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZC5hZGQo
IklORk8iKTsgLy8kTk9OLU5MUy0xJA0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZC5hZGQoIldBUk5J
TkciKTsgLy8kTk9OLU5MUy0xJA0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZC5hZGQoIkNBTkNFTCIp
OyAvLyROT04tTkxTLTEkDQotCQlzdGF0dXNTZXZlcml0eUZpZWxkLmFkZCgiRVJST1IiKTsgLy8k
Tk9OLU5MUy0xJA0KLQkJc3RhdHVzU2V2ZXJpdHlGaWVsZC5zZWxlY3QoNCk7DQotDQotCQlMYWJl
bCBsYWJlbElEID0gbmV3IExhYmVsKGdyb3VwLCBTV1QuTk9ORSk7DQotCQlsYWJlbElELnNldFRl
eHQoIklEIG9mIHRoZSBzb3VyY2UgcGx1Z2luOiIpOyAvLyROT04tTkxTLTEkDQotCQlzdGF0dXNQ
bHVnaW5JRCA9IG5ldyBUZXh0KGdyb3VwLCBTV1QuQk9SREVSKTsNCi0JCWRhdGEgPSBuZXcgR3Jp
ZERhdGEoR3JpZERhdGEuRklMTF9IT1JJWk9OVEFMKTsNCi0JCWRhdGEud2lkdGhIaW50ID0gSURp
YWxvZ0NvbnN0YW50cy5FTlRSWV9GSUVMRF9XSURUSDsNCi0JCXN0YXR1c1BsdWdpbklELnNldExh
eW91dERhdGEoZGF0YSk7DQotCQlzdGF0dXNQbHVnaW5JRA0KLQkJCQkuc2V0VG9vbFRpcFRleHQo
IlNldHMgdGhlIElEIG9mIHBsdWdpbiB3aGljaCAnZ2VuZXJhdGVkJyB0aGUgc3RhdHVzIik7DQot
CQlzdGF0dXNQbHVnaW5JRC5zZXRUZXh0KFdvcmtiZW5jaFBsdWdpbi5QSV9XT1JLQkVOQ0gpOw0K
LQ0KLQl9DQotDQotCXB1YmxpYyB2b2lkIHNldEZvY3VzKCkgew0KLQkJaWYgKGR1cmF0aW9uRmll
bGQgIT0gbnVsbCAmJiAhZHVyYXRpb25GaWVsZC5pc0Rpc3Bvc2VkKCkpDQotCQkJZHVyYXRpb25G
aWVsZC5zZXRGb2N1cygpOw0KLQl9DQotDQotCS8qKg0KLQkgKiANCi0JICovDQotCXByaXZhdGUg
dm9pZCBwcm9ncmVzc05vRm9yaygpIHsNCi0JCXRyeSB7DQotCQkJZmluYWwgbG9uZyBkdXJhdGlv
biA9IGdldER1cmF0aW9uKCk7DQotCQkJZmluYWwgYm9vbGVhbiBzaG91bGRMb2NrID0gcHJvZ3Jl
c3NOb0ZvcmtMb2NrRmllbGQuZ2V0U2VsZWN0aW9uKCk7DQotCQkJZmluYWwgVGhyb3dhYmxlIHRo
cm93YWJsZSA9IGdldEV4Y2VwdGlvbigpOw0KLQkJCWZpbmFsIGxvbmcgdGhyb3dBZnRlciA9IGdl
dFRocm93QWZ0ZXIoZHVyYXRpb24pOw0KLQ0KLQkJCUlQcm9ncmVzc1NlcnZpY2UgcHJvZ3Jlc3NT
ZXJ2aWNlID0gUGxhdGZvcm1VSS5nZXRXb3JrYmVuY2goKQ0KLQkJCQkJLmdldFByb2dyZXNzU2Vy
dmljZSgpOw0KLQkJCXByb2dyZXNzU2VydmljZS5ydW5JblVJKHByb2dyZXNzU2VydmljZSwNCi0J
CQkJCW5ldyBJUnVubmFibGVXaXRoUHJvZ3Jlc3MoKSB7DQotCQkJCQkJcHVibGljIHZvaWQgcnVu
KElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikNCi0JCQkJCQkJCXRocm93cyBJbnRlcnJ1cHRlZEV4
Y2VwdGlvbiB7DQotCQkJCQkJCWlmIChzaG91bGRMb2NrKQ0KLQkJCQkJCQkJZG9SdW5Jbldvcmtz
cGFjZShkdXJhdGlvbiwgdGhyb3dBZnRlciwNCi0JCQkJCQkJCQkJdGhyb3dhYmxlLCBtb25pdG9y
KTsNCi0JCQkJCQkJZWxzZQ0KLQkJCQkJCQkJZG9SdW4oZHVyYXRpb24sIHRocm93QWZ0ZXIsIHRo
cm93YWJsZSwgbW9uaXRvcik7DQotCQkJCQkJfQ0KLQkJCQkJfSwgUmVzb3VyY2VzUGx1Z2luLmdl
dFdvcmtzcGFjZSgpLmdldFJvb3QoKSk7DQotCQl9IGNhdGNoIChJbnZvY2F0aW9uVGFyZ2V0RXhj
ZXB0aW9uIGUpIHsNCi0JCQllLnByaW50U3RhY2tUcmFjZSgpOw0KLQkJfSBjYXRjaCAoSW50ZXJy
dXB0ZWRFeGNlcHRpb24gZSkgew0KLQkJCWUucHJpbnRTdGFja1RyYWNlKCk7DQotCQl9DQotCX0N
Ci0NCi0JLyoqDQotCSAqIEBwYXJhbSBkdXJhdGlvbg0KLQkgKiBAcGFyYW0gdGhyb3dBZnRlcg0K
LQkgKiBAcGFyYW0gdG9CZVRocm93bg0KLQkgKiBAcGFyYW0gbW9uaXRvcg0KLQkgKi8NCi0JcHJv
dGVjdGVkIHZvaWQgZG9SdW5JbldvcmtzcGFjZShmaW5hbCBsb25nIGR1cmF0aW9uLCBmaW5hbCBs
b25nIHRocm93QWZ0ZXIsDQotCQkJZmluYWwgVGhyb3dhYmxlIHRvQmVUaHJvd24sIElQcm9ncmVz
c01vbml0b3IgbW9uaXRvcikgew0KLQkJdHJ5IHsNCi0JCQlSZXNvdXJjZXNQbHVnaW4uZ2V0V29y
a3NwYWNlKCkucnVuKG5ldyBJV29ya3NwYWNlUnVubmFibGUoKSB7DQotCQkJCXB1YmxpYyB2b2lk
IHJ1bihJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCi0J
CQkJCWRvUnVuKGR1cmF0aW9uLCB0aHJvd0FmdGVyLCB0b0JlVGhyb3duLCBtb25pdG9yKTsNCi0J
CQkJfQ0KLQkJCX0sIG1vbml0b3IpOw0KLQkJfSBjYXRjaCAoQ29yZUV4Y2VwdGlvbiBlKSB7DQot
CQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCi0JCX0NCi0JfQ0KLQ0KLQkvKioNCi0JICogQHBhcmFt
IGR1cmF0aW9uDQotCSAqIEBwYXJhbSB0aHJvd0FmdGVyDQotCSAqIEBwYXJhbSB0b0JlVGhyb3du
DQotCSAqIEBwYXJhbSBtb25pdG9yDQotCSAqLw0KLQlwcm90ZWN0ZWQgdm9pZCBkb1J1bihsb25n
IGR1cmF0aW9uLCBmaW5hbCBsb25nIHRocm93QWZ0ZXIsDQotCQkJZmluYWwgVGhyb3dhYmxlIHRv
QmVUaHJvd24sIElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikgew0KLQkJZmluYWwgbG9uZyBzbGVl
cCA9IDEwOw0KLQkJaW50IHRpY2tzID0gKGludCkgKGR1cmF0aW9uIC8gc2xlZXApOw0KLQkJaW50
IHRpY2tzVG9UaHJvdyA9IChpbnQpICh0aHJvd0FmdGVyIC8gc2xlZXApOw0KLQkJbW9uaXRvci5i
ZWdpblRhc2soIlNwaW5uaW5nIGluc2lkZSBJUHJvZ3Jlc3NTZXJ2aWNlIiwgdGlja3MpOyAvLyRO
T04tTkxTLTEkDQotCQltb25pdG9yLnNldFRhc2tOYW1lKCJTcGlubmluZyBpbnNpZGUgSVByb2dy
ZXNzU2VydmljZSIpOyAvLyROT04tTkxTLTEkDQotCQlmb3IgKGludCBpID0gMDsgaSA8IHRpY2tz
OyBpKyspIHsNCi0JCQltb25pdG9yLnN1YlRhc2soIlByb2Nlc3NpbmcgdGljayAjIiArIGkpOyAv
LyROT04tTkxTLTEkDQotCQkJaWYgKG1vbml0b3IuaXNDYW5jZWxlZCgpKQ0KLQkJCQlyZXR1cm47
DQotCQkJdHJ5IHsNCi0JCQkJVGhyZWFkLnNsZWVwKHNsZWVwKTsNCi0JCQl9IGNhdGNoIChJbnRl
cnJ1cHRlZEV4Y2VwdGlvbiBlKSB7DQotCQkJCS8vIGlnbm9yZQ0KLQkJCX0NCi0JCQlpZiAoaSA9
PSB0aWNrc1RvVGhyb3cpIHsNCi0JCQkJdGhyb3dFeGNlcHRpb24odG9CZVRocm93bik7DQotCQkJ
CS8vIHRvQmVUaHJvd24gaXMgbmVpdGhlciBhIHJ1bnRpbWUgZXhjZXB0aW9uIG5vciBhbiBlcnJv
cg0KLQkJCQlyZXR1cm47DQotCQkJfQ0KLQkJCW1vbml0b3Iud29ya2VkKDEpOw0KLQkJfQ0KLQl9
DQotDQotCS8qKg0KLQkgKiANCi0JICovDQotCXByb3RlY3RlZCB2b2lkIGNyZWF0ZUpvYnMoKSB7
DQotCQlpbnQgam9iQ291bnQgPSBJbnRlZ2VyLnBhcnNlSW50KHF1YW50aXR5RmllbGQuZ2V0VGV4
dCgpKTsNCi0JCWJvb2xlYW4gdWkgPSB0aHJlYWRGaWVsZC5nZXRTZWxlY3Rpb24oKTsNCi0JCWxv
bmcgZHVyYXRpb24gPSBnZXREdXJhdGlvbigpOw0KLQkJYm9vbGVhbiBsb2NrID0gam9iTG9ja0Zp
ZWxkLmdldFNlbGVjdGlvbigpOw0KLQkJYm9vbGVhbiBzeXN0ZW0gPSBzeXN0ZW1GaWVsZC5nZXRT
ZWxlY3Rpb24oKTsNCi0JCWJvb2xlYW4gdXNlR3JvdXAgPSBncm91cEZpZWxkLmdldFNlbGVjdGlv
bigpOw0KLQkJYm9vbGVhbiB1c2VyID0gdXNlckZpZWxkLmdldFNlbGVjdGlvbigpOw0KLQkJYm9v
bGVhbiByZXNjaGVkdWxlID0gcmVzY2hlZHVsZUZpZWxkLmdldFNlbGVjdGlvbigpOw0KLQkJZmlu
YWwgbG9uZyByZXNjaGVkdWxlV2FpdCA9IExvbmcucGFyc2VMb25nKHJlc2NoZWR1bGVEZWxheS5n
ZXRUZXh0KCkpOw0KLQkJYm9vbGVhbiByZXR1cm5FcnJvciA9IHJldHVybkVycm9yU3RhdHVzLmdl
dFNlbGVjdGlvbigpOw0KLQkJVGhyb3dhYmxlIHRocm93YWJsZSA9IGdldEV4Y2VwdGlvbigpOw0K
LQkJbG9uZyB0aHJvd0FmdGVyID0gZ2V0VGhyb3dBZnRlcihkdXJhdGlvbik7DQotDQotCQlpbnQg
Z3JvdXBJbmNyZW1lbnQgPSBJUHJvZ3Jlc3NNb25pdG9yLlVOS05PV047DQotCQlJUHJvZ3Jlc3NN
b25pdG9yIGdyb3VwID0gbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKTsNCi0JCWludCB0b3RhbCA9
IElQcm9ncmVzc01vbml0b3IuVU5LTk9XTjsNCi0NCi0JCWlmIChqb2JDb3VudCA+IDEpIHsNCi0J
CQl0b3RhbCA9IDEwMDsNCi0JCQlncm91cEluY3JlbWVudCA9IDEwMCAvIGpvYkNvdW50Ow0KLQkJ
fQ0KLQ0KLQkJaWYgKHVzZUdyb3VwKSB7DQotCQkJZ3JvdXAgPSBKb2IuZ2V0Sm9iTWFuYWdlcigp
LmNyZWF0ZVByb2dyZXNzR3JvdXAoKTsNCi0JCQlncm91cC5iZWdpblRhc2soIkdyb3VwIiwgdG90
YWwpOyAvLyROT04tTkxTLTEkDQotCQl9DQotDQotCQlsb25nIGRlbGF5ID0gSW50ZWdlci5wYXJz
ZUludChkZWxheUZpZWxkLmdldFRleHQoKSk7DQotCQlmb3IgKGludCBpID0gMDsgaSA8IGpvYkNv
dW50OyBpKyspIHsNCi0JCQlKb2IgcmVzdWx0Ow0KLQkJCWlmICh1aSkNCi0JCQkJcmVzdWx0ID0g
bmV3IFVJVGVzdEpvYihkdXJhdGlvbiwgbG9jaywgdGhyb3dBZnRlciwgdGhyb3dhYmxlLA0KLQkJ
CQkJCXJldHVybkVycm9yKTsNCi0JCQllbHNlDQotCQkJCXJlc3VsdCA9IG5ldyBUZXN0Sm9iKGR1
cmF0aW9uLCBsb2NrLCByZXNjaGVkdWxlLA0KLQkJCQkJCXJlc2NoZWR1bGVXYWl0LCB0aHJvd0Fm
dGVyLCB0aHJvd2FibGUsIHJldHVybkVycm9yKTsNCi0NCi0JCQlyZXN1bHQuc2V0UHJvZ3Jlc3NH
cm91cChncm91cCwgZ3JvdXBJbmNyZW1lbnQpOw0KLQkJCXJlc3VsdC5zZXRTeXN0ZW0oc3lzdGVt
KTsNCi0JCQlyZXN1bHQuc2V0VXNlcih1c2VyKTsNCi0JCQlyZXN1bHQuc2NoZWR1bGUoZGVsYXkp
Ow0KLQkJfQ0KLQl9DQotDQotCS8qKg0KLQkgKiANCi0JICovDQotCXB1YmxpYyB2b2lkIHJ1bm5h
YmxlSW5XaW5kb3coKSB7DQotDQotCQlmaW5hbCBsb25nIGR1cmF0aW9uID0gZ2V0RHVyYXRpb24o
KTsNCi0JCWZpbmFsIGxvbmcgc2xlZXAgPSAxMDsNCi0NCi0JCWZpbmFsIFRocm93YWJsZSB0b0Jl
VGhyb3duID0gZ2V0RXhjZXB0aW9uKCk7DQotCQlmaW5hbCBsb25nIHRocm93QWZ0ZXIgPSBnZXRU
aHJvd0FmdGVyKGR1cmF0aW9uKTsNCi0NCi0JCUlSdW5uYWJsZVdpdGhQcm9ncmVzcyBydW5uYWJs
ZVRlc3QgPSBuZXcgV29ya3NwYWNlTW9kaWZ5T3BlcmF0aW9uKCkgew0KLQ0KLQkJCS8qDQotCQkJ
ICogKG5vbi1KYXZhZG9jKQ0KLQkJCSAqIA0KLQkJCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuYWN0
aW9ucy5Xb3Jrc3BhY2VNb2RpZnlPcGVyYXRpb24jZXhlY3V0ZShvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuSVByb2dyZXNzTW9uaXRvcikNCi0JCQkgKi8NCi0JCQlwcm90ZWN0ZWQgdm9pZCBleGVj
dXRlKElQcm9ncmVzc01vbml0b3IgbW9uaXRvcikNCi0JCQkJCXRocm93cyBDb3JlRXhjZXB0aW9u
LCBJbnZvY2F0aW9uVGFyZ2V0RXhjZXB0aW9uLA0KLQkJCQkJSW50ZXJydXB0ZWRFeGNlcHRpb24g
ew0KLQ0KLQkJCQlpbnQgdGlja3MgPSAoaW50KSAoZHVyYXRpb24gLyBzbGVlcCk7DQotCQkJCWlu
dCB0aWNrc1RvVGhyb3cgPSAoaW50KSAodGhyb3dBZnRlciAvIHNsZWVwKTsNCi0NCi0JCQkJbW9u
aXRvci5iZWdpblRhc2soDQotCQkJCQkJIlNwaW5uaW5nIGluc2lkZSBBcHBsaWNhdGlvbldpbmRv
dy5ydW4oKSIsIHRpY2tzKTsgLy8kTk9OLU5MUy0xJA0KLQkJCQltb25pdG9yLnNldFRhc2tOYW1l
KCJTcGlubmluZyBpbnNpZGUgQXBwbGljYXRpb25XaW5kb3cucnVuKCkiKTsgLy8kTk9OLU5MUy0x
JA0KLQkJCQlmb3IgKGludCBpID0gMDsgaSA8IHRpY2tzOyBpKyspIHsNCi0JCQkJCW1vbml0b3Iu
c3ViVGFzaygiUHJvY2Vzc2luZyB0aWNrICMiICsgaSk7IC8vJE5PTi1OTFMtMSQNCi0JCQkJCWlm
IChtb25pdG9yLmlzQ2FuY2VsZWQoKSkNCi0JCQkJCQlyZXR1cm47DQotCQkJCQl0cnkgew0KLQkJ
CQkJCVRocmVhZC5zbGVlcChzbGVlcCk7DQotCQkJCQl9IGNhdGNoIChJbnRlcnJ1cHRlZEV4Y2Vw
dGlvbiBlKSB7DQotCQkJCQkJLy8gaWdub3JlDQotCQkJCQl9DQotCQkJCQlpZiAoaSA9PSB0aWNr
c1RvVGhyb3cpIHsNCi0JCQkJCQl0aHJvd0V4Y2VwdGlvbih0b0JlVGhyb3duKTsNCi0JCQkJCQkv
LyB0b0JlVGhyb3duIGlzIG5laXRoZXIgYSBydW50aW1lIGV4Y2VwdGlvbiBub3IgYW4NCi0JCQkJ
CQkvLyBlcnJvcg0KLQkJCQkJCXJldHVybjsNCi0JCQkJCX0NCi0JCQkJCW1vbml0b3Iud29ya2Vk
KDEpOw0KLQkJCQl9DQotCQkJfQ0KLQ0KLQkJfTsNCi0NCi0JCXRyeSB7DQotCQkJUGxhdGZvcm1V
SS5nZXRXb3JrYmVuY2goKS5nZXRBY3RpdmVXb3JrYmVuY2hXaW5kb3coKS5ydW4odHJ1ZSwNCi0J
CQkJCXRydWUsIHJ1bm5hYmxlVGVzdCk7DQotCQl9IGNhdGNoIChJbnZvY2F0aW9uVGFyZ2V0RXhj
ZXB0aW9uIGUpIHsNCi0JCQllLnByaW50U3RhY2tUcmFjZSgpOw0KLQkJfSBjYXRjaCAoSW50ZXJy
dXB0ZWRFeGNlcHRpb24gZSkgew0KLQkJCWUucHJpbnRTdGFja1RyYWNlKCk7DQotCQl9DQotDQot
CX0NCi0NCi0JLyoqDQotCSAqIEByZXR1cm4gZHVyYXRpb24NCi0JICovDQotCXByb3RlY3RlZCBs
b25nIGdldER1cmF0aW9uKCkgew0KLQkJc3dpdGNoIChkdXJhdGlvbkZpZWxkLmdldFNlbGVjdGlv
bkluZGV4KCkpIHsNCi0JCWNhc2UgMDoNCi0JCQlyZXR1cm4gMDsNCi0JCWNhc2UgMToNCi0JCQly
ZXR1cm4gMTsNCi0JCWNhc2UgMjoNCi0JCQlyZXR1cm4gMTAwMDsNCi0JCWNhc2UgMzoNCi0JCQly
ZXR1cm4gMTAwMDA7DQotCQljYXNlIDQ6DQotCQkJcmV0dXJuIDYwMDAwOw0KLQkJY2FzZSA1Og0K
LQkJZGVmYXVsdDoNCi0JCQlyZXR1cm4gNjAwMDAwOw0KLQkJfQ0KLQl9DQotDQotCS8qKg0KLQkg
KiBAcmV0dXJuIHRocm93YWJsZQ0KLQkgKi8NCi0JcHJvdGVjdGVkIFRocm93YWJsZSBnZXRFeGNl
cHRpb24oKSB7DQotDQotCQlzd2l0Y2ggKGV4Y2VwdGlvbkZpZWxkLmdldFNlbGVjdGlvbkluZGV4
KCkpIHsNCi0JCWNhc2UgMDoNCi0JCQlyZXR1cm4gbmV3IE51bGxQb2ludGVyRXhjZXB0aW9uKCJB
IHNhbXBsZSBOdWxsUG9pbnRlckV4Y2VwdGlvbiIpOw0KLQkJY2FzZSAxOg0KLQkJCXJldHVybiBu
ZXcgT3V0T2ZNZW1vcnlFcnJvcigiQSBzYW1wbGUgT3V0T2ZNZW1vcnlFcnJvciIpOw0KLQkJY2Fz
ZSAyOg0KLQkJCXJldHVybiBuZXcgSW5kZXhPdXRPZkJvdW5kc0V4Y2VwdGlvbigNCi0JCQkJCSJB
IHNhbXBsZSBJbmRleE91dE9mQm91bmRzRXhjZXB0aW9uIik7DQotCQlkZWZhdWx0Og0KLQkJCXJl
dHVybiBuZXcgTnVsbFBvaW50ZXJFeGNlcHRpb24oIkEgc2FtcGxlIE51bGxQb2ludGVyRXhjZXB0
aW9uIik7DQotDQotCQl9DQotCX0NCi0NCi0JcHJpdmF0ZSBsb25nIGdldFRocm93QWZ0ZXIobG9u
ZyBkdXJhdGlvbikgew0KLQkJcmV0dXJuIE1hdGgucm91bmQoKChkb3VibGUpIGR1cmF0aW9uKQ0K
LQkJCQkqICgoKGRvdWJsZSkgcGVyY2VudC5nZXRTZWxlY3Rpb24oKSkgLyAxMDAuMCkpOw0KLQl9
DQotDQotCXByaXZhdGUgdm9pZCB0aHJvd0V4Y2VwdGlvbihUaHJvd2FibGUgdGgpIHsNCi0JCWlm
ICh0aCA9PSBudWxsKQ0KLQkJCXJldHVybjsNCi0NCi0JCWlmICh0aCBpbnN0YW5jZW9mIFJ1bnRp
bWVFeGNlcHRpb24pDQotCQkJdGhyb3cgKFJ1bnRpbWVFeGNlcHRpb24pIHRoOw0KLQ0KLQkJaWYg
KHRoIGluc3RhbmNlb2YgRXJyb3IpIHsNCi0JCQl0aHJvdyAoRXJyb3IpIHRoOw0KLQkJfQ0KLQ0K
LQkJLy8gVE9ETyBkbyBzb21ldGhpbmcgISEgdGhlIGV4Y2VwdGlvbiBjYW5ub3QgYmUgdGhyb3du
DQotCX0NCi0NCi0JLyoqDQotCSAqIEEgcmVnaXN0cnkgcmVhZGVyIGZvciBzYW1wbGUgZXh0ZW5z
aW9uIHBvaW50Lg0KLQkgKi8NCi0JcHJpdmF0ZSBzdGF0aWMgY2xhc3MgU2FtcGxlUmVnaXN0cnlS
ZWFkZXIgZXh0ZW5kcyBSZWdpc3RyeVJlYWRlciB7DQotDQotCQkvKioNCi0JCSAqIENyZWF0ZSBh
IG5ldyBpbnN0YW5jZSBvZiB0aGUgcmVjZWl2ZXIuDQotCQkgKiANCi0JCSAqLw0KLQkJcHVibGlj
IFNhbXBsZVJlZ2lzdHJ5UmVhZGVyKCkgew0KLQkJCXN1cGVyKCk7DQotCQl9DQotDQotCQkvKg0K
LQkJICogKG5vbi1KYXZhZG9jKQ0KLQkJICogDQotCQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLmlu
dGVybmFsLnJlZ2lzdHJ5LlJlZ2lzdHJ5UmVhZGVyI3JlYWRFbGVtZW50KG9yZy5lY2xpcHNlLmNv
cmUucnVudGltZS5JQ29uZmlndXJhdGlvbkVsZW1lbnQpDQotCQkgKi8NCi0JCXByb3RlY3RlZCBi
b29sZWFuIHJlYWRFbGVtZW50KElDb25maWd1cmF0aW9uRWxlbWVudCBlbGVtZW50KSB7DQotDQot
CQkJU3RyaW5nIG5hbWUgPSBlbGVtZW50LmdldE5hbWUoKTsNCi0NCi0JCQlpZiAobmFtZSAhPSBu
dWxsKSB7DQotCQkJCWlmICghbmFtZS5lcXVhbHMoInJlcXVpcmVkRWxlbWVudCIpKQ0KLQkJCQkJ
cmV0dXJuIGZhbHNlOw0KLQkJCX0NCi0JCQlyZXR1cm4gdHJ1ZTsNCi0JCX0NCi0JfQ0KLQ0KLQlw
cml2YXRlIGNsYXNzIENvbnRlbnRQcm92aWRlciBpbXBsZW1lbnRzIElTdHJ1Y3R1cmVkQ29udGVu
dFByb3ZpZGVyIHsNCi0NCi0JCS8qDQotCQkgKiAobm9uLUphdmFkb2MpDQotCQkgKiANCi0JCSAq
IEBzZWUgb3JnLmVjbGlwc2UuamZhY2Uudmlld2Vycy5JU3RydWN0dXJlZENvbnRlbnRQcm92aWRl
ciNnZXRFbGVtZW50cyhqYXZhLmxhbmcuT2JqZWN0KQ0KLQkJICovDQotCQlwdWJsaWMgT2JqZWN0
W10gZ2V0RWxlbWVudHMoT2JqZWN0IGlucHV0RWxlbWVudCkgew0KLQkJCXJldHVybiBzdGF0dXNJ
dGVtcy50b0FycmF5KCk7DQotCQl9DQotDQotCQkvKg0KLQkJICogKG5vbi1KYXZhZG9jKQ0KLQkJ
ICogDQotCQkgKiBAc2VlIG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSUNvbnRlbnRQcm92aWRl
ciNkaXNwb3NlKCkNCi0JCSAqLw0KLQkJcHVibGljIHZvaWQgZGlzcG9zZSgpIHsNCi0NCi0JCX0N
Ci0NCi0JCS8qDQotCQkgKiAobm9uLUphdmFkb2MpDQotCQkgKiANCi0JCSAqIEBzZWUgb3JnLmVj
bGlwc2UuamZhY2Uudmlld2Vycy5JQ29udGVudFByb3ZpZGVyI2lucHV0Q2hhbmdlZChvcmcuZWNs
aXBzZS5qZmFjZS52aWV3ZXJzLlZpZXdlciwNCi0JCSAqICAgICAgamF2YS5sYW5nLk9iamVjdCwg
amF2YS5sYW5nLk9iamVjdCkNCi0JCSAqLw0KLQkJcHVibGljIHZvaWQgaW5wdXRDaGFuZ2VkKFZp
ZXdlciB2aWV3ZXIsIE9iamVjdCBvbGRJbnB1dCwgT2JqZWN0IG5ld0lucHV0KSB7DQotDQotCQl9
DQotDQotCX0NCi0NCi0JLyoqDQotCSAqIEFuIGl0ZW0gdG8gYmUgZGlzcGxheWVkIGluIHRoZSB0
YWJsZS4NCi0JICovDQotCXByaXZhdGUgc3RhdGljIGNsYXNzIERpc3BsYXllZEl0ZW0gew0KLQ0K
LQkJcHJpdmF0ZSBpbnQgaGludDsNCi0NCi0JCXByaXZhdGUgSVN0YXR1cyBzdGF0dXM7DQotDQot
CQkvKioNCi0JCSAqIENvbnN0cnVjdHMgYSBuZXcgaXRlbS4NCi0JCSAqIA0KLQkJICogQHBhcmFt
IHN0YXR1cw0KLQkJICogQHBhcmFtIGhpbnQNCi0JCSAqLw0KLQkJcHVibGljIERpc3BsYXllZEl0
ZW0oSVN0YXR1cyBzdGF0dXMsIGludCBoaW50KSB7DQotCQkJaWYgKHN0YXR1cyA9PSBudWxsKQ0K
LQkJCQl0aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCk7DQotCQkJdGhpcy5zdGF0
dXMgPSBzdGF0dXM7DQotCQkJdGhpcy5oaW50ID0gaGludDsNCi0JCX0NCi0NCi0JCXB1YmxpYyBT
dHJpbmcgdG9TdHJpbmcoKSB7DQotDQotCQkJU3RyaW5nIHNldmVyaXR5ID0gIj8iOw0KLQ0KLQkJ
CXN3aXRjaCAoc3RhdHVzLmdldFNldmVyaXR5KCkpIHsNCi0JCQljYXNlIElTdGF0dXMuQ0FOQ0VM
Og0KLQkJCQlzZXZlcml0eSA9ICJDYW5jZWwiOw0KLQkJCQlicmVhazsNCi0JCQljYXNlIElTdGF0
dXMuRVJST1I6DQotCQkJCXNldmVyaXR5ID0gIkVycm9yIjsNCi0JCQkJYnJlYWs7DQotCQkJY2Fz
ZSBJU3RhdHVzLklORk86DQotCQkJCXNldmVyaXR5ID0gIkluZm8iOw0KLQkJCQlicmVhazsNCi0J
CQljYXNlIElTdGF0dXMuT0s6DQotCQkJCXNldmVyaXR5ID0gIk9rIjsNCi0JCQkJYnJlYWs7DQot
CQkJY2FzZSBJU3RhdHVzLldBUk5JTkc6DQotCQkJCXNldmVyaXR5ID0gIldhcm5pbmciOw0KLQkJ
CQlicmVhazsNCi0JCQl9DQotDQotCQkJU3RyaW5nIHN0cmluZ0hpbnQgPSAiPyI7DQotDQotCQkJ
c3dpdGNoIChoaW50KSB7DQotCQkJY2FzZSBTdGF0dXNNYW5hZ2VyLkxPRzoNCi0JCQkJc3RyaW5n
SGludCA9ICJMT0ciOw0KLQkJCQlicmVhazsNCi0JCQljYXNlIFN0YXR1c01hbmFnZXIuTk9ORToN
Ci0JCQkJc3RyaW5nSGludCA9ICJOT05FIjsNCi0JCQkJYnJlYWs7DQotCQkJY2FzZSBTdGF0dXNN
YW5hZ2VyLlNIT1c6DQotCQkJCXN0cmluZ0hpbnQgPSAiU0hPVyI7DQotCQkJCWJyZWFrOw0KLQkJ
CWNhc2UgU3RhdHVzTWFuYWdlci5TSE9XIHwgU3RhdHVzTWFuYWdlci5MT0c6DQotCQkJCXN0cmlu
Z0hpbnQgPSAiU0hPV0FORExPRyI7DQotCQkJCWJyZWFrOw0KLQkJCX0NCi0NCi0JCQlyZXR1cm4g
IlNldmVyaXR5OiAiICsgc2V2ZXJpdHkgKyAiICAgUGx1Z2luSUQ6ICINCi0JCQkJCSsgc3RhdHVz
LmdldFBsdWdpbigpICsgIiAgIEhpbnQ6ICIgKyBzdHJpbmdIaW50Ow0KLQkJfQ0KLQ0KLQkJLyoq
DQotCQkgKiBAcmV0dXJuIHRoZSBoaW50DQotCQkgKi8NCi0JCXB1YmxpYyBpbnQgZ2V0SGludCgp
IHsNCi0JCQlyZXR1cm4gaGludDsNCi0JCX0NCi0NCi0JCS8qKg0KLQkJICogQHJldHVybiB0aGUg
c3RhdHVzDQotCQkgKi8NCi0JCXB1YmxpYyBJU3RhdHVzIGdldFN0YXR1cygpIHsNCi0JCQlyZXR1
cm4gc3RhdHVzOw0KLQkJfQ0KLQl9DQotDQotfQ0KSW5kZXg6IFN0YXR1cyBIYW5kbGluZyBUZXN0
IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy92aWV3cy9QYXJ0SW5pdEV4
Y2VwdGlvbkVkaXRvci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRsaW5n
IFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1BhcnRJ
bml0RXhjZXB0aW9uRWRpdG9yLmphdmENCmRpZmYgLU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVk
L29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1BhcnRJbml0RXhjZXB0
aW9uRWRpdG9yLmphdmENCi0tLSBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2Uv
dWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3MvUGFydEluaXRFeGNlcHRpb25FZGl0b3IuamF2
YQkxMSBBcHIgMjAwNyAxNTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBKYW4gMTk3
MCAwMDowMDowMCAtMDAwMA0KQEAgLTEsNTggKzAsMCBAQA0KLS8qKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3Ro
ZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29t
cGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2NvbXBhbmll
cyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6Ly93d3cu
ZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBDb250cmlidXRvcnM6DQot
ICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0K
LSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWkudGVzdHMu
c3RhdHVzaGFuZGxlcnMudmlld3M7DQotDQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGlt
ZS5JUHJvZ3Jlc3NNb25pdG9yOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5zd3Qud2lkZ2V0cy5Db21w
b3NpdGU7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLklFZGl0b3JJbnB1dDsNCi1pbXBvcnQgb3Jn
LmVjbGlwc2UudWkuSUVkaXRvclNpdGU7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLlBhcnRJbml0
RXhjZXB0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5wYXJ0LkVkaXRvclBhcnQ7DQotDQot
LyoqDQotICogDQotICovDQotcHVibGljIGNsYXNzIFBhcnRJbml0RXhjZXB0aW9uRWRpdG9yIGV4
dGVuZHMgRWRpdG9yUGFydCB7DQotDQotCXB1YmxpYyB2b2lkIGRvU2F2ZShJUHJvZ3Jlc3NNb25p
dG9yIG1vbml0b3IpIHsNCi0NCi0JfQ0KLQ0KLQlwdWJsaWMgdm9pZCBkb1NhdmVBcygpIHsNCi0N
Ci0JfQ0KLQ0KLQlwdWJsaWMgdm9pZCBpbml0KElFZGl0b3JTaXRlIHNpdGUsIElFZGl0b3JJbnB1
dCBpbnB1dCkNCi0JCQl0aHJvd3MgUGFydEluaXRFeGNlcHRpb24gew0KLQkJdGhyb3cgbmV3IFBh
cnRJbml0RXhjZXB0aW9uKA0KLQkJCQkiQSBzYW1wbGUgUGFydEluaXRFeGNlcHRpb24gdGhyb3du
IGR1cmluZyB2aWV3cGFydCBpbml0aWFsaXphdGlvbi4iKTsNCi0NCi0JfQ0KLQ0KLQlwdWJsaWMg
Ym9vbGVhbiBpc0RpcnR5KCkgew0KLQ0KLQkJcmV0dXJuIGZhbHNlOw0KLQl9DQotDQotCXB1Ymxp
YyBib29sZWFuIGlzU2F2ZUFzQWxsb3dlZCgpIHsNCi0NCi0JCXJldHVybiBmYWxzZTsNCi0JfQ0K
LQ0KLQlwdWJsaWMgdm9pZCBjcmVhdGVQYXJ0Q29udHJvbChDb21wb3NpdGUgcGFyZW50KSB7DQot
DQotCX0NCi0NCi0JcHVibGljIHZvaWQgc2V0Rm9jdXMoKSB7DQotDQotCX0NCi0NCi19DQpJbmRl
eDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hh
bmRsZXJzL3ZpZXdzL1BhcnRJbml0RXhjZXB0aW9uVmlldy5qYXZhDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1Mg
ZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1
c2hhbmRsZXJzL3ZpZXdzL1BhcnRJbml0RXhjZXB0aW9uVmlldy5qYXZhDQpkaWZmIC1OIFN0YXR1
cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy92
aWV3cy9QYXJ0SW5pdEV4Y2VwdGlvblZpZXcuamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0
IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy92aWV3cy9QYXJ0SW5pdEV4
Y2VwdGlvblZpZXcuamF2YQkxMSBBcHIgMjAwNyAxNTowOTozNyAtMDAwMAkxLjINCisrKyAvZGV2
L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEsMzcgKzAsMCBAQA0KLS8qKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA1LCAyMDA3IElCTSBDb3Jw
b3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3Jh
bSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUg
dW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3
aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0K
LSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBD
b250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBp
bXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVj
bGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMudmlld3M7DQotDQotaW1wb3J0IG9yZy5lY2xp
cHNlLnN3dC53aWRnZXRzLkNvbXBvc2l0ZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSU1lbWVu
dG87DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLklWaWV3U2l0ZTsNCi1pbXBvcnQgb3JnLmVjbGlw
c2UudWkuUGFydEluaXRFeGNlcHRpb247DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLnBhcnQuVmll
d1BhcnQ7DQotDQotLyoqDQotICogQSBzYW1wbGUgdmlldyB0aHJvd2luZyBhIFBhcnRJbml0RXhj
ZXB0aW9uIGluaXRpYWxpemF0aW9uLg0KLSAqLw0KLXB1YmxpYyBjbGFzcyBQYXJ0SW5pdEV4Y2Vw
dGlvblZpZXcgZXh0ZW5kcyBWaWV3UGFydCB7DQotDQotCXB1YmxpYyB2b2lkIGluaXQoSVZpZXdT
aXRlIHNpdGUsIElNZW1lbnRvIG1lbWVudG8pIHRocm93cyBQYXJ0SW5pdEV4Y2VwdGlvbiB7DQot
CQl0aHJvdyBuZXcgUGFydEluaXRFeGNlcHRpb24oDQotCQkJCSJBIHNhbXBsZSBQYXJ0SW5pdEV4
Y2VwdGlvbiB0aHJvd24gZHVyaW5nIHZpZXdwYXJ0IGluaXRpYWxpemF0aW9uLiIpOw0KLQl9DQot
DQotCXB1YmxpYyB2b2lkIGNyZWF0ZVBhcnRDb250cm9sKENvbXBvc2l0ZSBwYXJlbnQpIHsNCi0N
Ci0JfQ0KLQ0KLQlwdWJsaWMgdm9pZCBzZXRGb2N1cygpIHsNCi0NCi0JfQ0KLQ0KLX0NCkluZGV4
OiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFu
ZGxlcnMvdmlld3MvUnVudGltZUV4Y2VwdGlvblZpZXcuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNo
YW5kbGVycy92aWV3cy9SdW50aW1lRXhjZXB0aW9uVmlldy5qYXZhDQpkaWZmIC1OIFN0YXR1cyBI
YW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy92aWV3
cy9SdW50aW1lRXhjZXB0aW9uVmlldy5qYXZhDQotLS0gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVk
L29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL3ZpZXdzL1J1bnRpbWVFeGNlcHRp
b25WaWV3LmphdmEJMTEgQXByIDIwMDcgMTU6MDk6MzcgLTAwMDAJMS4yDQorKysgL2Rldi9udWxs
CTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0xLDMwICswLDAgQEANCi0vKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBJQk0gQ29ycG9yYXRp
b24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQotICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCi0gKiBo
dHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAqDQotICogQ29udHJp
YnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVt
ZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi1wYWNrYWdlIG9yZy5lY2xpcHNl
LnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLnZpZXdzOw0KLQ0KLWltcG9ydCBvcmcuZWNsaXBzZS5z
d3Qud2lkZ2V0cy5Db21wb3NpdGU7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLnBhcnQuVmlld1Bh
cnQ7DQotDQotLyoqDQotICogQSB2aWV3IHRocm93aW5nIFJ1bnRpbWVFeGNlcHRpb24gZHVyaW5n
IGNvbnRyb2wgY3JlYXRpb24uDQotICovDQotcHVibGljIGNsYXNzIFJ1bnRpbWVFeGNlcHRpb25W
aWV3IGV4dGVuZHMgVmlld1BhcnQgew0KLQ0KLQlwdWJsaWMgdm9pZCBjcmVhdGVQYXJ0Q29udHJv
bChDb21wb3NpdGUgcGFyZW50KSB7DQotCQl0aHJvdyBuZXcgUnVudGltZUV4Y2VwdGlvbigNCi0J
CQkJIkEgc2FtcGxlIFJ1bnRpbWVFeGNlcHRpb24gdGhyb3duIGR1cmluZyBjb250cm9sIGNyZWF0
aW9uLiIpOw0KLQl9DQotDQotCXB1YmxpYyB2b2lkIHNldEZvY3VzKCkgew0KLQ0KLQl9DQotDQot
fQ0KSW5kZXg6IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9z
dGF0dXNoYW5kbGVycy92aWV3cy9SdW50aW1lRXhjZXB0aW9uRWRpdG9yLmphdmENCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0NClJDUyBmaWxlOiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVz
dHMvc3RhdHVzaGFuZGxlcnMvdmlld3MvUnVudGltZUV4Y2VwdGlvbkVkaXRvci5qYXZhDQpkaWZm
IC1OIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNo
YW5kbGVycy92aWV3cy9SdW50aW1lRXhjZXB0aW9uRWRpdG9yLmphdmENCi0tLSBTdGF0dXMgSGFu
ZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvdmlld3Mv
UnVudGltZUV4Y2VwdGlvbkVkaXRvci5qYXZhCTExIEFwciAyMDA3IDE1OjA5OjM3IC0wMDAwCTEu
Mg0KKysrIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpAQCAtMSw1OSArMCww
IEBADQotLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIw
MDcgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQotICogQWxsIHJpZ2h0cyByZXNlcnZlZC4g
VGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscw0KLSAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMA0KLSAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0DQotICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwN
Ci0gKg0KLSAqIENvbnRyaWJ1dG9yczoNCi0gKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlh
bCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQotcGFj
a2FnZSBvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGVycy52aWV3czsNCi0NCi1pbXBv
cnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0b3I7DQotaW1wb3J0IG9y
Zy5lY2xpcHNlLnN3dC53aWRnZXRzLkNvbXBvc2l0ZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWku
SUVkaXRvcklucHV0Ow0KLWltcG9ydCBvcmcuZWNsaXBzZS51aS5JRWRpdG9yU2l0ZTsNCi1pbXBv
cnQgb3JnLmVjbGlwc2UudWkucGFydC5FZGl0b3JQYXJ0Ow0KLQ0KLS8qKg0KLSAqIA0KLSAqLw0K
LXB1YmxpYyBjbGFzcyBSdW50aW1lRXhjZXB0aW9uRWRpdG9yIGV4dGVuZHMgRWRpdG9yUGFydCB7
DQotDQotCXB1YmxpYyB2b2lkIGRvU2F2ZShJUHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHsNCi0N
Ci0JfQ0KLQ0KLQlwdWJsaWMgdm9pZCBkb1NhdmVBcygpIHsNCi0NCi0JfQ0KLQ0KLQlwdWJsaWMg
dm9pZCBpbml0KElFZGl0b3JTaXRlIHNpdGUsIElFZGl0b3JJbnB1dCBpbnB1dCkgew0KLQ0KLQl9
DQotDQotCXB1YmxpYyBib29sZWFuIGlzRGlydHkoKSB7DQotDQotCQlyZXR1cm4gZmFsc2U7DQot
CX0NCi0NCi0JcHVibGljIGJvb2xlYW4gaXNTYXZlQXNBbGxvd2VkKCkgew0KLQ0KLQkJcmV0dXJu
IGZhbHNlOw0KLQl9DQotDQotCXB1YmxpYyB2b2lkIGNyZWF0ZVBhcnRDb250cm9sKENvbXBvc2l0
ZSBwYXJlbnQpIHsNCi0NCi0JfQ0KLQ0KLQlwdWJsaWMgdm9pZCBzZXRGb2N1cygpIHsNCi0NCi0J
fQ0KLQ0KLQlwdWJsaWMgSUVkaXRvclNpdGUgZ2V0RWRpdG9yU2l0ZSgpIHsNCi0JCXRocm93IG5l
dyBSdW50aW1lRXhjZXB0aW9uKA0KLQkJCQkiQSBzYW1wbGUgUnVudGltZUV4Y2VwdGlvbiB0aHJv
d24gZHVyaW5nIGVkaXRvciBzaXRlIHJldHJpZXZhbC4iKTsNCi0JfQ0KLQ0KLX0NCkluZGV4OiBT
dGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxl
cnMvam9icy9UZXN0Sm9iLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiBTdGF0dXMgSGFuZGxp
bmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvam9icy9UZXN0
Sm9iLmphdmENCmRpZmYgLU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3Vp
L3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVGVzdEpvYi5qYXZhDQotLS0gU3RhdHVzIEhhbmRs
aW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVGVz
dEpvYi5qYXZhCTExIEFwciAyMDA3IDE1OjA5OjM3IC0wMDAwCTEuMg0KKysrIC9kZXYvbnVsbAkx
IEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpAQCAtMSwxNDkgKzAsMCBAQA0KLS8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAyMDA2LCAyMDA3IElCTSBDb3Jwb3JhdGlv
biBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQg
dGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjANCi0gKiB3aGljaCBh
Y2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5kIGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0
dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYxMC5odG1sDQotICoNCi0gKiBDb250cmli
dXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1l
bnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2Uu
dWkudGVzdHMuc3RhdHVzaGFuZGxlcnMuam9iczsNCi0NCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29y
ZS5yZXNvdXJjZXMuUmVzb3VyY2VzUGx1Z2luOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1
bnRpbWUuSVByb2dyZXNzTW9uaXRvcjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LklTdGF0dXM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5NdWx0aVN0YXR1czsN
Ci1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlN0YXR1czsNCi1pbXBvcnQgb3JnLmVj
bGlwc2UuY29yZS5ydW50aW1lLmpvYnMuSm9iOw0KLQ0KLS8qKg0KLSAqIEJhc2UgY2xhc3MgZm9y
IGEgc2ltcGxlIHRlc3Qgam9iIHdpdGggY29uZmlndXJhYmxlIHBhcmFtZXRlcnMuDQotICovDQot
cHVibGljIGNsYXNzIFRlc3RKb2IgZXh0ZW5kcyBKb2Igew0KLQkvKioNCi0JICogQSBmYW1pbHkg
aWRlbnRpZmllciBmb3IgYWxsIHRlc3Qgam9icw0KLQkgKi8NCi0JcHVibGljIHN0YXRpYyBmaW5h
bCBPYmplY3QgRkFNSUxZX1RFU1RfSk9CID0gbmV3IE9iamVjdCgpOw0KLQkvKioNCi0JICogVG90
YWwgZHVyYXRpb24gdGhhdCB0aGUgdGVzdCBqb2Igc2hvdWxkIHNsZWVwLCBpbiBtaWxsaXNlY29u
ZHMuDQotCSAqLw0KLQlwcml2YXRlIGxvbmcgZHVyYXRpb247DQotDQotCXByaXZhdGUgYm9vbGVh
biByZXNjaGVkdWxlOw0KLQ0KLQlwcml2YXRlIGxvbmcgcmVzY2hlZHVsZVdhaXQ7DQotDQotCXBy
aXZhdGUgYm9vbGVhbiByZXR1cm5FcnJvcjsNCi0NCi0JcHJpdmF0ZSBUaHJvd2FibGUgdG9CZVRo
cm93bjsNCi0NCi0JcHJpdmF0ZSBsb25nIHRocm93QWZ0ZXI7DQotDQotCS8qKg0KLQkgKiBDcmVh
dGVzIGEgbmV3IHRlc3Qgam9iDQotCSAqIA0KLQkgKiBAcGFyYW0gZHVyYXRpb24NCi0JICogICAg
ICAgICAgICB0b3RhbCB0aW1lIHRoYXQgdGhlIHRlc3Qgam9iIHNob3VsZCBzbGVlcCwgaW4gbWls
bGlzZWNvbmRzDQotCSAqIEBwYXJhbSBsb2NrDQotCSAqICAgICAgICAgICAgd2hldGhlciB0aGUg
am9iIHNob3VsZCB1c2UgYSB3b3Jrc3BhY2Ugc2NoZWR1bGluZyBydWxlDQotCSAqIEBwYXJhbSBy
ZXNjaGVkdWxlV2FpdA0KLQkgKiBAcGFyYW0gcmVzY2hlZHVsZQ0KLQkgKiANCi0JICogQHBhcmFt
IHRocm93QWZ0ZXINCi0JICogQHBhcmFtIHRvQmVUaHJvd24NCi0JICogQHBhcmFtIHJldHVybkVy
cm9yDQotCSAqLw0KLQlwdWJsaWMgVGVzdEpvYihsb25nIGR1cmF0aW9uLCBib29sZWFuIGxvY2ss
IGJvb2xlYW4gcmVzY2hlZHVsZSwNCi0JCQlsb25nIHJlc2NoZWR1bGVXYWl0LCBsb25nIHRocm93
QWZ0ZXIsIFRocm93YWJsZSB0b0JlVGhyb3duLA0KLQkJCWJvb2xlYW4gcmV0dXJuRXJyb3IpIHsN
Ci0JCXN1cGVyKCJUZXN0IGpvYiIpOyAvLyROT04tTkxTLTEkDQotCQl0aGlzLmR1cmF0aW9uID0g
ZHVyYXRpb247DQotCQl0aGlzLnJlc2NoZWR1bGUgPSByZXNjaGVkdWxlOw0KLQkJdGhpcy5yZXNj
aGVkdWxlV2FpdCA9IHJlc2NoZWR1bGVXYWl0Ow0KLQkJdGhpcy50aHJvd0FmdGVyID0gdGhyb3dB
ZnRlcjsNCi0JCXRoaXMudG9CZVRocm93biA9IHRvQmVUaHJvd247DQotCQl0aGlzLnJldHVybkVy
cm9yID0gcmV0dXJuRXJyb3I7DQotDQotCQlpZiAobG9jaykNCi0JCQlzZXRSdWxlKFJlc291cmNl
c1BsdWdpbi5nZXRXb3Jrc3BhY2UoKS5nZXRSb290KCkpOw0KLQl9DQotDQotCS8qDQotCSAqIChu
b24tSmF2YWRvYykNCi0JICogDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UuY29yZS5pbnRlcm5hbC5q
b2JzLkludGVybmFsSm9iI2JlbG9uZ3NUbyhqYXZhLmxhbmcuT2JqZWN0KQ0KLQkgKi8NCi0JcHVi
bGljIGJvb2xlYW4gYmVsb25nc1RvKE9iamVjdCBmYW1pbHkpIHsNCi0JCWlmIChmYW1pbHkgaW5z
dGFuY2VvZiBUZXN0Sm9iKSB7DQotCQkJcmV0dXJuIHRydWU7DQotCQl9DQotCQlyZXR1cm4gZmFt
aWx5ID09IEZBTUlMWV9URVNUX0pPQjsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2Mp
DQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwuam9icy5JbnRlcm5h
bEpvYiNydW4ob3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0b3IpDQotCSAq
Lw0KLQlwdWJsaWMgSVN0YXR1cyBydW4oSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB7DQotDQot
CQlmaW5hbCBsb25nIHNsZWVwID0gMTA7DQotCQlpbnQgdGlja3MgPSAoaW50KSAoZHVyYXRpb24g
LyBzbGVlcCk7DQotCQlpbnQgdGlja3NUb1Rocm93ID0gKGludCkgKHRocm93QWZ0ZXIgLyBzbGVl
cCk7DQotDQotCQltb25pdG9yLmJlZ2luVGFzaygiVUkgVGFzayIsIHRpY2tzKTsNCi0JCW1vbml0
b3Iuc2V0VGFza05hbWUoIlVJIFRhc2siKTsNCi0JCXRyeSB7DQotCQkJZm9yIChpbnQgaSA9IDA7
IGkgPCB0aWNrczsgaSsrKSB7DQotCQkJCWlmIChtb25pdG9yLmlzQ2FuY2VsZWQoKSkNCi0JCQkJ
CXJldHVybiBTdGF0dXMuQ0FOQ0VMX1NUQVRVUzsNCi0JCQkJbW9uaXRvci5zdWJUYXNrKCJQcm9j
ZXNzaW5nIHRpY2sgIyIgKyBpKTsgLy8kTk9OLU5MUy0xJA0KLQkJCQl0cnkgew0KLQkJCQkJVGhy
ZWFkLnNsZWVwKHNsZWVwKTsNCi0JCQkJfSBjYXRjaCAoSW50ZXJydXB0ZWRFeGNlcHRpb24gZSkg
ew0KLQkJCQkJcmV0dXJuIFN0YXR1cy5DQU5DRUxfU1RBVFVTOw0KLQkJCQl9DQotCQkJCWlmIChp
ID09IHRpY2tzVG9UaHJvdykgew0KLQkJCQkJaWYgKHJldHVybkVycm9yKSB7DQotCQkJCQkJTXVs
dGlTdGF0dXMgcmVzdWx0ID0gbmV3IE11bHRpU3RhdHVzKA0KLQkJCQkJCQkJIm9yZy5lY2xpcHNl
LnVpLmV4YW1wbGVzLnN0YXR1c2hhbmRsaW5nLmpvYnMiLCAxLCAiVGhpcyBpcyB0aGUgTXVsdGlT
dGF0dXMgbWVzc2FnZSIsIG5ldyBSdW50aW1lRXhjZXB0aW9uKCJUaGlzIGlzIHRoZSBNdWx0aVN0
YXR1cyBleGNlcHRpb24iKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAvLyROT04tTkxT
LTMkDQotCQkJCQkJcmVzdWx0DQotCQkJCQkJCQkuYWRkKG5ldyBTdGF0dXMoDQotCQkJCQkJCQkJ
CUlTdGF0dXMuRVJST1IsDQotCQkJCQkJCQkJCSJvcmcuZWNsaXBzZS51aS5leGFtcGxlcy5zdGF0
dXNoYW5kbGluZy5qb2JzIiwgMSwgIlRoaXMgaXMgdGhlIGNoaWxkIHN0YXR1cyBtZXNzYWdlIiwg
dG9CZVRocm93bikpOyAvLyROT04tTkxTLTEkIC8vJE5PTi1OTFMtMiQgDQotCQkJCQkJcmV0dXJu
IHJlc3VsdDsNCi0JCQkJCX0NCi0JCQkJCXRocm93RXhjZXB0aW9uKHRvQmVUaHJvd24pOw0KLQkJ
CQkJLy8gdG9CZVRocm93biBpcyBuZWl0aGVyIGEgcnVudGltZSBleGNlcHRpb24gbm9yIGFuDQot
CQkJCQkvLyBlcnJvcg0KLQkJCQkJcmV0dXJuIFN0YXR1cy5DQU5DRUxfU1RBVFVTOw0KLQ0KLQkJ
CQl9DQotDQotCQkJCW1vbml0b3Iud29ya2VkKDEpOw0KLQkJCX0NCi0JCX0gZmluYWxseSB7DQot
CQkJaWYgKHJlc2NoZWR1bGUpDQotCQkJCXNjaGVkdWxlKHJlc2NoZWR1bGVXYWl0KTsNCi0JCQlt
b25pdG9yLmRvbmUoKTsNCi0JCX0NCi0NCi0JCXJldHVybiBTdGF0dXMuT0tfU1RBVFVTOw0KLQl9
DQotDQotCXByaXZhdGUgdm9pZCB0aHJvd0V4Y2VwdGlvbihUaHJvd2FibGUgdGgpIHsNCi0JCWlm
ICh0aCA9PSBudWxsKQ0KLQkJCXJldHVybjsNCi0NCi0JCWlmICh0aCBpbnN0YW5jZW9mIFJ1bnRp
bWVFeGNlcHRpb24pDQotCQkJdGhyb3cgKFJ1bnRpbWVFeGNlcHRpb24pIHRoOw0KLQ0KLQkJaWYg
KHRoIGluc3RhbmNlb2YgRXJyb3IpIHsNCi0JCQl0aHJvdyAoRXJyb3IpIHRoOw0KLQkJfQ0KLQ0K
LQkJLy8gVE9ETyBkbyBzb21ldGhpbmcgISEgdGhlIGV4Y2VwdGlvbiBjYW5ub3QgYmUgdGhyb3du
IC0gaXQncyBuZWl0aGVyIGENCi0JCS8vIFJ1bnRpbWVFeGNlcHRpb24gbm9yIGFuIEVycm9yDQot
CX0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rl
c3RzL3N0YXR1c2hhbmRsZXJzL2pvYnMvVUlUZXN0Sm9iLmphdmENCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBm
aWxlOiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVz
aGFuZGxlcnMvam9icy9VSVRlc3RKb2IuamF2YQ0KZGlmZiAtTiBTdGF0dXMgSGFuZGxpbmcgVGVz
dCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvam9icy9VSVRlc3RKb2Iu
amF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9z
dGF0dXNoYW5kbGVycy9qb2JzL1VJVGVzdEpvYi5qYXZhCTExIEFwciAyMDA3IDE1OjA5OjM3IC0w
MDAwCTEuMg0KKysrIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwDQpAQCAtMSwx
MTEgKzAsMCBAQA0KLS8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAy
MDA2LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sDQotICoNCi0gKiBDb250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Lw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMuam9iczsNCi0N
Ci1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5yZXNvdXJjZXMuUmVzb3VyY2VzUGx1Z2luOw0KLWlt
cG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9uaXRvcjsNCi1pbXBvcnQg
b3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklTdGF0dXM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNv
cmUucnVudGltZS5NdWx0aVN0YXR1czsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LlN0YXR1czsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkucHJvZ3Jlc3MuVUlKb2I7DQotDQotLyoq
DQotICogQmFzZSBjbGFzcyBmb3IgYSBzaW1wbGUgdGVzdCBVSSBqb2Igd2l0aCBjb25maWd1cmFi
bGUgcGFyYW1ldGVycw0KLSAqLw0KLXB1YmxpYyBjbGFzcyBVSVRlc3RKb2IgZXh0ZW5kcyBVSUpv
YiB7DQotDQotCXByaXZhdGUgbG9uZyBkdXJhdGlvbjsNCi0NCi0JcHJpdmF0ZSBib29sZWFuIHJl
dHVybkVycm9yOw0KLQ0KLQlwcml2YXRlIFRocm93YWJsZSB0b0JlVGhyb3duOw0KLQ0KLQlwcml2
YXRlIGxvbmcgdGhyb3dBZnRlcjsNCi0NCi0JLyoqDQotCSAqIEBwYXJhbSBkdXJhdGlvbg0KLQkg
KiBAcGFyYW0gbG9jaw0KLQkgKiBAcGFyYW0gdGhyb3dBZnRlcg0KLQkgKiBAcGFyYW0gdG9CZVRo
cm93bg0KLQkgKiBAcGFyYW0gcmV0dXJuRXJyb3INCi0JICovDQotCXB1YmxpYyBVSVRlc3RKb2Io
bG9uZyBkdXJhdGlvbiwgYm9vbGVhbiBsb2NrLCBsb25nIHRocm93QWZ0ZXIsDQotCQkJVGhyb3dh
YmxlIHRvQmVUaHJvd24sIGJvb2xlYW4gcmV0dXJuRXJyb3IpIHsNCi0JCXN1cGVyKCJUZXN0IGpv
YiIpOyAvLyROT04tTkxTLTEkDQotCQl0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247DQotDQotCQl0
aGlzLnRocm93QWZ0ZXIgPSB0aHJvd0FmdGVyOw0KLQkJdGhpcy50b0JlVGhyb3duID0gdG9CZVRo
cm93bjsNCi0JCXRoaXMucmV0dXJuRXJyb3IgPSByZXR1cm5FcnJvcjsNCi0NCi0JCWlmIChsb2Nr
KQ0KLQkJCXNldFJ1bGUoUmVzb3VyY2VzUGx1Z2luLmdldFdvcmtzcGFjZSgpLmdldFJvb3QoKSk7
DQotCX0NCi0NCi0JcHVibGljIElTdGF0dXMgcnVuSW5VSVRocmVhZChJUHJvZ3Jlc3NNb25pdG9y
IG1vbml0b3IpIHsNCi0NCi0JCWZpbmFsIGxvbmcgc2xlZXAgPSAxMDsNCi0JCWludCB0aWNrcyA9
IChpbnQpIChkdXJhdGlvbiAvIHNsZWVwKTsNCi0JCWludCB0aWNrc1RvVGhyb3cgPSAoaW50KSAo
dGhyb3dBZnRlciAvIHNsZWVwKTsNCi0NCi0JCW1vbml0b3IuYmVnaW5UYXNrKCJUYXNrIiwgdGlj
a3MpOw0KLQkJbW9uaXRvci5zZXRUYXNrTmFtZSgiVGFzayIpOw0KLQkJdHJ5IHsNCi0JCQlmb3Ig
KGludCBpID0gMDsgaSA8IHRpY2tzOyBpKyspIHsNCi0JCQkJaWYgKG1vbml0b3IuaXNDYW5jZWxl
ZCgpKQ0KLQkJCQkJcmV0dXJuIFN0YXR1cy5DQU5DRUxfU1RBVFVTOw0KLQkJCQltb25pdG9yLnN1
YlRhc2soIlByb2Nlc3NpbmcgdGljayAjIiArIGkpOyAvLyROT04tTkxTLTEkDQotCQkJCXRyeSB7
DQotCQkJCQlUaHJlYWQuc2xlZXAoc2xlZXApOw0KLQkJCQl9IGNhdGNoIChJbnRlcnJ1cHRlZEV4
Y2VwdGlvbiBlKSB7DQotCQkJCQlyZXR1cm4gU3RhdHVzLkNBTkNFTF9TVEFUVVM7DQotCQkJCX0N
Ci0NCi0JCQkJaWYgKGkgPT0gdGlja3NUb1Rocm93KSB7DQotCQkJCQlpZiAocmV0dXJuRXJyb3Ip
IHsNCi0JCQkJCQlNdWx0aVN0YXR1cyByZXN1bHQgPSBuZXcgTXVsdGlTdGF0dXMoDQotCQkJCQkJ
CQkib3JnLmVjbGlwc2UudWkuZXhhbXBsZXMuc3RhdHVzaGFuZGxpbmcuam9icyIsIDEsICJUaGlz
IGlzIHRoZSBNdWx0aVN0YXR1cyBtZXNzYWdlIiwgbmV3IFJ1bnRpbWVFeGNlcHRpb24oIlRoaXMg
aXMgdGhlIE11bHRpU3RhdHVzIGV4Y2VwdGlvbiIpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxT
LTIkIC8vJE5PTi1OTFMtMyQNCi0JCQkJCQlyZXN1bHQNCi0JCQkJCQkJCS5hZGQobmV3IFN0YXR1
cygNCi0JCQkJCQkJCQkJSVN0YXR1cy5FUlJPUiwNCi0JCQkJCQkJCQkJIm9yZy5lY2xpcHNlLnVp
LmV4YW1wbGVzLnN0YXR1c2hhbmRsaW5nLmpvYnMiLCAxLCAiVGhpcyBpcyB0aGUgY2hpbGQgc3Rh
dHVzIG1lc3NhZ2UiLCB0b0JlVGhyb3duKSk7IC8vJE5PTi1OTFMtMSQgLy8kTk9OLU5MUy0yJCAN
Ci0JCQkJCQlyZXR1cm4gcmVzdWx0Ow0KLQkJCQkJfQ0KLQkJCQkJdGhyb3dFeGNlcHRpb24odG9C
ZVRocm93bik7DQotCQkJCQkvLyB0b0JlVGhyb3duIGlzIG5laXRoZXIgYSBydW50aW1lIGV4Y2Vw
dGlvbiBub3IgYW4NCi0JCQkJCS8vIGVycm9yDQotCQkJCQlyZXR1cm4gU3RhdHVzLkNBTkNFTF9T
VEFUVVM7DQotDQotCQkJCX0NCi0NCi0JCQkJbW9uaXRvci53b3JrZWQoMSk7DQotCQkJfQ0KLQkJ
fSBmaW5hbGx5IHsNCi0JCQltb25pdG9yLmRvbmUoKTsNCi0JCX0NCi0JCXJldHVybiBTdGF0dXMu
T0tfU1RBVFVTOw0KLQl9DQotDQotCXByaXZhdGUgdm9pZCB0aHJvd0V4Y2VwdGlvbihUaHJvd2Fi
bGUgdGgpIHsNCi0JCWlmICh0aCA9PSBudWxsKQ0KLQkJCXJldHVybjsNCi0NCi0JCWlmICh0aCBp
bnN0YW5jZW9mIFJ1bnRpbWVFeGNlcHRpb24pDQotCQkJdGhyb3cgKFJ1bnRpbWVFeGNlcHRpb24p
IHRoOw0KLQ0KLQkJaWYgKHRoIGluc3RhbmNlb2YgRXJyb3IpIHsNCi0JCQl0aHJvdyAoRXJyb3Ip
IHRoOw0KLQkJfQ0KLQ0KLQkJLy8gVE9ETyBkbyBzb21ldGhpbmcgISEgdGhlIGV4Y2VwdGlvbiBj
YW5ub3QgYmUgdGhyb3duIC0gaXQncyBuZWl0aGVyIGENCi0JCS8vIFJ1bnRpbWVFeGNlcHRpb24g
bm9yIGFuIEVycm9yDQotCX0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29y
Zy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3BlbkVycm9yRGlhbG9n
QWN0aW9uLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBC
ZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvYWN0aW9ucy9PcGVuRXJyb3JE
aWFsb2dBY3Rpb24uamF2YQ0KZGlmZiAtTiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2Vj
bGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvYWN0aW9ucy9PcGVuRXJyb3JEaWFsb2dBY3Rp
b24uamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0
cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL09wZW5FcnJvckRpYWxvZ0FjdGlvbi5qYXZhCTExIEFw
ciAyMDA3IDE1OjA5OjM2IC0wMDAwCTEuMg0KKysrIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAw
OjAwIC0wMDAwDQpAQCAtMSw2NiArMCwwIEBADQotLyoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCi0g
KiBDb3B5cmlnaHQgKGMpIDIwMDUsIDIwMDcgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuDQot
ICogQWxsIHJpZ2h0cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5n
IG1hdGVyaWFscw0KLSAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhl
IEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMA0KLSAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMg
ZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0DQotICogaHR0cDovL3d3dy5lY2xpcHNl
Lm9yZy9sZWdhbC9lcGwtdjEwLmh0bWwNCi0gKg0KLSAqIENvbnRyaWJ1dG9yczoNCi0gKiAgICAg
SUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uDQotICoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiovDQotcGFja2FnZSBvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNo
YW5kbGVycy5hY3Rpb25zOw0KLQ0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS5hY3Rpb24uSUFj
dGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UuamZhY2UuZGlhbG9ncy5NZXNzYWdlRGlhbG9nOw0K
LWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS52aWV3ZXJzLklTZWxlY3Rpb247DQotaW1wb3J0IG9y
Zy5lY2xpcHNlLnVpLklXb3JrYmVuY2hXaW5kb3c7DQotaW1wb3J0IG9yZy5lY2xpcHNlLnVpLklX
b3JrYmVuY2hXaW5kb3dBY3Rpb25EZWxlZ2F0ZTsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuUGxh
dGZvcm1VSTsNCi0NCi0vKioNCi0gKiBUaHJvd3MgT3V0T2ZNZW1vcnlFcnJvciBlcnJvci4NCi0g
Ki8NCi1wdWJsaWMgY2xhc3MgT3BlbkVycm9yRGlhbG9nQWN0aW9uIGltcGxlbWVudHMgSVdvcmti
ZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlIHsNCi0NCi0JLyoqDQotCSAqIFRoZSBjb25zdHJ1Y3Rv
ci4NCi0JICovDQotCXB1YmxpYyBPcGVuRXJyb3JEaWFsb2dBY3Rpb24oKSB7DQotCX0NCi0NCi0J
LyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51aS5J
V29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjcnVuKG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlv
bi5JQWN0aW9uKQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgcnVuKElBY3Rpb24gYWN0aW9uKSB7DQot
CQlNZXNzYWdlRGlhbG9nLm9wZW5FcnJvcihQbGF0Zm9ybVVJLmdldFdvcmtiZW5jaCgpDQotCQkJ
CS5nZXRBY3RpdmVXb3JrYmVuY2hXaW5kb3coKS5nZXRTaGVsbCgpLA0KLQkJCQkiTWVzc2FnZURp
YWxvZzpvcGVuRXJyb3IoKSIsICJNZXNzYWdlRGlhbG9nOm9wZW5FcnJvcigpIik7DQotCX0NCi0N
Ci0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51
aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjZGlzcG9zZSgpDQotCSAqLw0KLQlwdWJs
aWMgdm9pZCBkaXNwb3NlKCkgew0KLQl9DQotDQotCS8qDQotCSAqIChub24tSmF2YWRvYykNCi0J
ICogDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVn
YXRlI2luaXQob3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdykNCi0JICovDQotCXB1Ymxp
YyB2b2lkIGluaXQoSVdvcmtiZW5jaFdpbmRvdyB3aW5kb3cpIHsNCi0JfQ0KLQ0KLQkvKg0KLQkg
KiAobm9uLUphdmFkb2MpDQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklBY3Rpb25E
ZWxlZ2F0ZSNzZWxlY3Rpb25DaGFuZ2VkKG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9u
LA0KLQkgKiAgICAgIG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbikNCi0JICov
DQotCXB1YmxpYyB2b2lkIHNlbGVjdGlvbkNoYW5nZWQoSUFjdGlvbiBhY3Rpb24sIElTZWxlY3Rp
b24gc2VsZWN0aW9uKSB7DQotCX0NCi19DQpJbmRleDogU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVk
L29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3Blbldhcm5pbmdE
aWFsb2dBY3Rpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IFN0YXR1cyBIYW5kbGluZyBU
ZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL09wZW5X
YXJuaW5nRGlhbG9nQWN0aW9uLmphdmENCmRpZmYgLU4gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVk
L29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlvbnMvT3Blbldhcm5pbmdE
aWFsb2dBY3Rpb24uamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBz
ZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL09wZW5XYXJuaW5nRGlhbG9nQWN0aW9u
LmphdmEJMTEgQXByIDIwMDcgMTU6MDk6MzcgLTAwMDAJMS4yDQorKysgL2Rldi9udWxsCTEgSmFu
IDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0xLDY2ICswLDAgQEANCi0vKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5k
IG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBh
Y2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0
ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQotICogd2hpY2ggYWNjb21w
YW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCi0gKiBodHRwOi8v
d3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAqDQotICogQ29udHJpYnV0b3Jz
Og0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRp
b24NCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi1wYWNrYWdlIG9yZy5lY2xpcHNlLnVpLnRl
c3RzLnN0YXR1c2hhbmRsZXJzLmFjdGlvbnM7DQotDQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNl
LmFjdGlvbi5JQWN0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS5kaWFsb2dzLk1lc3Nh
Z2VEaWFsb2c7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbjsN
Ci1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdzsNCi1pbXBvcnQgb3JnLmVj
bGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlOw0KLWltcG9ydCBvcmcuZWNs
aXBzZS51aS5QbGF0Zm9ybVVJOw0KLQ0KLS8qKg0KLSAqIFRocm93cyBPdXRPZk1lbW9yeUVycm9y
IGVycm9yLg0KLSAqLw0KLXB1YmxpYyBjbGFzcyBPcGVuV2FybmluZ0RpYWxvZ0FjdGlvbiBpbXBs
ZW1lbnRzIElXb3JrYmVuY2hXaW5kb3dBY3Rpb25EZWxlZ2F0ZSB7DQotDQotCS8qKg0KLQkgKiBU
aGUgY29uc3RydWN0b3IuDQotCSAqLw0KLQlwdWJsaWMgT3Blbldhcm5pbmdEaWFsb2dBY3Rpb24o
KSB7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBv
cmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjcnVuKG9yZy5lY2xp
cHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uKQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgcnVuKElBY3Rp
b24gYWN0aW9uKSB7DQotCQlNZXNzYWdlRGlhbG9nLm9wZW5XYXJuaW5nKFBsYXRmb3JtVUkuZ2V0
V29ya2JlbmNoKCkNCi0JCQkJLmdldEFjdGl2ZVdvcmtiZW5jaFdpbmRvdygpLmdldFNoZWxsKCks
DQotCQkJCSJNZXNzYWdlRGlhbG9nOm9wZW5XYXJuaW5nKCkiLCAiTWVzc2FnZURpYWxvZzpvcGVu
V2FybmluZygpIik7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0J
ICogQHNlZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjZGlz
cG9zZSgpDQotCSAqLw0KLQlwdWJsaWMgdm9pZCBkaXNwb3NlKCkgew0KLQl9DQotDQotCS8qDQot
CSAqIChub24tSmF2YWRvYykNCi0JICogDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UudWkuSVdvcmti
ZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlI2luaXQob3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdp
bmRvdykNCi0JICovDQotCXB1YmxpYyB2b2lkIGluaXQoSVdvcmtiZW5jaFdpbmRvdyB3aW5kb3cp
IHsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2MpDQotCSAqIA0KLQkgKiBAc2VlIG9y
Zy5lY2xpcHNlLnVpLklBY3Rpb25EZWxlZ2F0ZSNzZWxlY3Rpb25DaGFuZ2VkKG9yZy5lY2xpcHNl
LmpmYWNlLmFjdGlvbi5JQWN0aW9uLA0KLQkgKiAgICAgIG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdl
cnMuSVNlbGVjdGlvbikNCi0JICovDQotCXB1YmxpYyB2b2lkIHNlbGVjdGlvbkNoYW5nZWQoSUFj
dGlvbiBhY3Rpb24sIElTZWxlY3Rpb24gc2VsZWN0aW9uKSB7DQotCX0NCi19DQpJbmRleDogU3Rh
dHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJz
L2FjdGlvbnMvT3BlbkluZm9EaWFsb2dBY3Rpb24uamF2YQ0KPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6
IFN0YXR1cyBIYW5kbGluZyBUZXN0IEJlZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5k
bGVycy9hY3Rpb25zL09wZW5JbmZvRGlhbG9nQWN0aW9uLmphdmENCmRpZmYgLU4gU3RhdHVzIEhh
bmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2FjdGlv
bnMvT3BlbkluZm9EaWFsb2dBY3Rpb24uamF2YQ0KLS0tIFN0YXR1cyBIYW5kbGluZyBUZXN0IEJl
ZC9vcmcvZWNsaXBzZS91aS90ZXN0cy9zdGF0dXNoYW5kbGVycy9hY3Rpb25zL09wZW5JbmZvRGlh
bG9nQWN0aW9uLmphdmEJMTEgQXByIDIwMDcgMTU6MDk6MzcgLTAwMDAJMS4yDQorKysgL2Rldi9u
dWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCkBAIC0xLDY3ICswLDAgQEANCi0vKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KLSAqIENvcHlyaWdodCAoYykgMjAwNSwgMjAwNyBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4NCi0gKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0g
YW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQotICogYXJlIG1hZGUgYXZhaWxhYmxlIHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wDQotICogd2hp
Y2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQNCi0g
KiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12MTAuaHRtbA0KLSAqDQotICogQ29u
dHJpYnV0b3JzOg0KLSAqICAgICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1w
bGVtZW50YXRpb24NCi0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi1wYWNrYWdlIG9yZy5lY2xp
cHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLmFjdGlvbnM7DQotDQotaW1wb3J0IG9yZy5lY2xp
cHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uOw0KLWltcG9ydCBvcmcuZWNsaXBzZS5qZmFjZS5kaWFs
b2dzLk1lc3NhZ2VEaWFsb2c7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNl
bGVjdGlvbjsNCi1pbXBvcnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdzsNCi1pbXBv
cnQgb3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlOw0KLWltcG9y
dCBvcmcuZWNsaXBzZS51aS5QbGF0Zm9ybVVJOw0KLQ0KLS8qKg0KLSAqIFRocm93cyBPdXRPZk1l
bW9yeUVycm9yIGVycm9yLg0KLSAqLw0KLXB1YmxpYyBjbGFzcyBPcGVuSW5mb0RpYWxvZ0FjdGlv
biBpbXBsZW1lbnRzIElXb3JrYmVuY2hXaW5kb3dBY3Rpb25EZWxlZ2F0ZSB7DQotDQotCS8qKg0K
LQkgKiBUaGUgY29uc3RydWN0b3IuDQotCSAqLw0KLQlwdWJsaWMgT3BlbkluZm9EaWFsb2dBY3Rp
b24oKSB7DQotCX0NCi0NCi0JLyoNCi0JICogKG5vbi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNl
ZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2luZG93QWN0aW9uRGVsZWdhdGUjcnVuKG9yZy5l
Y2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uKQ0KLQkgKi8NCi0JcHVibGljIHZvaWQgcnVuKElB
Y3Rpb24gYWN0aW9uKSB7DQotCQlNZXNzYWdlRGlhbG9nLm9wZW5JbmZvcm1hdGlvbihQbGF0Zm9y
bVVJLmdldFdvcmtiZW5jaCgpDQotCQkJCS5nZXRBY3RpdmVXb3JrYmVuY2hXaW5kb3coKS5nZXRT
aGVsbCgpLA0KLQkJCQkiTWVzc2FnZURpYWxvZzpvcGVuSW5mb3JtYXRpb24oKSIsDQotCQkJCSJN
ZXNzYWdlRGlhbG9nOm9wZW5JbmZvcm1hdGlvbigpIik7DQotCX0NCi0NCi0JLyoNCi0JICogKG5v
bi1KYXZhZG9jKQ0KLQkgKiANCi0JICogQHNlZSBvcmcuZWNsaXBzZS51aS5JV29ya2JlbmNoV2lu
ZG93QWN0aW9uRGVsZWdhdGUjZGlzcG9zZSgpDQotCSAqLw0KLQlwdWJsaWMgdm9pZCBkaXNwb3Nl
KCkgew0KLQl9DQotDQotCS8qDQotCSAqIChub24tSmF2YWRvYykNCi0JICogDQotCSAqIEBzZWUg
b3JnLmVjbGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvd0FjdGlvbkRlbGVnYXRlI2luaXQob3JnLmVj
bGlwc2UudWkuSVdvcmtiZW5jaFdpbmRvdykNCi0JICovDQotCXB1YmxpYyB2b2lkIGluaXQoSVdv
cmtiZW5jaFdpbmRvdyB3aW5kb3cpIHsNCi0JfQ0KLQ0KLQkvKg0KLQkgKiAobm9uLUphdmFkb2Mp
DQotCSAqIA0KLQkgKiBAc2VlIG9yZy5lY2xpcHNlLnVpLklBY3Rpb25EZWxlZ2F0ZSNzZWxlY3Rp
b25DaGFuZ2VkKG9yZy5lY2xpcHNlLmpmYWNlLmFjdGlvbi5JQWN0aW9uLA0KLQkgKiAgICAgIG9y
Zy5lY2xpcHNlLmpmYWNlLnZpZXdlcnMuSVNlbGVjdGlvbikNCi0JICovDQotCXB1YmxpYyB2b2lk
IHNlbGVjdGlvbkNoYW5nZWQoSUFjdGlvbiBhY3Rpb24sIElTZWxlY3Rpb24gc2VsZWN0aW9uKSB7
DQotCX0NCi19DQpJbmRleDogcGx1Z2luLnhtbA0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UudWkudGVzdHMvcGx1Z2luLnhtbCx2DQpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuMjQ0DQpkaWZmIC11IC1yMS4yNDQgcGx1Z2luLnhtbA0KLS0tIHBsdWdpbi54
bWwJMTAgSmFuIDIwMDggMTk6MjU6MDggLTAwMDAJMS4yNDQNCisrKyBwbHVnaW4ueG1sCTExIEph
biAyMDA4IDExOjQ3OjMwIC0wMDAwDQpAQCAtMzQ2Myw1MSArMzQ2MywxNSBAQA0KICAgICAgICAg
ICAgICAgIG1lbnViYXJQYXRoPSJTSE1lbnUvc2FtcGxlR3JvdXAiDQogICAgICAgICAgICAgICAg
Pg0KICAgICAgICAgIDwvYWN0aW9uPg0KLSAgICAgICAgIDxhY3Rpb24NCi0gICAgICAgICAgICAg
ICBjbGFzcz0ib3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMuYWN0aW9ucy5PcGVu
RXJyb3JEaWFsb2dBY3Rpb24iDQotICAgICAgICAgICAgICAgaWQ9Im9yZy5lY2xpcHNlLnVpLnRl
c3RzLnN0YXR1c2hhbmRsaW5nLmFjdGlvbnMuT3BlbkVycm9yRGlhbG9nQWN0aW9uIg0KLSAgICAg
ICAgICAgICAgIGxhYmVsPSJPcGVuIEVycm9yRGlhbG9nIEFjdGlvbiINCi0gICAgICAgICAgICAg
ICBtZW51YmFyUGF0aD0iU0hNZW51L3NhbXBsZUdyb3VwIj4NCi0gICAgICAgICA8L2FjdGlvbj4N
Ci0gICAgICAgICA8YWN0aW9uDQotICAgICAgICAgICAgICAgY2xhc3M9Im9yZy5lY2xpcHNlLnVp
LnRlc3RzLnN0YXR1c2hhbmRsZXJzLmFjdGlvbnMuT3Blbldhcm5pbmdEaWFsb2dBY3Rpb24iDQot
ICAgICAgICAgICAgICAgaWQ9Im9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsaW5nLmFj
dGlvbnMuT3Blbldhcm5pbmdEaWFsb2dBY3Rpb24iDQotICAgICAgICAgICAgICAgbGFiZWw9Ik9w
ZW4gV2FybmluZ0RpYWxvZyBBY3Rpb24iDQotICAgICAgICAgICAgICAgbWVudWJhclBhdGg9IlNI
TWVudS9zYW1wbGVHcm91cCI+DQotICAgICAgICAgPC9hY3Rpb24+DQotICAgICAgICAgPGFjdGlv
bg0KLSAgICAgICAgICAgICAgIGNsYXNzPSJvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5k
bGVycy5hY3Rpb25zLk9wZW5JbmZvRGlhbG9nQWN0aW9uIg0KLSAgICAgICAgICAgICAgIGlkPSJv
cmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGluZy5hY3Rpb25zLk9wZW5JbmZvRGlhbG9n
QWN0aW9uIg0KLSAgICAgICAgICAgICAgIGxhYmVsPSJPcGVuIEluZm9EaWFsb2cgQWN0aW9uIg0K
LSAgICAgICAgICAgICAgIG1lbnViYXJQYXRoPSJTSE1lbnUvc2FtcGxlR3JvdXAiPg0KLSAgICAg
ICAgIDwvYWN0aW9uPg0KIAkJPC9hY3Rpb25TZXQ+DQogCTwvZXh0ZW5zaW9uPg0KICAgIDxleHRl
bnNpb24NCiAgICAgICAgICBwb2ludD0ib3JnLmVjbGlwc2UudWkudmlld3MiPg0KLSAgICAgIDx2
aWV3DQotICAgICAgICAgICAgY2F0ZWdvcnk9Im9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hh
bmRsaW5nLlN0YXR1cyINCi0gICAgICAgICAgICBjbGFzcz0ib3JnLmVjbGlwc2UudWkudGVzdHMu
c3RhdHVzaGFuZGxlcnMudmlld3MuU3RhdHVzSGFuZGxpbmdWaWV3Ig0KLSAgICAgICAgICAgIGlk
PSJvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGluZy5TdGF0dXNHZW5lcmF0b3IiDQot
ICAgICAgICAgICAgbmFtZT0iU3RhdHVzIEdlbmVyYXRvciI+DQotICAgICAgPC92aWV3Pg0KICAg
ICAgIDxjYXRlZ29yeQ0KICAgICAgICAgICAgIGlkPSJvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0
dXNoYW5kbGluZy5TdGF0dXMiDQogICAgICAgICAgICAgbmFtZT0iU3RhdHVzIEhhbmRsaW5nIj4N
CiAgICAgICA8L2NhdGVnb3J5Pg0KICAgICAgIDx2aWV3DQotICAgICAgICAgICAgY2F0ZWdvcnk9
Im9yZy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsaW5nLlN0YXR1cyINCi0gICAgICAgICAg
ICBjbGFzcz0ib3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMudmlld3MuUGFydElu
aXRFeGNlcHRpb25WaWV3Ig0KLSAgICAgICAgICAgIGlkPSJvcmcuZWNsaXBzZWludGVybmFsLnVp
LnRlc3RzLnN0YXR1c2hhbmRsaW5nLlBhcnRJbml0RXhjZXB0aW9uVmlldyINCi0gICAgICAgICAg
ICBuYW1lPSJQYXJ0SW5pdEV4Y2VwdGlvblZpZXciPg0KLSAgICAgIDwvdmlldz4NCi0gICAgICA8
dmlldw0KLSAgICAgICAgICAgIGNhdGVnb3J5PSJvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNo
YW5kbGluZy5TdGF0dXMiDQotICAgICAgICAgICAgY2xhc3M9Im9yZy5lY2xpcHNlLnVpLnRlc3Rz
LnN0YXR1c2hhbmRsZXJzLnZpZXdzLlJ1bnRpbWVFeGNlcHRpb25WaWV3Ig0KLSAgICAgICAgICAg
IGlkPSJvcmcuZWNsaXBzZWludGVybmFsLnVpLnRlc3RzLnN0YXR1c2hhbmRsaW5nLlJ1bnRpbWVF
eGNlcHRpb25WaWV3Ig0KLSAgICAgICAgICAgIG5hbWU9IlJ1bnRpbWVFeGNlcHRpb25WaWV3Ij4N
Ci0gICAgICA8L3ZpZXc+DQotICAgICAgPHZpZXcNCiAgICAgICAgICAgICBjbGFzcz0ib3JnLmVj
bGlwc2UudWkudGVzdHMubWFya2Vycy5NYXJrZXJzVGVzdE1hcmtlcnNWaWV3Ig0KICAgICAgICAg
ICAgIGlkPSJvcmcuZWNsaXBzZS51aS50ZXN0cy5tYXJrZXJUZXN0cyINCiAgICAgICAgICAgICBu
YW1lPSJNYXJrZXIgVGVzdHMgVmlldyI+DQpAQCAtMzUxOCwzNCArMzQ4Miw2IEBADQogICAgICAg
ICAgICAgbmFtZT0iTGlmZWN5Y2xlIFZpZXciPg0KICAgICAgIDwvdmlldz4NCiAgICA8L2V4dGVu
c2lvbj4NCi0gICA8ZXh0ZW5zaW9uDQotICAgICAgICAgcG9pbnQ9Im9yZy5lY2xpcHNlLnVpLmVk
aXRvcnMiPg0KLSAgICAgIDxlZGl0b3INCi0gICAgICAgICAgICBjbGFzcz0ib3JnLmVjbGlwc2Uu
dWkudGVzdHMuc3RhdHVzaGFuZGxlcnMudmlld3MuUnVudGltZUV4Y2VwdGlvbkVkaXRvciINCi0g
ICAgICAgICAgICBkZWZhdWx0PSJmYWxzZSINCi0gICAgICAgICAgICBpY29uPSJpY29ucy9wYWNr
X2VtcHR5X2NvLmdpZiINCi0gICAgICAgICAgICBpZD0ib3JnLmVjbGlwc2VpbnRlcm5hbC51aS50
ZXN0cy5zdGF0dXNoYW5kbGluZy5SdW50aW1lRXhjZXB0aW9uRWRpdG9yIg0KLSAgICAgICAgICAg
IG5hbWU9IlJ1bnRpbWVFeGNlcHRpb25FZGl0b3IiPg0KLSAgICAgIDwvZWRpdG9yPg0KLSAgICAg
IDxlZGl0b3INCi0gICAgICAgICAgICBjbGFzcz0ib3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVz
aGFuZGxlcnMudmlld3MuUGFydEluaXRFeGNlcHRpb25FZGl0b3IiDQotICAgICAgICAgICAgZGVm
YXVsdD0iZmFsc2UiDQotICAgICAgICAgICAgaWNvbj0iaWNvbnMvcGFja19lbXB0eV9jby5naWYi
DQotICAgICAgICAgICAgaWQ9Im9yZy5lY2xpcHNlaW50ZXJuYWwudWkudGVzdHMuc3RhdHVzaGFu
ZGxpbmcuUGFydEluaXRFeGNlcHRpb25FZGl0b3IiDQotICAgICAgICAgICAgbmFtZT0iUGFydElu
aXRFeGNlcHRpb25FZGl0b3IiPg0KLSAgICAgIDwvZWRpdG9yPg0KLSAgIDwvZXh0ZW5zaW9uPg0K
LSAgIDxleHRlbnNpb24NCi0gICAgICAgICBwb2ludD0ib3JnLmVjbGlwc2UudWkuc3RhdHVzSGFu
ZGxlcnMiPg0KLSAgICAgIDxzdGF0dXNIYW5kbGVyDQotICAgICAgICAgICAgY2xhc3M9Im9yZy5l
Y2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsZXJzLlRlc3RTdGF0dXNIYW5kbGVyIg0KLSAgICAg
ICAgICAgIGlkPSJvcmcuZWNsaXBzZS51aS50ZXN0cy5zdGF0dXNoYW5kbGVycy5UZXN0U3RhdHVz
SGFuZGxlciI+DQotICAgICAgPC9zdGF0dXNIYW5kbGVyPg0KLSAgICAgIDxzdGF0dXNIYW5kbGVy
UHJvZHVjdEJpbmRpbmcNCi0gICAgICAgICAgICBoYW5kbGVySWQ9Im9yZy5lY2xpcHNlLnVpLnRl
c3RzLnN0YXR1c2hhbmRsZXJzLlRlc3RTdGF0dXNIYW5kbGVyIg0KLSAgICAgICAgICAgIHByb2R1
Y3RJZD0ib3JnLmVjbGlwc2Uuc2RrLmlkZSI+DQotICAgICAgPC9zdGF0dXNIYW5kbGVyUHJvZHVj
dEJpbmRpbmc+DQotICAgPC9leHRlbnNpb24+DQogPCEtLSBTYW1wbGUgaW52YWxpZCBleHRlbnNp
b24gISAoaWxsZWdhbCBjaGlsZCkgLS0+IA0KICAgIDxleHRlbnNpb24NCiAgICAgICAgICBwb2lu
dD0ib3JnLmVjbGlwc2UudWkudGVzdHMuc2FtcGxlIj4NCkluZGV4OiBTdGF0dXMgSGFuZGxpbmcg
VGVzdCBCZWQvb3JnL2VjbGlwc2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvaGFuZGxlcnMvRWNs
aXBzZVN0YXR1cy5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogU3RhdHVzIEhhbmRsaW5nIFRl
c3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hhbmRsZXJzL2hhbmRsZXJzL0VjbGlw
c2VTdGF0dXMuamF2YQ0KZGlmZiAtTiBTdGF0dXMgSGFuZGxpbmcgVGVzdCBCZWQvb3JnL2VjbGlw
c2UvdWkvdGVzdHMvc3RhdHVzaGFuZGxlcnMvaGFuZGxlcnMvRWNsaXBzZVN0YXR1cy5qYXZhDQot
LS0gU3RhdHVzIEhhbmRsaW5nIFRlc3QgQmVkL29yZy9lY2xpcHNlL3VpL3Rlc3RzL3N0YXR1c2hh
bmRsZXJzL2hhbmRsZXJzL0VjbGlwc2VTdGF0dXMuamF2YQkxMSBBcHIgMjAwNyAxNTowOTozNyAt
MDAwMAkxLjINCisrKyAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMA0KQEAgLTEs
NjQgKzAsMCBAQA0KLS8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQotICogQ29weXJpZ2h0IChjKSAy
MDA1LCAyMDA3IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLg0KLSAqIEFsbCByaWdodHMgcmVz
ZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMNCi0gKiBh
cmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBM
aWNlbnNlIHYxLjANCi0gKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwgYW5k
IGlzIGF2YWlsYWJsZSBhdA0KLSAqIGh0dHA6Ly93d3cuZWNsaXBzZS5vcmcvbGVnYWwvZXBsLXYx
MC5odG1sDQotICoNCi0gKiBDb250cmlidXRvcnM6DQotICogICAgIElCTSBDb3Jwb3JhdGlvbiAt
IGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbg0KLSAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Lw0KLXBhY2thZ2Ugb3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMuaGFuZGxlcnM7
DQotDQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUuaW50ZXJuYWwucmVnaXN0cnkub3NnaS5PU0dJ
VXRpbHM7DQotaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JU3RhdHVzOw0KLWltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuTXVsdGlTdGF0dXM7DQotaW1wb3J0IG9yZy5vc2dp
LmZyYW1ld29yay5CdW5kbGU7DQotDQotLyoqDQotICogQW4gRWNsaXBzZVN0YXR1cyByZXRyaWV2
ZXMgdGhlIGJ1bmRsZSB3aGljaCBzZW50IHRoZSBlbWJlZGRlZCBzdGF0dXMuDQotICogDQotICov
DQotcHVibGljIGNsYXNzIEVjbGlwc2VTdGF0dXMgZXh0ZW5kcyBNdWx0aVN0YXR1cyBpbXBsZW1l
bnRzIElTdGF0dXMgew0KLQ0KLQlwcml2YXRlIEJ1bmRsZSBidW5kbGU7DQotCXByaXZhdGUgU3Ry
aW5nIGxvY2F0aW9uOw0KLQ0KLQkvKioNCi0JICogQHBhcmFtIHBsdWdpbklkDQotCSAqIEBwYXJh
bSBjb2RlDQotCSAqIEBwYXJhbSBuZXdDaGlsZHJlbg0KLQkgKiBAcGFyYW0gbWVzc2FnZQ0KLQkg
KiBAcGFyYW0gZXhjZXB0aW9uDQotCSAqLw0KLQlwdWJsaWMgRWNsaXBzZVN0YXR1cyhTdHJpbmcg
cGx1Z2luSWQsIGludCBjb2RlLCBJU3RhdHVzW10gbmV3Q2hpbGRyZW4sDQotCQkJU3RyaW5nIG1l
c3NhZ2UsIFRocm93YWJsZSBleGNlcHRpb24pIHsNCi0JCXN1cGVyKHBsdWdpbklkLCBjb2RlLCBu
ZXdDaGlsZHJlbiwgbWVzc2FnZSwgZXhjZXB0aW9uKTsNCi0JCWluaXRMb2NhdGlvbihwbHVnaW5J
ZCk7DQotCX0NCi0NCi0JLyoqDQotCSAqIEBwYXJhbSBwbHVnaW5JZA0KLQkgKiBAcGFyYW0gY29k
ZQ0KLQkgKiBAcGFyYW0gbWVzc2FnZQ0KLQkgKiBAcGFyYW0gZXhjZXB0aW9uDQotCSAqLw0KLQlw
dWJsaWMgRWNsaXBzZVN0YXR1cyhTdHJpbmcgcGx1Z2luSWQsIGludCBjb2RlLCBTdHJpbmcgbWVz
c2FnZSwNCi0JCQlUaHJvd2FibGUgZXhjZXB0aW9uKSB7DQotCQlzdXBlcihwbHVnaW5JZCwgY29k
ZSwgbWVzc2FnZSwgZXhjZXB0aW9uKTsNCi0JCWluaXRMb2NhdGlvbihwbHVnaW5JZCk7DQotCX0N
Ci0NCi0JcHJpdmF0ZSB2b2lkIGluaXRMb2NhdGlvbihTdHJpbmcgcGx1Z2luSWQpIHsNCi0JCWJ1
bmRsZSA9IE9TR0lVdGlscy5nZXREZWZhdWx0KCkuZ2V0QnVuZGxlKHBsdWdpbklkKTsNCi0JCWlm
IChidW5kbGUgIT0gbnVsbCkgew0KLQkJCWxvY2F0aW9uID0gYnVuZGxlLmdldExvY2F0aW9uKCk7
DQotCQl9DQotCX0NCi0NCi0JcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsNCi0JCVN0cmluZ0J1
ZmZlciBidWYgPSBuZXcgU3RyaW5nQnVmZmVyKGxvY2F0aW9uKTsNCi0JCWJ1Zi5hcHBlbmQoc3Vw
ZXIudG9TdHJpbmcoKSk7DQotCQlyZXR1cm4gYnVmLnRvU3RyaW5nKCk7DQotCX0NCi19DQo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>86666</attachid>
            <date>2008-01-11 07:53:00 -0500</date>
            <delta_ts>2008-01-11 07:53:19 -0500</delta_ts>
            <desc>removing invalid class references  from testtool plugin.xml</desc>
            <filename>214502_2_20080111.txt</filename>
            <type>text/plain</type>
            <size>881</size>
            <attacher name="Krzysztof Daniel">krzysztof.daniel</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UudWkuZXhhbXBs
ZXMuc3RhdHVzaGFuZGxlcnMudGVzdHRvb2wNCkluZGV4OiBwbHVnaW4ueG1sDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3Qvb3JnLmVjbGlwc2Uvd3d3L2VjbGlwc2UvcGxhdGZvcm0tdWkv
cGx1Z2lucy9vcmcuZWNsaXBzZS51aS5leGFtcGxlcy5zdGF0dXNoYW5kbGVycy50ZXN0dG9vbC9w
bHVnaW4ueG1sLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4yDQpkaWZmIC11IC1yMS4yIHBsdWdp
bi54bWwNCi0tLSBwbHVnaW4ueG1sCTIwIE5vdiAyMDA3IDEwOjEyOjAwIC0wMDAwCTEuMg0KKysr
IHBsdWdpbi54bWwJMTEgSmFuIDIwMDggMTI6NTE6NDAgLTAwMDANCkBAIC03Niw3ICs3Niw3IEBA
DQogICAgICAgPC92aWV3Pg0KICAgICAgIDx2aWV3DQogICAgICAgICAgICAgY2F0ZWdvcnk9Im9y
Zy5lY2xpcHNlLnVpLnRlc3RzLnN0YXR1c2hhbmRsaW5nLlN0YXR1cyINCi0gICAgICAgICAgICBj
bGFzcz0ib3JnLmVjbGlwc2UudWkudGVzdHMuc3RhdHVzaGFuZGxlcnMudmlld3MuUnVudGltZUV4
Y2VwdGlvblZpZXciDQorICAgICAgICAgICAgY2xhc3M9Im9yZy5lY2xpcHNlLnVpLmV4YW1wbGVz
LnN0YXR1c2hhbmRsZXJzLnRlc3R0b29sLnZpZXdzLlJ1bnRpbWVFeGNlcHRpb25WaWV3Ig0KICAg
ICAgICAgICAgIGlkPSJvcmcuZWNsaXBzZWludGVybmFsLnVpLnRlc3RzLnN0YXR1c2hhbmRsaW5n
LlJ1bnRpbWVFeGNlcHRpb25WaWV3Ig0KICAgICAgICAgICAgIG5hbWU9IlJ1bnRpbWVFeGNlcHRp
b25WaWV3Ij4NCiAgICAgICA8L3ZpZXc+DQo=
</data>

          </attachment>
      

    </bug>

</bugzilla>