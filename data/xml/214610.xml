<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.1"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>214610</bug_id>
          
          <creation_ts>2008-01-08 09:18:00 -0500</creation_ts>
          <short_desc>[api tooling] create .api_description files as build artifact</short_desc>
          <delta_ts>2008-01-29 12:20:06 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>PDE</product>
          <component>Incubators</component>
          <version>3.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.4 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Darin Wright">darin.eclipse</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1127276</commentid>
    <comment_count>0</comment_count>
    <who name="Darin Wright">darin.eclipse</who>
    <bug_when>2008-01-08 09:18:39 -0500</bug_when>
    <thetext>We need to generate and include .api_description files with each bundle in the SDK build. I think we will need to create an Ant task that can take the source and class files for a bundle and generate the .api_description.

We should confirm this approach with PDE/Build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1144518</commentid>
    <comment_count>1</comment_count>
      <attachid>88160</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2008-01-29 12:18:34 -0500</bug_when>
    <thetext>Created attachment 88160
Proposed fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1144520</commentid>
    <comment_count>2</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2008-01-29 12:20:06 -0500</bug_when>
    <thetext>Released for 3.4M5.
I still need to see how to improve the indentation of the generated document. This might be related to the XML support used by the Eclipse build. More to come once I get a Eclipse test build.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>88160</attachid>
            <date>2008-01-29 12:18:00 -0500</date>
            <delta_ts>2008-01-29 12:18:34 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_ant_task.txt</filename>
            <type>text/plain</type>
            <size>84069</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UucGRlLmFwaS50
b29scw0KSW5kZXg6IHBsdWdpbi54bWwNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9l
Y2xpcHNlL3BkZS1pbmN1YmF0b3IvYXBpLXRvb2xpbmcvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUu
YXBpLnRvb2xzL3BsdWdpbi54bWwsdg0KcmV0cmlldmluZyByZXZpc2lvbiAxLjIzDQpkaWZmIC11
IC1yMS4yMyBwbHVnaW4ueG1sDQotLS0gcGx1Z2luLnhtbAkyNCBKYW4gMjAwOCAxNzo0MToxNSAt
MDAwMAkxLjIzDQorKysgcGx1Z2luLnhtbAkyOSBKYW4gMjAwOCAxNzowMzo1NCAtMDAwMA0KQEAg
LTE5Myw0ICsxOTMsMTIgQEANCiAgICAgICAgICAgY2xhc3M9Im9yZy5lY2xpcHNlLnBkZS5hcGku
dG9vbHMuaW50ZXJuYWwuQXBpUGx1Z2luUHJlZmVyZW5jZUluaXRpYWxpemVyIj4NCiAgICAgPC9p
bml0aWFsaXplcj4NCiAgPC9leHRlbnNpb24+DQorIDxleHRlbnNpb24NCisgICAgICAgcG9pbnQ9
Im9yZy5lY2xpcHNlLmFudC5jb3JlLmFudFRhc2tzIj4NCisgICAgPGFudFRhc2sNCisgICAgICAg
ICAgY2xhc3M9Im9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMuaW50ZXJuYWwudGFza3MuQXBpRmls
ZUdlbmVyYXRvciINCisgICAgICAgICAgbGlicmFyeT0ibGliL2FwaXRvb2xpbmctYW50LmphciIN
CisgICAgICAgICAgbmFtZT0iYXBpdG9vbGluZy5hcGlmaWxlc2dlbmVyYXRvciI+DQorICAgIDwv
YW50VGFzaz4NCisgPC9leHRlbnNpb24+DQogPC9wbHVnaW4+DQpJbmRleDogLmNsYXNzcGF0aA0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2UvcGRlLWluY3ViYXRvci9hcGkt
dG9vbGluZy9wbHVnaW5zL29yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMvLmNsYXNzcGF0aCx2DQpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMw0KZGlmZiAtdSAtcjEuMyAuY2xhc3NwYXRoDQotLS0gLmNs
YXNzcGF0aAk1IE5vdiAyMDA3IDE3OjA4OjU0IC0wMDAwCTEuMw0KKysrIC5jbGFzc3BhdGgJMjkg
SmFuIDIwMDggMTc6MDM6NTQgLTAwMDANCkBAIC0xLDYgKzEsNyBAQA0KIDw/eG1sIHZlcnNpb249
IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+DQogPGNsYXNzcGF0aD4NCiAJPGNsYXNzcGF0aGVudHJ5
IGtpbmQ9InNyYyIgcGF0aD0ic3JjIi8+DQorCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJzcmMiIG91
dHB1dD0iYmluX2FudCIgcGF0aD0ic3JjX2FudCIvPg0KIAk8Y2xhc3NwYXRoZW50cnkga2luZD0i
Y29uIiBwYXRoPSJvcmcuZWNsaXBzZS5qZHQubGF1bmNoaW5nLkpSRV9DT05UQUlORVIvb3JnLmVj
bGlwc2UuamR0LmludGVybmFsLmRlYnVnLnVpLmxhdW5jaGVyLlN0YW5kYXJkVk1UeXBlL0oyU0Ut
MS40Ii8+DQogCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLnBk
ZS5jb3JlLnJlcXVpcmVkUGx1Z2lucyIvPg0KIAk8Y2xhc3NwYXRoZW50cnkga2luZD0ibGliIiBw
YXRoPSJsaWIvYXNtMy4wL2FzbS0zLjAuamFyIiBzb3VyY2VwYXRoPSJsaWIvYXNtMy4wL3NyYy56
aXAiLz4NCkluZGV4OiBidWlsZC5wcm9wZXJ0aWVzDQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2
c3Jvb3QvZWNsaXBzZS9wZGUtaW5jdWJhdG9yL2FwaS10b29saW5nL3BsdWdpbnMvb3JnLmVjbGlw
c2UucGRlLmFwaS50b29scy9idWlsZC5wcm9wZXJ0aWVzLHYNCnJldHJpZXZpbmcgcmV2aXNpb24g
MS40DQpkaWZmIC11IC1yMS40IGJ1aWxkLnByb3BlcnRpZXMNCi0tLSBidWlsZC5wcm9wZXJ0aWVz
CTggTm92IDIwMDcgMTc6MDg6MDkgLTAwMDAJMS40DQorKysgYnVpbGQucHJvcGVydGllcwkyOSBK
YW4gMjAwOCAxNzowMzo1NCAtMDAwMA0KQEAgLTcsNCArNywxMCBAQA0KICAgICAgICAgICAgICAg
IE1FVEEtSU5GLyxcDQogICAgICAgICAgICAgICAgcGx1Z2luLnhtbCxcDQogICAgICAgICAgICAg
ICAgbGliL2FzbTMuMC9hc20tMy4wLmphcixcDQotICAgICAgICAgICAgICAgbGliL2FzbTMuMC9h
c20tdHJlZS0zLjAuamFyDQorICAgICAgICAgICAgICAgbGliL2FzbTMuMC9hc20tdHJlZS0zLjAu
amFyLFwNCisgICAgICAgICAgICAgICBsaWIvYXBpdG9vbGluZy1hbnQuamFyDQoramFycy5leHRy
YS5jbGFzc3BhdGg9cGxhdGZvcm06L3BsdWdpbi9vcmcuYXBhY2hlLmFudC9saWIvYW50Lmphcg0K
K2phcnMuY29tcGlsZS5vcmRlciA9IC4sXA0KKyAgICAgICAgICAgICAgICAgICAgIGxpYi9hcGl0
b29saW5nLWFudC5qYXINCitzb3VyY2UubGliL2FwaXRvb2xpbmctYW50LmphciA9IHNyY19hbnQv
DQorb3V0cHV0LmxpYi9hcGl0b29saW5nLWFudC5qYXIgPSBiaW5fYW50Lw0KSW5kZXg6IHNyYy9v
cmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL3V0aWwvVXRpbC5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9wZGUtaW5jdWJhdG9yL2FwaS10b29saW5n
L3BsdWdpbnMvb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy9zcmMvb3JnL2VjbGlwc2UvcGRlL2Fw
aS90b29scy9pbnRlcm5hbC91dGlsL1V0aWwuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEu
NDUNCmRpZmYgLXUgLXIxLjQ1IFV0aWwuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBp
L3Rvb2xzL2ludGVybmFsL3V0aWwvVXRpbC5qYXZhCTI4IEphbiAyMDA4IDE5OjUzOjQzIC0wMDAw
CTEuNDUNCisrKyBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9pbnRlcm5hbC91dGlsL1V0
aWwuamF2YQkyOSBKYW4gMjAwOCAxNzowMzo1NSAtMDAwMA0KQEAgLTEyMyw2ICsxMjMsNTYgQEAN
CiBwdWJsaWMgZmluYWwgY2xhc3MgVXRpbCB7DQogCQ0KIAkvKioNCisJICogUmVnaXN0cnkgc3Ry
YXRlZ3kgZm9yIHRlc3RpbmcgYW5kIG5vbi1mcmFtZXdvcmsgdXNlDQorCSAqIEBzaW5jZQ0KKwkg
Ki8NCisJc3RhdGljIGNsYXNzIEFQSVJlZ2lzdHJ5U3RyYXRlZ3kgZXh0ZW5kcyBSZWdpc3RyeVN0
cmF0ZWd5IHsNCisJCVN0cmluZyBwZmlsZXMgPSBudWxsLA0KKwkJCSAgIGNvbnQgPSBudWxsOw0K
KwkJLyoqDQorCQkgKiBDb25zdHJ1Y3Rvcg0KKwkJICogQHRocm93cyBDb3JlRXhjZXB0aW9uDQor
CQkgKi8NCisJCXB1YmxpYyBBUElSZWdpc3RyeVN0cmF0ZWd5KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24gew0KKwkJCXN1cGVyKG51bGwsIG51bGwpOw0KKwkJCXBmaWxlcyA9IFN5c3RlbS5nZXRQcm9w
ZXJ0eSgicGx1Z2luZmlsZXMiKTsgLy8kTk9OLU5MUy0xJA0KKwkJCWlmKHBmaWxlcyA9PSBudWxs
KSB7DQorCQkJCXRocm93IG5ldyBDb3JlRXhjZXB0aW9uKG5ldyBTdGF0dXMoSVN0YXR1cy5FUlJP
UiwgQXBpUGx1Z2luLmdldFBsdWdpbklkZW50aWZpZXIoKSwgVXRpbE1lc3NhZ2VzLlV0aWxfMikp
Ow0KKwkJCX0NCisJCQljb250ID0gU3lzdGVtLmdldFByb3BlcnR5KCJjb250cmlidXRvcnMiKTsg
Ly8kTk9OLU5MUy0xJA0KKwkJCWlmKGNvbnQgPT0gbnVsbCkgew0KKwkJCQl0aHJvdyBuZXcgQ29y
ZUV4Y2VwdGlvbihuZXcgU3RhdHVzKElTdGF0dXMuRVJST1IsIEFwaVBsdWdpbi5nZXRQbHVnaW5J
ZGVudGlmaWVyKCksIFV0aWxNZXNzYWdlcy5VdGlsXzMpKTsNCisJCQl9DQorCQl9DQorCQkvKiAo
bm9uLUphdmFkb2MpDQorCQkgKiBAc2VlIG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5zcGkuUmVn
aXN0cnlTdHJhdGVneSNvblN0YXJ0KG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JRXh0ZW5zaW9u
UmVnaXN0cnksIGJvb2xlYW4pDQorCQkgKi8NCisJCXB1YmxpYyB2b2lkIG9uU3RhcnQoSUV4dGVu
c2lvblJlZ2lzdHJ5IHJlZ2lzdHJ5LCBib29sZWFuIGxvYWRlZEZyb21DYWNoZSkgew0KKwkJCXN1
cGVyLm9uU3RhcnQocmVnaXN0cnksIGxvYWRlZEZyb21DYWNoZSk7DQorCQkJLy9wYXJzZSB0aGUg
c3lzdGVtIHByb3BlcnRpZXMgZm9yIC1EcGx1Z2luZmlsZXMgYW5kIC1EY29udHJpYnV0b3JzDQor
CQkJU3RyaW5nW10gcGF0aHMgPSBwZmlsZXMuc3BsaXQoIiwiKTsgLy8kTk9OLU5MUy0xJA0KKwkJ
CVN0cmluZ1tdIGNvbnRyaWJ1dG9ycyA9IGNvbnQuc3BsaXQoIiwiKTsgLy8kTk9OLU5MUy0xJA0K
KwkJCWlmKHBhdGhzLmxlbmd0aCA9PSBjb250cmlidXRvcnMubGVuZ3RoKSB7DQorCQkJCUlDb250
cmlidXRvciBjb250cmlidXRvciA9IG51bGw7DQorCQkJCUZpbGUgZmlsZSA9IG51bGw7DQorCQkJ
CWZvcihpbnQgaSA9IDA7IGkgPCBwYXRocy5sZW5ndGg7IGkrKykgew0KKwkJCQkJZmlsZSA9IG5l
dyBGaWxlKHBhdGhzW2ldKTsNCisJCQkJCWlmKGZpbGUuZXhpc3RzKCkgJiYgZmlsZS5pc0ZpbGUo
KSkgew0KKwkJCQkJCXRyeSB7DQorCQkJCQkJCWNvbnRyaWJ1dG9yID0gbmV3IFJlZ2lzdHJ5Q29u
dHJpYnV0b3IoY29udHJpYnV0b3JzW2ldLCBjb250cmlidXRvcnNbaV0sIG51bGwsIG51bGwpOw0K
KwkJCQkJCQlyZWdpc3RyeS5hZGRDb250cmlidXRpb24obmV3IEZpbGVJbnB1dFN0cmVhbShmaWxl
KSwgY29udHJpYnV0b3IsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsKTsNCisJCQkJCQl9DQorCQkJ
CQkJY2F0Y2goRmlsZU5vdEZvdW5kRXhjZXB0aW9uIGZuZmUpIHsNCisJCQkJCQkJQXBpUGx1Z2lu
LmxvZyhmbmZlKTsNCisJCQkJCQl9DQorCQkJCQl9DQorCQkJCQkNCisJCQkJfQ0KKwkJCX0NCisJ
CX0NCisJfQ0KKwkNCisJLyoqDQogCSAqIENsYXNzIHRoYXQgcnVucyBhIGJ1aWxkIGluIHRoZSB3
b3Jrc3BhY2Ugb3IgdGhlIGdpdmVuIHByb2plY3QNCiAJICovDQogCXByaXZhdGUgc3RhdGljIGZp
bmFsIGNsYXNzIEJ1aWxkSm9iIGV4dGVuZHMgSm9iIHsNCkBAIC0xMzcsNiArMTg3LDEwIEBADQog
CQkJZlByb2plY3Q9IHByb2plY3Q7DQogCQl9DQogCQkNCisJCXB1YmxpYyBib29sZWFuIGJlbG9u
Z3NUbyhPYmplY3QgZmFtaWx5KSB7DQorCQkJcmV0dXJuIFJlc291cmNlc1BsdWdpbi5GQU1JTFlf
TUFOVUFMX0JVSUxEID09IGZhbWlseTsNCisJCX0NCisJCQ0KIAkJLyoqDQogCQkgKiBSZXR1cm5z
IGlmIHRoaXMgYnVpbGQgam9iIGlzIGNvdmVyZWQgYnkgYW5vdGhlciBidWlsZCBqb2INCiAJCSAq
IEBwYXJhbSBvdGhlcg0KQEAgLTE0OCw3ICsyMDIsNiBAQA0KIAkJCX0NCiAJCQlyZXR1cm4gZlBy
b2plY3QgIT0gbnVsbCAmJiBmUHJvamVjdC5lcXVhbHMob3RoZXIuZlByb2plY3QpOw0KIAkJfQ0K
LQkJDQogCQkvKiAobm9uLUphdmFkb2MpDQogCQkgKiBAc2VlIG9yZy5lY2xpcHNlLmNvcmUucnVu
dGltZS5qb2JzLkpvYiNydW4ob3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLklQcm9ncmVzc01vbml0
b3IpDQogCQkgKi8NCkBAIC0xODcsODMgKzI0MCwzMCBAQA0KIAkJCX0NCiAJCQlyZXR1cm4gU3Rh
dHVzLk9LX1NUQVRVUzsNCiAJCX0NCi0JCXB1YmxpYyBib29sZWFuIGJlbG9uZ3NUbyhPYmplY3Qg
ZmFtaWx5KSB7DQotCQkJcmV0dXJuIFJlc291cmNlc1BsdWdpbi5GQU1JTFlfTUFOVUFMX0JVSUxE
ID09IGZhbWlseTsNCi0JCX0NCi0JfQ0KLQkNCi0JLyoqDQotCSAqIFJlZ2lzdHJ5IHN0cmF0ZWd5
IGZvciB0ZXN0aW5nIGFuZCBub24tZnJhbWV3b3JrIHVzZQ0KLQkgKiBAc2luY2UNCi0JICovDQot
CXN0YXRpYyBjbGFzcyBBUElSZWdpc3RyeVN0cmF0ZWd5IGV4dGVuZHMgUmVnaXN0cnlTdHJhdGVn
eSB7DQotCQlTdHJpbmcgcGZpbGVzID0gbnVsbCwNCi0JCQkgICBjb250ID0gbnVsbDsNCi0JCS8q
Kg0KLQkJICogQ29uc3RydWN0b3INCi0JCSAqIEB0aHJvd3MgQ29yZUV4Y2VwdGlvbg0KLQkJICov
DQotCQlwdWJsaWMgQVBJUmVnaXN0cnlTdHJhdGVneSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsN
Ci0JCQlzdXBlcihudWxsLCBudWxsKTsNCi0JCQlwZmlsZXMgPSBTeXN0ZW0uZ2V0UHJvcGVydHko
InBsdWdpbmZpbGVzIik7IC8vJE5PTi1OTFMtMSQNCi0JCQlpZihwZmlsZXMgPT0gbnVsbCkgew0K
LQkJCQl0aHJvdyBuZXcgQ29yZUV4Y2VwdGlvbihuZXcgU3RhdHVzKElTdGF0dXMuRVJST1IsIEFw
aVBsdWdpbi5nZXRQbHVnaW5JZGVudGlmaWVyKCksIFV0aWxNZXNzYWdlcy5VdGlsXzIpKTsNCi0J
CQl9DQotCQkJY29udCA9IFN5c3RlbS5nZXRQcm9wZXJ0eSgiY29udHJpYnV0b3JzIik7IC8vJE5P
Ti1OTFMtMSQNCi0JCQlpZihjb250ID09IG51bGwpIHsNCi0JCQkJdGhyb3cgbmV3IENvcmVFeGNl
cHRpb24obmV3IFN0YXR1cyhJU3RhdHVzLkVSUk9SLCBBcGlQbHVnaW4uZ2V0UGx1Z2luSWRlbnRp
ZmllcigpLCBVdGlsTWVzc2FnZXMuVXRpbF8zKSk7DQotCQkJfQ0KLQkJfQ0KLQkJLyogKG5vbi1K
YXZhZG9jKQ0KLQkJICogQHNlZSBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuc3BpLlJlZ2lzdHJ5
U3RyYXRlZ3kjb25TdGFydChvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSUV4dGVuc2lvblJlZ2lz
dHJ5LCBib29sZWFuKQ0KLQkJICovDQotCQlwdWJsaWMgdm9pZCBvblN0YXJ0KElFeHRlbnNpb25S
ZWdpc3RyeSByZWdpc3RyeSwgYm9vbGVhbiBsb2FkZWRGcm9tQ2FjaGUpIHsNCi0JCQlzdXBlci5v
blN0YXJ0KHJlZ2lzdHJ5LCBsb2FkZWRGcm9tQ2FjaGUpOw0KLQkJCS8vcGFyc2UgdGhlIHN5c3Rl
bSBwcm9wZXJ0aWVzIGZvciAtRHBsdWdpbmZpbGVzIGFuZCAtRGNvbnRyaWJ1dG9ycw0KLQkJCVN0
cmluZ1tdIHBhdGhzID0gcGZpbGVzLnNwbGl0KCIsIik7IC8vJE5PTi1OTFMtMSQNCi0JCQlTdHJp
bmdbXSBjb250cmlidXRvcnMgPSBjb250LnNwbGl0KCIsIik7IC8vJE5PTi1OTFMtMSQNCi0JCQlp
ZihwYXRocy5sZW5ndGggPT0gY29udHJpYnV0b3JzLmxlbmd0aCkgew0KLQkJCQlJQ29udHJpYnV0
b3IgY29udHJpYnV0b3IgPSBudWxsOw0KLQkJCQlGaWxlIGZpbGUgPSBudWxsOw0KLQkJCQlmb3Io
aW50IGkgPSAwOyBpIDwgcGF0aHMubGVuZ3RoOyBpKyspIHsNCi0JCQkJCWZpbGUgPSBuZXcgRmls
ZShwYXRoc1tpXSk7DQotCQkJCQlpZihmaWxlLmV4aXN0cygpICYmIGZpbGUuaXNGaWxlKCkpIHsN
Ci0JCQkJCQl0cnkgew0KLQkJCQkJCQljb250cmlidXRvciA9IG5ldyBSZWdpc3RyeUNvbnRyaWJ1
dG9yKGNvbnRyaWJ1dG9yc1tpXSwgY29udHJpYnV0b3JzW2ldLCBudWxsLCBudWxsKTsNCi0JCQkJ
CQkJcmVnaXN0cnkuYWRkQ29udHJpYnV0aW9uKG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSksIGNv
bnRyaWJ1dG9yLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCk7DQotCQkJCQkJfQ0KLQkJCQkJCWNh
dGNoKEZpbGVOb3RGb3VuZEV4Y2VwdGlvbiBmbmZlKSB7DQotCQkJCQkJCUFwaVBsdWdpbi5sb2co
Zm5mZSk7DQotCQkJCQkJfQ0KLQkJCQkJfQ0KLQkJCQkJDQotCQkJCX0NCi0JCQl9DQotCQl9DQog
CX0NCiAJDQogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBERUJVRzsNCiANCiAJcHVibGljIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRU1QVFlfU1RSSU5HID0gIiI7Ly8kTk9OLU5MUy0xJA0KIAlwdWJsaWMg
c3RhdGljIGZpbmFsIFN0cmluZyBERUZBVUxUX1BBQ0tBR0VfTkFNRSA9IEVNUFRZX1NUUklORzsN
Ci0JDQogCS8qKg0KIAkgKiBDb25zdGFudCByZXByZXNlbnRpbmcgdGhlIGRlZmF1bHQgc2l6ZSB0
byByZWFkIGZyb20gYW4gaW5wdXQgc3RyZWFtDQogCSAqLw0KIAlwcml2YXRlIHN0YXRpYyBmaW5h
bCBpbnQgREVGQVVMVF9SRUFESU5HX1NJWkUgPSA4MTkyOw0KKwkNCiAJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEpBVkFfTEFOR19PQkpFQ1QgPSAiamF2YS5sYW5nLk9iamVjdCI7IC8vJE5P
Ti1OTFMtMSQNCiAJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEpBVkFfTEFOR19SVU5USU1F
RVhDRVBUSU9OID0gImphdmEubGFuZy5SdW50aW1lRXhjZXB0aW9uIjsgLy8kTk9OLU5MUy0xJA0K
IAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBMSU5FX0RFTElNSVRFUiA9IFN5c3RlbS5nZXRQ
cm9wZXJ0eSgibGluZS5zZXBhcmF0b3IiKTsgLy8kTk9OLU5MUy0xJA0KIAkNCisJcHVibGljIHN0
YXRpYyBmaW5hbCBTdHJpbmcgVU5LTk9XTl9FTEVNRU5UX1RZUEUgPSAidW5rbm93bl9lbGVtZW50
X3R5cGUiOyAvLyROT04tTkxTLTEkDQorDQorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFVO
S05PV05fRkxBR1MgPSAidW5rbm93bl9mbGFncyI7IC8vJE5PTi1OTFMtMSQNCisJcHVibGljIHN0
YXRpYyBmaW5hbCBTdHJpbmcgVU5LTk9XTl9LSU5EID0gInVua25vd25fa2luZCI7IC8vJE5PTi1O
TFMtMSQNCiAJc3RhdGljIHsNCiAJCVN0cmluZyBwcm9wZXJ0eSA9IFN5c3RlbS5nZXRQcm9wZXJ0
eSgiREVCVUciKTsgLy8kTk9OLU5MUy0xJA0KIAkJREVCVUcgPSBwcm9wZXJ0eSAhPSBudWxsICYm
IHByb3BlcnR5LmVxdWFsc0lnbm9yZUNhc2UoIlRSVUUiKTsgLy8kTk9OLU5MUy0xJA0KIAl9DQog
DQotCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFVOS05PV05fS0lORCA9ICJ1bmtub3duX2tp
bmQiOyAvLyROT04tTkxTLTEkDQotCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFVOS05PV05f
RkxBR1MgPSAidW5rbm93bl9mbGFncyI7IC8vJE5PTi1OTFMtMSQNCi0JcHVibGljIHN0YXRpYyBm
aW5hbCBTdHJpbmcgVU5LTk9XTl9FTEVNRU5UX1RZUEUgPSAidW5rbm93bl9lbGVtZW50X3R5cGUi
OyAvLyROT04tTkxTLTEkDQotDQogCS8qKg0KIAkgKiBUaHJvd3MgYW4gZXhjZXB0aW9uIHdpdGgg
dGhlIGdpdmVuIG1lc3NhZ2UgYW5kIHVuZGVybHlpbmcgZXhjZXB0aW9uLg0KIAkgKiANCkBAIC0y
OTIsMTggKzI5Miw2IEBADQogCX0NCiANCiAJLyoqDQotCSAqIFJldHVybnMgYSBidWlsZCBqb2IN
Ci0JICogQHBhcmFtIHByb2plY3QgVGhlIHByb2plY3QgdG8gYnVpbGQgb3IgPGNvZGU+bnVsbDwv
Y29kZT4gdG8gYnVpbGQgdGhlIHdvcmtzcGFjZS4NCi0JICogQHJldHVybiB0aGUgYnVpbGQgam9i
DQotCSAqLw0KLQlwdWJsaWMgc3RhdGljIEpvYiBnZXRCdWlsZEpvYihmaW5hbCBJUHJvamVjdCBw
cm9qZWN0KSB7DQotCQlKb2IgYnVpbGRKb2I9IG5ldyBCdWlsZEpvYihVdGlsTWVzc2FnZXMuVXRp
bF80LCBwcm9qZWN0KTsNCi0JCWJ1aWxkSm9iLnNldFJ1bGUoUmVzb3VyY2VzUGx1Z2luLmdldFdv
cmtzcGFjZSgpLmdldFJ1bGVGYWN0b3J5KCkuYnVpbGRSdWxlKCkpOw0KLQkJYnVpbGRKb2Iuc2V0
VXNlcih0cnVlKTsNCi0JCXJldHVybiBidWlsZEpvYjsNCi0JfQ0KLQkNCi0JLyoqDQogCSAqIENv
bGxlY3RzIGFsbCBvZiB0aGUgZGVsdGFzIGZyb20gdGhlIGdpdmVuIHBhcmVudCBkZWx0YQ0KIAkg
KiBAcGFyYW0gZGVsdGENCiAJICogQHJldHVybg0KQEAgLTMyMCw3ICszMDgsNyBAQA0KIAkJfSk7
DQogCQlyZXR1cm4gbGlzdDsNCiAJfQ0KLQ0KKwkNCiAJLyoqDQogCSAqIENvbGxlY3RzIGZpbGVz
IGludG8gdGhlIGNvbGxlY3RvciBhcnJheSBsaXN0DQogCSAqIA0KQEAgLTM4MiwyNSArMzcwLDYg
QEANCiAJfQ0KIA0KIAkvKioNCi0JICogUmV0dXJucyB0aGUge0BsaW5rIElEb2N1bWVudH0gZm9y
IHRoZSBzcGVjaWZpZWQge0BsaW5rIElDb21waWxhdGlvblVuaXR9DQotCSAqIEBwYXJhbSBjdQ0K
LQkgKiBAcmV0dXJuIHRoZSB7QGxpbmsgSURvY3VtZW50fSBmb3IgdGhlIHNwZWNpZmllZCB7QGxp
bmsgSUNvbXBpbGF0aW9uVW5pdH0NCi0JICogQHRocm93cyBDb3JlRXhjZXB0aW9uDQotCSAqLw0K
LQlwdWJsaWMgc3RhdGljIElEb2N1bWVudCBnZXREb2N1bWVudChJQ29tcGlsYXRpb25Vbml0IGN1
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQotCQlpZiAoY3UuZ2V0T3duZXIoKSA9PSBudWxsKSB7
DQotCQkJSUZpbGUgZmlsZT0gKElGaWxlKSBjdS5nZXRSZXNvdXJjZSgpOw0KLQkJCWlmIChmaWxl
LmV4aXN0cygpKSB7DQotCQkJCUlUZXh0RmlsZUJ1ZmZlck1hbmFnZXIgYnVmZmVyTWFuYWdlcj0g
RmlsZUJ1ZmZlcnMuZ2V0VGV4dEZpbGVCdWZmZXJNYW5hZ2VyKCk7DQotCQkJCUlQYXRoIHBhdGg9
IGN1LmdldFBhdGgoKTsNCi0JCQkJYnVmZmVyTWFuYWdlci5jb25uZWN0KHBhdGgsIExvY2F0aW9u
S2luZC5JRklMRSwgbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKSk7DQotCQkJCXJldHVybiBidWZm
ZXJNYW5hZ2VyLmdldFRleHRGaWxlQnVmZmVyKHBhdGgsIExvY2F0aW9uS2luZC5JRklMRSkuZ2V0
RG9jdW1lbnQoKTsNCi0JCQl9DQotCQl9DQotCQlyZXR1cm4gbmV3IG9yZy5lY2xpcHNlLmpmYWNl
LnRleHQuRG9jdW1lbnQoY3UuZ2V0U291cmNlKCkpOw0KLQl9DQotCQ0KLQkvKioNCiAJICogQ29w
aWVzIHRoZSBnaXZlbiBmaWxlIHRvIHRoZSBuZXcgZmlsZQ0KIAkgKiBAcGFyYW0gZmlsZQ0KIAkg
KiBAcGFyYW0gbmV3RmlsZQ0KQEAgLTQ1MCw2ICs0MTksMTggQEANCiAJfQ0KIA0KIAkvKioNCisJ
ICogQ3JlYXRlcyBhbiBlZSBmaWxlIHVzaW5nIHRoZSBkZWZhdWx0IGVlIGlkIHNldCBpbiB0aGUg
d29ya3NwYWNlLCBvciAnSmF2YVNFIDEuNicgaWYgdGhlcmUNCisJICogaXMgbm8gZGVmYXVsdCBl
ZSBpZCBzZXQgb3IgdGhlIGZyYW1ld29yayBpcyBub3QgcnVubmluZw0KKwkgKiANCisJICogQHJl
dHVybiBhIG5ldyBlZSBmaWxlDQorCSAqIEB0aHJvd3MgSU9FeGNlcHRpb24NCisJICogQHRocm93
cyBDb3JlRXhjZXB0aW9uDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIEZpbGUgY3JlYXRlRGVmYXVs
dEVFRmlsZSgpIHRocm93cyBJT0V4Y2VwdGlvbiwgQ29yZUV4Y2VwdGlvbiB7DQorCQlyZXR1cm4g
Y3JlYXRlRUVGaWxlKGdldERlZmF1bHRFRUlkKCkpOw0KKwl9DQorCQ0KKwkvKioNCiAJICogUmVz
b2x2ZXMgYW4gRUUgZmlsZSBnaXZlbiB0aGUgaWQgb2YgdGhlIGVudmlyb25tZW50DQogCSAqIEBw
YXJhbSBlZWlkDQogCSAqIEByZXR1cm4NCkBAIC00OTEsMjEgKzQ3Miw2IEBADQogCX0NCiANCiAJ
LyoqDQotCSAqIEByZXR1cm4gdGhlIGlkIG9mIHRoZSBkZWZhdWx0IGV4ZWN1dGlvbiBlbnZpcm9u
bWVudCBzcGVjaWZpZWQgaW4gdGhlIHdvcmtzcGFjZSwNCi0JICogb3IgJ0phdmFTRS0xLjYnIGlm
IG5vbmUgY2FuIGJlIGRlcml2ZWQgDQotCSAqLw0KLQlwdWJsaWMgc3RhdGljIFN0cmluZyBnZXRE
ZWZhdWx0RUVJZCgpIHsNCi0JCVN0cmluZyBlZWlkID0gIkphdmFTRS0xLjYiOyAvLyROT04tTkxT
LTEkDQotCQlpZihBcGlQbHVnaW4uaXNSdW5uaW5nSW5GcmFtZXdvcmsoKSkgew0KLQkJCWVlaWQg
PSBKYXZhUnVudGltZS5nZXRFeGVjdXRpb25FbnZpcm9ubWVudElkKEphdmFSdW50aW1lLm5ld0Rl
ZmF1bHRKUkVDb250YWluZXJQYXRoKCkpOw0KLQkJCWlmKGVlaWQgPT0gbnVsbCkgew0KLQkJCQll
ZWlkID0gIkphdmFTRS0xLjYiOyAvLyROT04tTkxTLTEkDQotCQkJfQ0KLQkJfQ0KLQkJcmV0dXJu
IGVlaWQ7DQotCX0NCi0JDQotCS8qKg0KIAkgKiBSZXR1cm5zIHdoZXRoZXIgdGhlIG9iamVjdHMg
YXJlIGVxdWFsLCBhY2NvdW50aW5nIGZvciBlaXRoZXIgb25lIGJlaW5nIDxjb2RlPm51bGw8L2Nv
ZGU+Lg0KIAkgKiANCiAJICogQHBhcmFtIG8xDQpAQCAtNTQyLDE4ICs1MDgsNiBAQA0KIAkJYXBw
ZW5kUHJvcGVydHkoYnVmZmVyLCBFRVZNVHlwZS5QUk9QX0NMQVNTX0xJQl9MRVZFTCwgZWVJZCk7
DQogCQlyZXR1cm4gIGJ1ZmZlci50b1N0cmluZygpOw0KIAl9DQotDQotCS8qKg0KLQkgKiBDcmVh
dGVzIGFuIGVlIGZpbGUgdXNpbmcgdGhlIGRlZmF1bHQgZWUgaWQgc2V0IGluIHRoZSB3b3Jrc3Bh
Y2UsIG9yICdKYXZhU0UgMS42JyBpZiB0aGVyZQ0KLQkgKiBpcyBubyBkZWZhdWx0IGVlIGlkIHNl
dCBvciB0aGUgZnJhbWV3b3JrIGlzIG5vdCBydW5uaW5nDQotCSAqIA0KLQkgKiBAcmV0dXJuIGEg
bmV3IGVlIGZpbGUNCi0JICogQHRocm93cyBJT0V4Y2VwdGlvbg0KLQkgKiBAdGhyb3dzIENvcmVF
eGNlcHRpb24NCi0JICovDQotCXB1YmxpYyBzdGF0aWMgRmlsZSBjcmVhdGVEZWZhdWx0RUVGaWxl
KCkgdGhyb3dzIElPRXhjZXB0aW9uLCBDb3JlRXhjZXB0aW9uIHsNCi0JCXJldHVybiBjcmVhdGVF
RUZpbGUoZ2V0RGVmYXVsdEVFSWQoKSk7DQotCX0NCiAJDQogCS8qKg0KIAkgKiBSZXR1cm5zIGFu
IGFycmF5IG9mIGFsbCBvZiB0aGUgZmlsZXMgZnJvbSB0aGUgZ2l2ZW4gcm9vdCB0aGF0IGFyZQ0K
QEAgLTU4OCw2ICs1NDIsMTggQEANCiAJCXJldHVybiB4bWxWaXNpdG9yLmdldFhNTCgpOw0KIAl9
DQogDQorCS8qKg0KKwkgKiBSZXR1cm5zIGEgYnVpbGQgam9iDQorCSAqIEBwYXJhbSBwcm9qZWN0
IFRoZSBwcm9qZWN0IHRvIGJ1aWxkIG9yIDxjb2RlPm51bGw8L2NvZGU+IHRvIGJ1aWxkIHRoZSB3
b3Jrc3BhY2UuDQorCSAqIEByZXR1cm4gdGhlIGJ1aWxkIGpvYg0KKwkgKi8NCisJcHVibGljIHN0
YXRpYyBKb2IgZ2V0QnVpbGRKb2IoZmluYWwgSVByb2plY3QgcHJvamVjdCkgew0KKwkJSm9iIGJ1
aWxkSm9iPSBuZXcgQnVpbGRKb2IoVXRpbE1lc3NhZ2VzLlV0aWxfNCwgcHJvamVjdCk7DQorCQli
dWlsZEpvYi5zZXRSdWxlKFJlc291cmNlc1BsdWdpbi5nZXRXb3Jrc3BhY2UoKS5nZXRSdWxlRmFj
dG9yeSgpLmJ1aWxkUnVsZSgpKTsNCisJCWJ1aWxkSm9iLnNldFVzZXIodHJ1ZSk7DQorCQlyZXR1
cm4gYnVpbGRKb2I7DQorCX0NCisJDQogCXB1YmxpYyBzdGF0aWMgSUNsYXNzRmlsZSBnZXRDbGFz
c0ZpbGUoSUFwaUNvbXBvbmVudFtdIGNvbXBvbmVudHMsIFN0cmluZyB0eXBlTmFtZSkgew0KIAkJ
aWYgKGNvbXBvbmVudHMgPT0gbnVsbCkgcmV0dXJuIG51bGw7DQogCQlmb3IgKGludCBpID0gMCwg
bWF4ID0gY29tcG9uZW50cy5sZW5ndGg7IGkgPCBtYXg7IGkrKykgew0KQEAgLTYwNSw2ICs1NzEs
NyBAQA0KIAkJfQ0KIAkJcmV0dXJuIG51bGw7DQogCX0NCisNCiAJcHVibGljIHN0YXRpYyBJQXBp
Q29tcG9uZW50IGdldENvbXBvbmVudChJQXBpQ29tcG9uZW50W10gY29tcG9uZW50cywgU3RyaW5n
IHR5cGVOYW1lKSB7DQogCQlpZiAoY29tcG9uZW50cyA9PSBudWxsKSByZXR1cm4gbnVsbDsNCiAJ
CWZvciAoaW50IGkgPSAwLCBtYXggPSBjb21wb25lbnRzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7
DQpAQCAtNjI0LDI3ICs1OTEsMjI3IEBADQogCX0NCiANCiAJLyoqDQotCSAqIFJldHVybnMgdGhl
IGRldGFpbHMgb2YgdGhlIGFwaSBkZWx0YSBhcyBhIHN0cmluZw0KLQkgKiBAcGFyYW0gZGVsdGEN
Ci0JICogQHJldHVybiB0aGUgZGV0YWlscyBvZiB0aGUgZGVsdGEgYXMgYSBzdHJpbmcNCisJICog
QHJldHVybiB0aGUgaWQgb2YgdGhlIGRlZmF1bHQgZXhlY3V0aW9uIGVudmlyb25tZW50IHNwZWNp
ZmllZCBpbiB0aGUgd29ya3NwYWNlLA0KKwkgKiBvciAnSmF2YVNFLTEuNicgaWYgbm9uZSBjYW4g
YmUgZGVyaXZlZCANCiAJICovDQotCXB1YmxpYyBzdGF0aWMgU3RyaW5nIGdldERldGFpbChJRGVs
dGEgZGVsdGEpIHsNCi0JCVN0cmluZ0J1ZmZlciBidWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKCk7
DQotCQlzd2l0Y2goZGVsdGEuZ2V0RWxlbWVudFR5cGUoKSkgew0KLQkJCWNhc2UgSURlbHRhLkNM
QVNTX0VMRU1FTlRfVFlQRSA6DQotCQkJCWJ1ZmZlci5hcHBlbmQoImNsYXNzIik7IC8vJE5PTi1O
TFMtMSQNCi0JCQkJYnJlYWs7DQorCXB1YmxpYyBzdGF0aWMgU3RyaW5nIGdldERlZmF1bHRFRUlk
KCkgew0KKwkJU3RyaW5nIGVlaWQgPSAiSmF2YVNFLTEuNiI7IC8vJE5PTi1OTFMtMSQNCisJCWlm
KEFwaVBsdWdpbi5pc1J1bm5pbmdJbkZyYW1ld29yaygpKSB7DQorCQkJZWVpZCA9IEphdmFSdW50
aW1lLmdldEV4ZWN1dGlvbkVudmlyb25tZW50SWQoSmF2YVJ1bnRpbWUubmV3RGVmYXVsdEpSRUNv
bnRhaW5lclBhdGgoKSk7DQorCQkJaWYoZWVpZCA9PSBudWxsKSB7DQorCQkJCWVlaWQgPSAiSmF2
YVNFLTEuNiI7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQorCQl9DQorCQlyZXR1cm4gZWVpZDsNCisJ
fQ0KKwkvKioNCisJICogUmV0dXJuIGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZWxlbWVu
dCB0eXBlIG9mIHRoZSBnaXZlbiBkZWx0YS4NCisJICogUmV0dXJucyB7QGxpbmsgI1VOS05PV05f
RUxFTUVOVF9UWVBFfSBpZiB0aGUgZWxlbWVudCB0eXBlIGNhbm5vdCBiZSBkZXRlcm1pbmVkLg0K
KwkgKiANCisJICogQHBhcmFtIGRlbHRhIHRoZSBnaXZlbiBkZWx0YQ0KKwkgKiBAcmV0dXJuIGEg
c3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZWxlbWVudCB0eXBlIG9mIHRoZSBnaXZlbiBkZWx0
YS4NCisJICovDQorCXB1YmxpYyBzdGF0aWMgU3RyaW5nIGdldERlbHRhRWxlbWVudFR5cGUoSURl
bHRhIGRlbHRhKSB7DQorCQlyZXR1cm4gZ2V0RGVsdGFFbGVtZW50VHlwZShkZWx0YS5nZXRFbGVt
ZW50VHlwZSgpKTsNCisJfQ0KKw0KKwkvKioNCisJICogUmV0dXJuIGEgc3RyaW5nIHRoYXQgcmVw
cmVzZW50cyB0aGUgZ2l2ZW4gZWxlbWVudCB0eXBlDQorCSAqIFJldHVybnMge0BsaW5rICNVTktO
T1dOX0VMRU1FTlRfVFlQRX0gaWYgdGhlIGVsZW1lbnQgdHlwZSBjYW5ub3QgYmUgZGV0ZXJtaW5l
ZC4NCisJICogDQorCSAqIEBwYXJhbSBlbGVtZW50VHlwZSB0aGUgZ2l2ZW4gZWxlbWVudCB0eXBl
DQorCSAqIEByZXR1cm4gYSBzdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBnaXZlbiBlbGVtZW50
IHR5cGUuDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIFN0cmluZyBnZXREZWx0YUVsZW1lbnRUeXBl
KGludCBlbGVtZW50VHlwZSkgew0KKwkJc3dpdGNoKGVsZW1lbnRUeXBlKSB7DQogCQkJY2FzZSBJ
RGVsdGEuQU5OT1RBVElPTl9FTEVNRU5UX1RZUEUgOg0KLQkJCQlidWZmZXIuYXBwZW5kKCJhbm5v
dGF0aW9uIik7IC8vJE5PTi1OTFMtMSQNCi0JCQkJYnJlYWs7DQorCQkJCXJldHVybiAiQU5OT1RB
VElPTl9FTEVNRU5UX1RZUEUiOyAvLyROT04tTkxTLTEkDQogCQkJY2FzZSBJRGVsdGEuSU5URVJG
QUNFX0VMRU1FTlRfVFlQRSA6DQotCQkJCWJ1ZmZlci5hcHBlbmQoImludGVyZmFjZSIpOyAvLyRO
T04tTkxTLTEkDQotCQkJCWJyZWFrOw0KKwkJCQlyZXR1cm4gIklOVEVSRkFDRV9FTEVNRU5UX1RZ
UEUiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuRU5VTV9FTEVNRU5UX1RZUEUgOg0K
KwkJCQlyZXR1cm4gIkVOVU1fRUxFTUVOVF9UWVBFIjsgLy8kTk9OLU5MUy0xJA0KIAkJCWNhc2Ug
SURlbHRhLkFQSV9DT01QT05FTlRfRUxFTUVOVF9UWVBFIDoNCi0JCQkJYnVmZmVyLmFwcGVuZCgi
YXBpIGNvbXBvbmVudCIpOyAvLyROT04tTkxTLTEkDQotCQkJCWJyZWFrOw0KKwkJCQlyZXR1cm4g
IkFQSV9DT01QT05FTlRfRUxFTUVOVF9UWVBFIjsgLy8kTk9OLU5MUy0xJA0KIAkJCWNhc2UgSURl
bHRhLkFQSV9QUk9GSUxFX0VMRU1FTlRfVFlQRSA6DQotCQkJCWJ1ZmZlci5hcHBlbmQoImFwaSBw
cm9maWxlIik7IC8vJE5PTi1OTFMtMSQNCisJCQkJcmV0dXJuICJBUElfUFJPRklMRV9FTEVNRU5U
X1RZUEUiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuQ09OU1RSVUNUT1JfRUxFTUVO
VF9UWVBFIDoNCisJCQkJcmV0dXJuICJDT05TVFJVQ1RPUl9FTEVNRU5UX1RZUEUiOyAvLyROT04t
TkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuTUVNQkVSX0VMRU1FTlRfVFlQRSA6DQorCQkJCXJldHVy
biAiTUVNQkVSX0VMRU1FTlRfVFlQRSI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5N
RVRIT0RfRUxFTUVOVF9UWVBFIDoNCisJCQkJcmV0dXJuICJNRVRIT0RfRUxFTUVOVF9UWVBFIjsg
Ly8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLkZJRUxEX0VMRU1FTlRfVFlQRSA6DQorCQkJ
CXJldHVybiAiRklFTERfRUxFTUVOVF9UWVBFIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURl
bHRhLkNMQVNTX0VMRU1FTlRfVFlQRSA6DQorCQkJCXJldHVybiAiQ0xBU1NfRUxFTUVOVF9UWVBF
IjsgLy8kTk9OLU5MUy0xJA0KKwkJfQ0KKwkJcmV0dXJuIFVOS05PV05fRUxFTUVOVF9UWVBFOw0K
Kwl9DQorDQorCS8qKg0KKwkgKiBSZXR1cm4gYSBzdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBm
bGFncyBvZiB0aGUgZ2l2ZW4gZGVsdGEuDQorCSAqIFJldHVybnMge0BsaW5rICNVTktOT1dOX0ZM
QUdTfSBpZiB0aGUgZmxhZ3MgY2Fubm90IGJlIGRldGVybWluZWQuDQorCSAqIA0KKwkgKiBAcGFy
YW0gZGVsdGEgdGhlIGdpdmVuIGRlbHRhDQorCSAqIEByZXR1cm4gYSBzdHJpbmcgdGhhdCByZXBy
ZXNlbnRzIHRoZSBmbGFncyBvZiB0aGUgZ2l2ZW4gZGVsdGEuDQorCSAqLw0KKwlwdWJsaWMgc3Rh
dGljIFN0cmluZyBnZXREZWx0YUZsYWdzTmFtZShJRGVsdGEgZGVsdGEpIHsNCisJCXJldHVybiBn
ZXREZWx0YUZsYWdzTmFtZShkZWx0YS5nZXRGbGFncygpKTsNCisJfQ0KKwkNCisJLyoqDQorCSAq
IFJldHVybiBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIGdpdmVuIGZsYWdzDQorCSAqIFJl
dHVybnMge0BsaW5rICNVTktOT1dOX0ZMQUdTfSBpZiB0aGUgZmxhZ3MgY2Fubm90IGJlIGRldGVy
bWluZWQuDQorCSAqIA0KKwkgKiBAcGFyYW0gZmxhZ3MgdGhlIGdpdmVuIGRlbHRhJ3MgZmxhZ3MN
CisJICogQHJldHVybiBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIGdpdmVuIGZsYWdzLg0K
KwkgKi8NCisJcHVibGljIHN0YXRpYyBTdHJpbmcgZ2V0RGVsdGFGbGFnc05hbWUoaW50IGZsYWdz
KSB7DQorCQlzd2l0Y2goZmxhZ3MpIHsNCisJCQljYXNlIElEZWx0YS5BQlNUUkFDVF9UT19OT05f
QUJTVFJBQ1QgOiByZXR1cm4gIkFCU1RSQUNUX1RPX05PTl9BQlNUUkFDVCI7IC8vJE5PTi1OTFMt
MSQNCisJCQljYXNlIElEZWx0YS5BTk5PVEFUSU9OX0RFRkFVTFRfVkFMVUUgOiByZXR1cm4gIkFO
Tk9UQVRJT05fREVGQVVMVF9WQUxVRSI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5B
UElfQ09NUE9ORU5UIDogcmV0dXJuICJBUElfQ09NUE9ORU5UIjsgLy8kTk9OLU5MUy0xJA0KKwkJ
CWNhc2UgSURlbHRhLkFSUkFZX1RPX1ZBUkFSR1MgOiByZXR1cm4gIkFSUkFZX1RPX1ZBUkFSR1Mi
OyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuQ0hFQ0tFRF9FWENFUFRJT04gOiByZXR1
cm4gIkNIRUNLRURfRVhDRVBUSU9OIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLkNM
QVNTX0JPVU5EIDogcmV0dXJuICJDTEFTU19CT1VORCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNl
IElEZWx0YS5DTElOSVQgOiByZXR1cm4gIkNMSU5JVCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNl
IElEZWx0YS5DT05TVFJVQ1RPUiA6IHJldHVybiAiQ09OU1RSVUNUT1IiOyAvLyROT04tTkxTLTEk
DQorCQkJY2FzZSBJRGVsdGEuQ09OVFJBQ1RFRF9TVVBFUkNMQVNTX1NFVCA6IHJldHVybiAiQ09O
VFJBQ1RFRF9TVVBFUkNMQVNTX1NFVCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5D
T05UUkFDVEVEX1NVUEVSSU5URVJGQUNFU19TRVQgOiByZXR1cm4gIkNPTlRSQUNURURfU1VQRVJJ
TlRFUkZBQ0VTX1NFVCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5ERUNSRUFTRV9B
Q0NFU1MgOiByZXR1cm4gIkRFQ1JFQVNFX0FDQ0VTUyI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNl
IElEZWx0YS5FTlVNX0NPTlNUQU5UIDogcmV0dXJuICJFTlVNX0NPTlNUQU5UIjsgLy8kTk9OLU5M
Uy0xJA0KKwkJCWNhc2UgSURlbHRhLkVYUEFOREVEX1NVUEVSQ0xBU1NfU0VUIDogcmV0dXJuICJF
WFBBTkRFRF9TVVBFUkNMQVNTX1NFVCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5F
WFBBTkRFRF9TVVBFUklOVEVSRkFDRVNfU0VUIDogcmV0dXJuICJFWFBBTkRFRF9TVVBFUklOVEVS
RkFDRVNfU0VUIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLkZJRUxEIDogcmV0dXJu
ICJGSUVMRCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5GSUVMRF9NT1ZFRF9VUCA6
IHJldHVybiAiRklFTERfTU9WRURfVVAiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEu
RklOQUxfVE9fTk9OX0ZJTkFMIDogcmV0dXJuICJGSU5BTF9UT19OT05fRklOQUwiOyAvLyROT04t
TkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuRklOQUxfVE9fTk9OX0ZJTkFMX05PTl9TVEFUSUMgOiBy
ZXR1cm4gIkZJTkFMX1RPX05PTl9GSU5BTF9OT05fU1RBVElDIjsgLy8kTk9OLU5MUy0xJA0KKwkJ
CWNhc2UgSURlbHRhLkZJTkFMX1RPX05PTl9GSU5BTF9TVEFUSUNfQ09OU1RBTlQgOiByZXR1cm4g
IkZJTkFMX1RPX05PTl9GSU5BTF9TVEFUSUNfQ09OU1RBTlQiOyAvLyROT04tTkxTLTEkDQorCQkJ
Y2FzZSBJRGVsdGEuRklOQUxfVE9fTk9OX0ZJTkFMX1NUQVRJQ19OT05fQ09OU1RBTlQgOiByZXR1
cm4gIkZJTkFMX1RPX05PTl9GSU5BTF9TVEFUSUNfTk9OX0NPTlNUQU5UIjsgLy8kTk9OLU5MUy0x
JA0KKwkJCWNhc2UgSURlbHRhLklOQ1JFQVNFX0FDQ0VTUyA6IHJldHVybiAiSU5DUkVBU0VfQUND
RVNTIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLklOVEVSRkFDRV9CT1VORCA6IHJl
dHVybiAiSU5URVJGQUNFX0JPVU5EIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLklO
VEVSRkFDRV9CT1VORFMgOiByZXR1cm4gIklOVEVSRkFDRV9CT1VORFMiOyAvLyROT04tTkxTLTEk
DQorCQkJY2FzZSBJRGVsdGEuTUVUSE9EIDogcmV0dXJuICJNRVRIT0QiOyAvLyROT04tTkxTLTEk
DQorCQkJY2FzZSBJRGVsdGEuTUVUSE9EX01PVkVEX1VQIDogcmV0dXJuICJNRVRIT0RfTU9WRURf
VVAiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuTUVUSE9EX1dJVEhfREVGQVVMVF9W
QUxVRSA6IHJldHVybiAiTUVUSE9EX1dJVEhfREVGQVVMVF9WQUxVRSI7IC8vJE5PTi1OTFMtMSQN
CisJCQljYXNlIElEZWx0YS5NRVRIT0RfV0lUSE9VVF9ERUZBVUxUX1ZBTFVFIDogcmV0dXJuICJN
RVRIT0RfV0lUSE9VVF9ERUZBVUxUX1ZBTFVFIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURl
bHRhLk5BVElWRV9UT19OT05fTkFUSVZFIDogcmV0dXJuICJOQVRJVkVfVE9fTk9OX05BVElWRSI7
IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5OT05fQUJTVFJBQ1RfVE9fQUJTVFJBQ1Qg
OiByZXR1cm4gIk5PTl9BQlNUUkFDVF9UT19BQlNUUkFDVCI7IC8vJE5PTi1OTFMtMSQNCisJCQlj
YXNlIElEZWx0YS5OT05fRklOQUxfVE9fRklOQUwgOiByZXR1cm4gIk5PTl9GSU5BTF9UT19GSU5B
TCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5OT05fTkFUSVZFX1RPX05BVElWRSA6
IHJldHVybiAiTk9OX05BVElWRV9UT19OQVRJVkUiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJ
RGVsdGEuTk9OX1NUQVRJQ19UT19TVEFUSUMgOiByZXR1cm4gIk5PTl9TVEFUSUNfVE9fU1RBVElD
IjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLk5PTl9TWU5DSFJPTklaRURfVE9fU1lO
Q0hST05JWkVEIDogcmV0dXJuICJOT05fU1lOQ0hST05JWkVEX1RPX1NZTkNIUk9OSVpFRCI7IC8v
JE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5OT05fVFJBTlNJRU5UX1RPX1RSQU5TSUVOVCA6
IHJldHVybiAiTk9OX1RSQU5TSUVOVF9UT19UUkFOU0lFTlQiOyAvLyROT04tTkxTLTEkDQorCQkJ
Y2FzZSBJRGVsdGEuU1RBVElDX1RPX05PTl9TVEFUSUMgOiByZXR1cm4gIlNUQVRJQ19UT19OT05f
U1RBVElDIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLlNVUEVSQ0xBU1MgOiByZXR1
cm4gIlNVUEVSQ0xBU1MiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuU1lOQ0hST05J
WkVEX1RPX05PTl9TWU5DSFJPTklaRUQgOiByZXR1cm4gIlNZTkNIUk9OSVpFRF9UT19OT05fU1lO
Q0hST05JWkVEIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLlRPX0FOTk9UQVRJT04g
OiByZXR1cm4gIlRPX0FOTk9UQVRJT04iOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEu
VE9fQ0xBU1MgOiByZXR1cm4gIlRPX0NMQVNTIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURl
bHRhLlRPX0VOVU0gOiByZXR1cm4gIlRPX0VOVU0iOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJ
RGVsdGEuVE9fSU5URVJGQUNFIDogcmV0dXJuICJUT19JTlRFUkZBQ0UiOyAvLyROT04tTkxTLTEk
DQorCQkJY2FzZSBJRGVsdGEuVFJBTlNJRU5UX1RPX05PTl9UUkFOU0lFTlQgOiByZXR1cm4gIlRS
QU5TSUVOVF9UT19OT05fVFJBTlNJRU5UIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRh
LlRZUEUgOiByZXR1cm4gIlRZUEUiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuVFlQ
RV9NRU1CRVIgOiByZXR1cm4gIlRZUEVfTUVNQkVSIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2Ug
SURlbHRhLlRZUEVfUEFSQU1FVEVSIDogcmV0dXJuICJUWVBFX1BBUkFNRVRFUiI7IC8vJE5PTi1O
TFMtMSQNCisJCQljYXNlIElEZWx0YS5UWVBFX1BBUkFNRVRFUl9OQU1FIDogcmV0dXJuICJUWVBF
X1BBUkFNRVRFUl9OQU1FIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLlRZUEVfUEFS
QU1FVEVSUyA6IHJldHVybiAiVFlQRV9QQVJBTUVURVJTIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNh
c2UgSURlbHRhLlVOQ0hFQ0tFRF9FWENFUFRJT04gOiByZXR1cm4gIlVOQ0hFQ0tFRF9FWENFUFRJ
T04iOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuVkFMVUUgOiByZXR1cm4gIlZBTFVF
IjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLlZBUkFSR1NfVE9fQVJSQVkgOiByZXR1
cm4gIlZBUkFSR1NfVE9fQVJSQVkiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuUkVT
VFJJQ1RJT05TIDogcmV0dXJuICJSRVNUUklDVElPTlMiOyAvLyROT04tTkxTLTEkDQorCQl9DQor
CQlyZXR1cm4gVU5LTk9XTl9GTEFHUzsNCisJfQ0KKw0KKwkvKioNCisJICogUmV0dXJuIGEgc3Ry
aW5nIHRoYXQgcmVwcmVzZW50cyB0aGUga2luZCBvZiB0aGUgZ2l2ZW4gZGVsdGEuDQorCSAqIFJl
dHVybnMge0BsaW5rICNVTktOT1dOX0tJTkR9IGlmIHRoZSBraW5kIGNhbm5vdCBiZSBkZXRlcm1p
bmVkLg0KKwkgKiANCisJICogQHBhcmFtIGRlbHRhIHRoZSBnaXZlbiBkZWx0YQ0KKwkgKiBAcmV0
dXJuIGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUga2luZCBvZiB0aGUgZ2l2ZW4gZGVsdGEu
DQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIFN0cmluZyBnZXREZWx0YUtpbmROYW1lKElEZWx0YSBk
ZWx0YSkgew0KKwkJcmV0dXJuIGdldERlbHRhS2luZE5hbWUoZGVsdGEuZ2V0S2luZCgpKTsNCisJ
fQ0KKw0KKwkvKioNCisJICogUmV0dXJuIGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZ2l2
ZW4ga2luZC4NCisJICogUmV0dXJucyB7QGxpbmsgI1VOS05PV05fS0lORH0gaWYgdGhlIGtpbmQg
Y2Fubm90IGJlIGRldGVybWluZWQuDQorCSAqIA0KKwkgKiBAcGFyYW0gZGVsdGEgdGhlIGdpdmVu
IGtpbmQNCisJICogQHJldHVybiBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIGdpdmVuIGtp
bmQuDQorCSAqLw0KKwlwdWJsaWMgc3RhdGljIFN0cmluZyBnZXREZWx0YUtpbmROYW1lKGludCBr
aW5kKSB7DQorCQlzd2l0Y2goa2luZCkgew0KKwkJCWNhc2UgSURlbHRhLkFEREVEIDoNCisJCQkJ
cmV0dXJuICJBRERFRCI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5BRERFRF9FWFRF
TkRfUkVTVFJJQ1RJT04gOg0KKwkJCQlyZXR1cm4gIkFEREVEX0VYVEVORF9SRVNUUklDVElPTiI7
IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5BRERFRF9JTVBMRU1FTlRfUkVTVFJJQ1RJ
T04gOg0KKwkJCQlyZXR1cm4gIkFEREVEX0lNUExFTUVOVF9SRVNUUklDVElPTiI7IC8vJE5PTi1O
TFMtMSQNCisJCQljYXNlIElEZWx0YS5BRERFRF9OT05fVklTSUJMRSA6DQorCQkJCXJldHVybiAi
QURERURfTk9OX1ZJU0lCTEUiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuQURERURf
Tk9UX0VYVEVORF9SRVNUUklDVElPTiA6DQorCQkJCXJldHVybiAiQURERURfTk9UX0VYVEVORF9S
RVNUUklDVElPTiI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5BRERFRF9OT1RfRVhU
RU5EX1JFU1RSSUNUSU9OX1NUQVRJQyA6DQorCQkJCXJldHVybiAiQURERURfTk9UX0VYVEVORF9S
RVNUUklDVElPTl9TVEFUSUMiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuQURERURf
Tk9UX0lNUExFTUVOVF9SRVNUUklDVElPTiA6DQorCQkJCXJldHVybiAiQURERURfTk9UX0lNUExF
TUVOVF9SRVNUUklDVElPTiI7IC8vJE5PTi1OTFMtMSQNCisJCQljYXNlIElEZWx0YS5DSEFOR0VE
IDoNCisJCQkJcmV0dXJuICJDSEFOR0VEIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRh
LkNIQU5HRURfTk9UX0VYVEVORF9SRVNUUklDVElPTiA6DQorCQkJCXJldHVybiAiQ0hBTkdFRF9O
T1RfRVhURU5EX1JFU1RSSUNUSU9OIjsgLy8kTk9OLU5MUy0xJA0KKwkJCWNhc2UgSURlbHRhLkNI
QU5HRURfTk9OX1ZJU0lCTEUgOg0KKwkJCQlyZXR1cm4gIkNIQU5HRURfTk9OX1ZJU0lCTEUiOyAv
LyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEuQ0hBTkdFRF9WSVNJQklMSVRZIDoNCisJCQkJ
cmV0dXJuICJDSEFOR0VEX1ZJU0lCSUxJVFkiOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVs
dGEuUkVNT1ZFRCA6DQorCQkJCXJldHVybiAiUkVNT1ZFRCI7IC8vJE5PTi1OTFMtMSQNCisJCQlj
YXNlIElEZWx0YS5SRU1PVkVEX0VYVEVORF9SRVNUUklDVElPTiA6DQorCQkJCXJldHVybiAiUkVN
T1ZFRF9FWFRFTkRfUkVTVFJJQ1RJT04iOyAvLyROT04tTkxTLTEkDQorCQkJY2FzZSBJRGVsdGEu
UkVNT1ZFRF9OT05fVklTSUJMRSA6DQorCQkJCXJldHVybiAiUkVNT1ZFRF9OT05fVklTSUJMRSI7
IC8vJE5PTi1OTFMtMSQNCisJCX0NCisJCXJldHVybiBVTktOT1dOX0tJTkQ7DQorCX0NCisNCisJ
LyoqDQorCSAqIFJldHVybnMgdGhlIHByZWZlcmVuY2Uga2V5IGZvciB0aGUgZ2l2ZW4gZWxlbWVu
dCB0eXBlLCB0aGUgZ2l2ZW4ga2luZCBhbmQgdGhlIGdpdmVuIGZsYWdzLg0KKwkgKiANCisJICog
QHBhcmFtIGVsZW1lbnRUeXBlIHRoZSBnaXZlbiBlbGVtZW50IHR5cGUgKHJldHJpZXZlZCB1c2lu
ZyB7QGxpbmsgSURlbHRhI2dldEVsZW1lbnRUeXBlKCl9DQorCSAqIEBwYXJhbSBraW5kIHRoZSBn
aXZlbiBraW5kIChyZXRyaWV2ZWQgdXNpbmcge0BsaW5rIElEZWx0YSNnZXRLaW5kKCl9DQorCSAq
IEBwYXJhbSBmbGFncyB0aGUgZ2l2ZW4gZmxhZ3MgKHJldHJpZXZlZCB1c2luZyB7QGxpbmsgSURl
bHRhI2dldEZsYWdzKCl9DQorCSAqIEByZXR1cm4gdGhlIHByZWZlcmVuY2Uga2V5IGZvciB0aGUg
Z2l2ZW4gZWxlbWVudCB0eXBlLCB0aGUgZ2l2ZW4ga2luZCBhbmQgdGhlIGdpdmVuIGZsYWdzLg0K
KwkgKi8NCisJcHVibGljIHN0YXRpYyBTdHJpbmcgZ2V0RGVsdGFQcmVmZXJlcmVuY2VLZXkoaW50
IGVsZW1lbnRUeXBlLCBpbnQga2luZCwgaW50IGZsYWdzKSB7DQorCQlTdHJpbmdCdWZmZXIgYnVm
ZmVyID0gbmV3IFN0cmluZ0J1ZmZlcihVdGlsLmdldERlbHRhRWxlbWVudFR5cGUoZWxlbWVudFR5
cGUpKTsNCisJCWJ1ZmZlci5hcHBlbmQoJ18nKS5hcHBlbmQoVXRpbC5nZXREZWx0YUtpbmROYW1l
KGtpbmQpKTsNCisJCWlmIChmbGFncyAhPSAtMSkgYnVmZmVyLmFwcGVuZCgnXycpLmFwcGVuZChV
dGlsLmdldERlbHRhRmxhZ3NOYW1lKGZsYWdzKSk7DQorCQlyZXR1cm4gU3RyaW5nLnZhbHVlT2Yo
YnVmZmVyKTsNCisJfQ0KKw0KKwkvKioNCisJICogUmV0dXJucyB0aGUgZGV0YWlscyBvZiB0aGUg
YXBpIGRlbHRhIGFzIGEgc3RyaW5nDQorCSAqIEBwYXJhbSBkZWx0YQ0KKwkgKiBAcmV0dXJuIHRo
ZSBkZXRhaWxzIG9mIHRoZSBkZWx0YSBhcyBhIHN0cmluZw0KKwkgKi8NCisJcHVibGljIHN0YXRp
YyBTdHJpbmcgZ2V0RGV0YWlsKElEZWx0YSBkZWx0YSkgew0KKwkJU3RyaW5nQnVmZmVyIGJ1ZmZl
ciA9IG5ldyBTdHJpbmdCdWZmZXIoKTsNCisJCXN3aXRjaChkZWx0YS5nZXRFbGVtZW50VHlwZSgp
KSB7DQorCQkJY2FzZSBJRGVsdGEuQ0xBU1NfRUxFTUVOVF9UWVBFIDoNCisJCQkJYnVmZmVyLmFw
cGVuZCgiY2xhc3MiKTsgLy8kTk9OLU5MUy0xJA0KKwkJCQlicmVhazsNCisJCQljYXNlIElEZWx0
YS5BTk5PVEFUSU9OX0VMRU1FTlRfVFlQRSA6DQorCQkJCWJ1ZmZlci5hcHBlbmQoImFubm90YXRp
b24iKTsgLy8kTk9OLU5MUy0xJA0KKwkJCQlicmVhazsNCisJCQljYXNlIElEZWx0YS5JTlRFUkZB
Q0VfRUxFTUVOVF9UWVBFIDoNCisJCQkJYnVmZmVyLmFwcGVuZCgiaW50ZXJmYWNlIik7IC8vJE5P
Ti1OTFMtMSQNCisJCQkJYnJlYWs7DQorCQkJY2FzZSBJRGVsdGEuQVBJX0NPTVBPTkVOVF9FTEVN
RU5UX1RZUEUgOg0KKwkJCQlidWZmZXIuYXBwZW5kKCJhcGkgY29tcG9uZW50Iik7IC8vJE5PTi1O
TFMtMSQNCisJCQkJYnJlYWs7DQorCQkJY2FzZSBJRGVsdGEuQVBJX1BST0ZJTEVfRUxFTUVOVF9U
WVBFIDoNCisJCQkJYnVmZmVyLmFwcGVuZCgiYXBpIHByb2ZpbGUiKTsgLy8kTk9OLU5MUy0xJA0K
IAkJCQlicmVhazsNCiAJCQljYXNlIElEZWx0YS5NRVRIT0RfRUxFTUVOVF9UWVBFOg0KIAkJCQli
dWZmZXIuYXBwZW5kKCJtZXRob2QiKTsgLy8kTk9OLU5MUy0xJA0KQEAgLTcxNSw2ICs4ODIsMjUg
QEANCiAJfQ0KIA0KIAkvKioNCisJICogUmV0dXJucyB0aGUge0BsaW5rIElEb2N1bWVudH0gZm9y
IHRoZSBzcGVjaWZpZWQge0BsaW5rIElDb21waWxhdGlvblVuaXR9DQorCSAqIEBwYXJhbSBjdQ0K
KwkgKiBAcmV0dXJuIHRoZSB7QGxpbmsgSURvY3VtZW50fSBmb3IgdGhlIHNwZWNpZmllZCB7QGxp
bmsgSUNvbXBpbGF0aW9uVW5pdH0NCisJICogQHRocm93cyBDb3JlRXhjZXB0aW9uDQorCSAqLw0K
KwlwdWJsaWMgc3RhdGljIElEb2N1bWVudCBnZXREb2N1bWVudChJQ29tcGlsYXRpb25Vbml0IGN1
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCQlpZiAoY3UuZ2V0T3duZXIoKSA9PSBudWxsKSB7
DQorCQkJSUZpbGUgZmlsZT0gKElGaWxlKSBjdS5nZXRSZXNvdXJjZSgpOw0KKwkJCWlmIChmaWxl
LmV4aXN0cygpKSB7DQorCQkJCUlUZXh0RmlsZUJ1ZmZlck1hbmFnZXIgYnVmZmVyTWFuYWdlcj0g
RmlsZUJ1ZmZlcnMuZ2V0VGV4dEZpbGVCdWZmZXJNYW5hZ2VyKCk7DQorCQkJCUlQYXRoIHBhdGg9
IGN1LmdldFBhdGgoKTsNCisJCQkJYnVmZmVyTWFuYWdlci5jb25uZWN0KHBhdGgsIExvY2F0aW9u
S2luZC5JRklMRSwgbmV3IE51bGxQcm9ncmVzc01vbml0b3IoKSk7DQorCQkJCXJldHVybiBidWZm
ZXJNYW5hZ2VyLmdldFRleHRGaWxlQnVmZmVyKHBhdGgsIExvY2F0aW9uS2luZC5JRklMRSkuZ2V0
RG9jdW1lbnQoKTsNCisJCQl9DQorCQl9DQorCQlyZXR1cm4gbmV3IG9yZy5lY2xpcHNlLmpmYWNl
LnRleHQuRG9jdW1lbnQoY3UuZ2V0U291cmNlKCkpOw0KKwl9DQorDQorCS8qKg0KIAkgKiBSZXRy
aWV2ZSBFRSBwcm9wZXJ0aWVzIGZyb20gdGhlIGVlLmZpbGUgcHJvcGVydHkuDQogCSAqIEBwYXJh
bSBlZUZpbGVQcm9wZXJ0eSB0aGUgZ2l2ZW4gZWUuZmlsZSBwcm9wZXJ0eQ0KIAkgKg0KQEAgLTc0
Niw3ICs5MzIsNyBAQA0KIAkJfQ0KIAkJcmV0dXJuIG51bGw7DQogCX0NCi0JDQorDQogCS8qKg0K
IAkgKiBSZXRyaWV2ZSBFRSBwcm9wZXJ0aWVzIGZvciB0aGUgZ2l2ZW4gZWUgbmFtZS4NCiAJICog
QHBhcmFtIGVlTmFtZSB0aGUgZ2l2ZW4gZWUgbmFtZQ0KQEAgLTc5NSw1NiArOTgxLDIxOCBAQA0K
IAl9DQogDQogCS8qKg0KLQkgKiBSZXR1cm5zIHRoZSBnaXZlbiBpbnB1dCBzdHJlYW0gYXMgYSBi
eXRlIGFycmF5DQotCSAqIEBwYXJhbSBzdHJlYW0gdGhlIHN0cmVhbSB0byBnZXQgYXMgYSBieXRl
IGFycmF5DQotCSAqIEBwYXJhbSBsZW5ndGggdGhlIGxlbmd0aCB0byByZWFkIGZyb20gdGhlIHN0
cmVhbSBvciAtMSBmb3IgdW5rbm93bg0KLQkgKiBAcmV0dXJuIHRoZSBnaXZlbiBpbnB1dCBzdHJl
YW0gYXMgYSBieXRlIGFycmF5DQotCSAqIEB0aHJvd3MgSU9FeGNlcHRpb24NCisJICogUmV0dXJu
cyB0aGUgbmFtZSB0byBkaXNwbGF5IGZvciBhbiB7QGxpbmsgSUFwaVByb2JsZW1GaWx0ZXJ9Lg0K
KwkgKiBVc2VkIHByaW1hcmlseSBpbiBVSSBjb250ZXh0IGZvciBsYWJlbCBwcm92aWRlcnMNCisJ
ICogQHBhcmFtIGZpbHRlcg0KKwkgKiBAcmV0dXJuIGEgZm9ybWF0dGVkIGZpbHRlciBuYW1lIG9y
IG51bGwgaWYgdGhlIHR5cGUgb2YgdGhlIGZpbHRlciBpcyB1bmtub3duDQogCSAqLw0KLQlwdWJs
aWMgc3RhdGljIGJ5dGVbXSBnZXRJbnB1dFN0cmVhbUFzQnl0ZUFycmF5KElucHV0U3RyZWFtIHN0
cmVhbSwgaW50IGxlbmd0aCkgdGhyb3dzIElPRXhjZXB0aW9uIHsNCi0JCWJ5dGVbXSBjb250ZW50
czsNCi0JCWlmIChsZW5ndGggPT0gLTEpIHsNCi0JCQljb250ZW50cyA9IG5ldyBieXRlWzBdOw0K
LQkJCWludCBjb250ZW50c0xlbmd0aCA9IDA7DQotCQkJaW50IGFtb3VudFJlYWQgPSAtMTsNCi0J
CQlkbyB7DQotCQkJCS8vIHJlYWQgYXQgbGVhc3QgOEsNCi0JCQkJaW50IGFtb3VudFJlcXVlc3Rl
ZCA9IE1hdGgubWF4KHN0cmVhbS5hdmFpbGFibGUoKSwgREVGQVVMVF9SRUFESU5HX1NJWkUpOw0K
LQkJCQkvLyByZXNpemUgY29udGVudHMgaWYgbmVlZGVkDQotCQkJCWlmIChjb250ZW50c0xlbmd0
aCArIGFtb3VudFJlcXVlc3RlZCA+IGNvbnRlbnRzLmxlbmd0aCkgew0KLQkJCQkJU3lzdGVtLmFy
cmF5Y29weShjb250ZW50cywNCi0JCQkJCQkJMCwNCi0JCQkJCQkJY29udGVudHMgPSBuZXcgYnl0
ZVtjb250ZW50c0xlbmd0aCArIGFtb3VudFJlcXVlc3RlZF0sDQotCQkJCQkJCTAsDQotCQkJCQkJ
CWNvbnRlbnRzTGVuZ3RoKTsNCi0JCQkJfQ0KLQkJCQkvLyByZWFkIGFzIG1hbnkgYnl0ZXMgYXMg
cG9zc2libGUNCi0JCQkJYW1vdW50UmVhZCA9IHN0cmVhbS5yZWFkKGNvbnRlbnRzLCBjb250ZW50
c0xlbmd0aCwgYW1vdW50UmVxdWVzdGVkKTsNCi0JCQkJaWYgKGFtb3VudFJlYWQgPiAwKSB7DQot
CQkJCQkvLyByZW1lbWJlciBsZW5ndGggb2YgY29udGVudHMNCi0JCQkJCWNvbnRlbnRzTGVuZ3Ro
ICs9IGFtb3VudFJlYWQ7DQotCQkJCX0NCi0JCQl9IHdoaWxlIChhbW91bnRSZWFkICE9IC0xKTsN
Ci0JCQkvLyByZXNpemUgY29udGVudHMgaWYgbmVjZXNzYXJ5DQotCQkJaWYgKGNvbnRlbnRzTGVu
Z3RoIDwgY29udGVudHMubGVuZ3RoKSB7DQotCQkJCVN5c3RlbS5hcnJheWNvcHkoY29udGVudHMs
IDAsIGNvbnRlbnRzID0gbmV3IGJ5dGVbY29udGVudHNMZW5ndGhdLCAwLCBjb250ZW50c0xlbmd0
aCk7DQorCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIGdldEZvcm1hdHRlZEZpbHRlck5hbWUo
SUFwaVByb2JsZW1GaWx0ZXIgZmlsdGVyKSB7DQorCQlJRWxlbWVudERlc2NyaXB0b3IgZGVzYyA9
IGZpbHRlci5nZXRFbGVtZW50KCk7DQorCQlzd2l0Y2goZGVzYy5nZXRFbGVtZW50VHlwZSgpKSB7
DQorCQkJY2FzZSBJRWxlbWVudERlc2NyaXB0b3IuVF9QQUNLQUdFOiB7DQorCQkJCXJldHVybiAo
KElQYWNrYWdlRGVzY3JpcHRvcilkZXNjKS5nZXROYW1lKCk7DQogCQkJfQ0KLQkJfSBlbHNlIHsN
Ci0JCQljb250ZW50cyA9IG5ldyBieXRlW2xlbmd0aF07DQotCQkJaW50IGxlbiA9IDA7DQotCQkJ
aW50IHJlYWRTaXplID0gMDsNCi0JCQl3aGlsZSAoKHJlYWRTaXplICE9IC0xKSAmJiAobGVuICE9
IGxlbmd0aCkpIHsNCi0JCQkJLy8gU2VlIFBSIDFGTVM4OVUNCi0JCQkJLy8gV2UgcmVjb3JkIGZp
cnN0IHRoZSByZWFkIHNpemUuIEluIHRoaXMgY2FzZSBsZW5ndGggaXMgdGhlIGFjdHVhbA0KLQkJ
CQkvLyByZWFkIHNpemUuDQotCQkJCWxlbiArPSByZWFkU2l6ZTsNCi0JCQkJcmVhZFNpemUgPSBz
dHJlYW0ucmVhZChjb250ZW50cywgbGVuLCBsZW5ndGggLSBsZW4pOw0KKwkJCWNhc2UgSUVsZW1l
bnREZXNjcmlwdG9yLlRfUkVGRVJFTkNFX1RZUEU6IHsNCisJCQkJcmV0dXJuICgoSVJlZmVyZW5j
ZVR5cGVEZXNjcmlwdG9yKWRlc2MpLmdldE5hbWUoKTsNCiAJCQl9DQotCQl9DQotCQlyZXR1cm4g
Y29udGVudHM7DQotCX0NCisJCQljYXNlIElFbGVtZW50RGVzY3JpcHRvci5UX01FVEhPRDogew0K
KwkJCQlJTWV0aG9kRGVzY3JpcHRvciBtZXRob2QgPSAoSU1ldGhvZERlc2NyaXB0b3IpIGRlc2M7
DQorCQkJCXJldHVybiBTaWduYXR1cmUudG9TdHJpbmcobWV0aG9kLmdldFNpZ25hdHVyZSgpLCBt
ZXRob2QuZ2V0TmFtZSgpLCBudWxsLCBmYWxzZSwgZmFsc2UpOw0KKwkJCX0NCisJCQljYXNlIElF
bGVtZW50RGVzY3JpcHRvci5UX0ZJRUxEOiB7DQorCQkJCXJldHVybiAoKElGaWVsZERlc2NyaXB0
b3IpIGRlc2MpLmdldE5hbWUoKTsNCisJCQl9DQorCQl9DQorCQlyZXR1cm4gbnVsbDsNCisJfQ0K
Kw0KKwkvKioNCisJICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGZyYWdtZW50cyBmb3IgdGhlIGdp
dmVuIHZlcnNpb24gdmFsdWUsIC0xIGlmIHRoZSBmb3JtYXQgaXMgdW5rbm93bi4NCisJICogVGhl
IHZlcnNpb24gaXMgZm9ybWVkIGxpa2U6IFtvcHRpb25hbCBwbHVnaW4gbmFtZV0gbWFqb3IubWlu
b3IubWljcm8ucXVhbGlmaWVyLg0KKwkgKiANCisJICogQHBhcmFtIHZlcnNpb24gdGhlIGdpdmVu
IHZlcnNpb24gdmFsdWUNCisJICogQHJldHVybiB0aGUgbnVtYmVyIG9mIGZyYWdtZW50cyBmb3Ig
dGhlIGdpdmVuIHZlcnNpb24gdmFsdWUgb3IgLTEgaWYgdGhlIGZvcm1hdCBpcyB1bmtub3duDQor
CSAqIEB0aHJvd3MgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIGlmIHZlcnNpb24gaXMgbnVsbA0K
KwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBpbnQgZ2V0RnJhZ21lbnROdW1iZXIoU3RyaW5n
IHZlcnNpb24pIHsNCisJCWlmICh2ZXJzaW9uID09IG51bGwpIHRocm93IG5ldyBJbGxlZ2FsQXJn
dW1lbnRFeGNlcHRpb24oIlRoZSBnaXZlbiB2ZXJzaW9uIHNob3VsZCBub3QgYmUgbnVsbCIpOyAv
LyROT04tTkxTLTEkDQorCQlpbnQgaW5kZXggPSB2ZXJzaW9uLmluZGV4T2YoJyAnKTsNCisJCWNo
YXJbXSBjaGFyQXJyYXkgPSB2ZXJzaW9uLnRvQ2hhckFycmF5KCk7DQorCQlpbnQgbGVuZ3RoID0g
Y2hhckFycmF5Lmxlbmd0aDsNCisJCWlmIChpbmRleCArIDEgPj0gbGVuZ3RoKSB7DQorCQkJcmV0
dXJuIC0xOw0KKwkJfQ0KKwkJaW50IGNvdW50ZXIgPSAxOw0KKwkJZm9yIChpbnQgaSA9IGluZGV4
ICsgMTsgaSA8IGxlbmd0aDsgaSsrKSB7DQorCQkJc3dpdGNoKGNoYXJBcnJheVtpXSkgew0KKwkJ
CQljYXNlICcwJyA6DQorCQkJCWNhc2UgJzEnIDoNCisJCQkJY2FzZSAnMicgOg0KKwkJCQljYXNl
ICczJyA6DQorCQkJCWNhc2UgJzQnIDoNCisJCQkJY2FzZSAnNScgOg0KKwkJCQljYXNlICc2JyA6
DQorCQkJCWNhc2UgJzcnIDoNCisJCQkJY2FzZSAnOCcgOg0KKwkJCQljYXNlICc5JyA6DQorCQkJ
CQljb250aW51ZTsNCisJCQkJY2FzZSAnLicgOg0KKwkJCQkJY291bnRlcisrOw0KKwkJCQkJYnJl
YWs7DQorCQkJCWRlZmF1bHQgOg0KKwkJCQkJcmV0dXJuIC0xOw0KKwkJCX0NCisJCX0NCisJCXJl
dHVybiBjb3VudGVyOw0KKwl9DQorDQorCXB1YmxpYyBzdGF0aWMgSU1lbWJlciBnZXRJTWVtYmVy
KElEZWx0YSBkZWx0YSwgSUphdmFQcm9qZWN0IGphdmFQcm9qZWN0KSB7DQorCQlJVHlwZSB0eXBl
ID0gbnVsbDsNCisJCXRyeSB7DQorCQkJdHlwZSA9IGphdmFQcm9qZWN0LmZpbmRUeXBlKGRlbHRh
LmdldFR5cGVOYW1lKCkpOw0KKwkJfSBjYXRjaCAoSmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsNCisJ
CQkvLyBpZ25vcmUNCisJCX0NCisJCWlmICh0eXBlID09IG51bGwpIHJldHVybiBudWxsOw0KKwkJ
U3RyaW5nIGtleSA9IGRlbHRhLmdldEtleSgpOw0KKwkJc3dpdGNoKGRlbHRhLmdldEVsZW1lbnRU
eXBlKCkpIHsNCisJCQljYXNlIElEZWx0YS5GSUVMRF9FTEVNRU5UX1RZUEUgOiB7DQorCQkJCQlJ
RmllbGQgZmllbGQgPSB0eXBlLmdldEZpZWxkKGtleSk7DQorCQkJCQlpZiAoZmllbGQuZXhpc3Rz
KCkpIHsNCisJCQkJCQlyZXR1cm4gZmllbGQ7DQorCQkJCQl9DQorCQkJCX0NCisJCQkJYnJlYWs7
DQorCQkJY2FzZSBJRGVsdGEuQ0xBU1NfRUxFTUVOVF9UWVBFIDoNCisJCQljYXNlIElEZWx0YS5B
Tk5PVEFUSU9OX0VMRU1FTlRfVFlQRSA6DQorCQkJY2FzZSBJRGVsdGEuSU5URVJGQUNFX0VMRU1F
TlRfVFlQRSA6DQorCQkJY2FzZSBJRGVsdGEuRU5VTV9FTEVNRU5UX1RZUEUgOg0KKwkJCWNhc2Ug
SURlbHRhLk1FTUJFUl9FTEVNRU5UX1RZUEUgOg0KKwkJCQkvLyB3ZSByZXBvcnQgdGhlIG1hcmtl
ciBvbiB0aGUgdHlwZQ0KKwkJCQlzd2l0Y2goZGVsdGEuZ2V0S2luZCgpKSB7DQorCQkJCQljYXNl
IElEZWx0YS5BRERFRCA6DQorCQkJCQljYXNlIElEZWx0YS5BRERFRF9FWFRFTkRfUkVTVFJJQ1RJ
T04gOg0KKwkJCQkJY2FzZSBJRGVsdGEuQURERURfSU1QTEVNRU5UX1JFU1RSSUNUSU9OIDoNCisJ
CQkJCWNhc2UgSURlbHRhLkFEREVEX05PTl9WSVNJQkxFIDoNCisJCQkJCWNhc2UgSURlbHRhLkFE
REVEX05PVF9FWFRFTkRfUkVTVFJJQ1RJT04gOg0KKwkJCQkJY2FzZSBJRGVsdGEuQURERURfTk9U
X0VYVEVORF9SRVNUUklDVElPTl9TVEFUSUMgOg0KKwkJCQkJY2FzZSBJRGVsdGEuQURERURfTk9U
X0lNUExFTUVOVF9SRVNUUklDVElPTiA6DQorCQkJCQkJc3dpdGNoKGRlbHRhLmdldEZsYWdzKCkp
IHsNCisJCQkJCQkJY2FzZSBJRGVsdGEuRklFTEQgOg0KKwkJCQkJCQkJSUZpZWxkIGZpZWxkID0g
dHlwZS5nZXRGaWVsZChrZXkpOw0KKwkJCQkJCQkJaWYgKGZpZWxkLmV4aXN0cygpKSB7DQorCQkJ
CQkJCQkJcmV0dXJuIGZpZWxkOw0KKwkJCQkJCQkJfQ0KKwkJCQkJCQkJYnJlYWs7DQorCQkJCQkJ
CWNhc2UgSURlbHRhLk1FVEhPRCA6DQorCQkJCQkJCWNhc2UgSURlbHRhLkNPTlNUUlVDVE9SIDoN
CisJCQkJCQkJCWludCBpbmRleE9mID0ga2V5LmluZGV4T2YoJygnKTsNCisJCQkJCQkJCWlmIChp
bmRleE9mID09IC0xKSB7DQorCQkJCQkJCQkJcmV0dXJuIG51bGw7DQorCQkJCQkJCQl9DQorCQkJ
CQkJCQlpbnQgaW5kZXggPSBpbmRleE9mOw0KKwkJCQkJCQkJU3RyaW5nIHNlbGVjdG9yID0ga2V5
LnN1YnN0cmluZygwLCBpbmRleCk7DQorCQkJCQkJCQlTdHJpbmcgZGVzY3JpcHRvciA9IGtleS5z
dWJzdHJpbmcoaW5kZXgsIGtleS5sZW5ndGgoKSk7DQorCQkJCQkJCQlJTWV0aG9kIG1ldGhvZCA9
IG51bGw7DQorCQkJCQkJCQl0cnkgew0KKwkJCQkJCQkJCW1ldGhvZCA9IHR5cGUuZ2V0TWV0aG9k
KHNlbGVjdG9yLCBTaWduYXR1cmUuZ2V0UGFyYW1ldGVyVHlwZXMoVXRpbC5jb252ZXJ0RGVzY3Jp
cHRvcihkZXNjcmlwdG9yKSkpOw0KKwkJCQkJCQkJfSBjYXRjaCAoSWxsZWdhbEFyZ3VtZW50RXhj
ZXB0aW9uIGUpIHsNCisJCQkJCQkJCQllLnByaW50U3RhY2tUcmFjZSgpOw0KKwkJCQkJCQkJfQ0K
KwkJCQkJCQkJaWYgKG1ldGhvZCA9PSBudWxsKSB7DQorCQkJCQkJCQkJcmV0dXJuIG51bGw7DQor
CQkJCQkJCQl9DQorCQkJCQkJCQlpZiAobWV0aG9kLmV4aXN0cygpKSB7DQorCQkJCQkJCQkJcmV0
dXJuIG1ldGhvZDsNCisJCQkJCQkJCX0NCisJCQkJCQkJCWJyZWFrOw0KKwkJCQkJCQljYXNlIElE
ZWx0YS5UWVBFX01FTUJFUiA6DQorCQkJCQkJCQlJVHlwZSB0eXBlMiA9IHR5cGUuZ2V0VHlwZShr
ZXkpOw0KKwkJCQkJCQkJaWYgKHR5cGUyLmV4aXN0cygpKSB7DQorCQkJCQkJCQkJcmV0dXJuIHR5
cGUyOw0KKwkJCQkJCQkJfQ0KKwkJCQkJCX0NCisJCQkJfQ0KKwkJCQlyZXR1cm4gdHlwZTsNCisJ
CQljYXNlIElEZWx0YS5NRVRIT0RfRUxFTUVOVF9UWVBFIDoNCisJCQljYXNlIElEZWx0YS5DT05T
VFJVQ1RPUl9FTEVNRU5UX1RZUEUgOiB7DQorCQkJCQlpbnQgaW5kZXhPZiA9IGtleS5pbmRleE9m
KCcoJyk7DQorCQkJCQlpZiAoaW5kZXhPZiA9PSAtMSkgew0KKwkJCQkJCXJldHVybiBudWxsOw0K
KwkJCQkJfQ0KKwkJCQkJaW50IGluZGV4ID0gaW5kZXhPZjsNCisJCQkJCVN0cmluZyBzZWxlY3Rv
ciA9IGtleS5zdWJzdHJpbmcoMCwgaW5kZXgpOw0KKwkJCQkJU3RyaW5nIGRlc2NyaXB0b3IgPSBr
ZXkuc3Vic3RyaW5nKGluZGV4LCBrZXkubGVuZ3RoKCkpOw0KKwkJCQkJSU1ldGhvZCBtZXRob2Qg
PSBudWxsOw0KKwkJCQkJdHJ5IHsNCisJCQkJCQltZXRob2QgPSB0eXBlLmdldE1ldGhvZChzZWxl
Y3RvciwgU2lnbmF0dXJlLmdldFBhcmFtZXRlclR5cGVzKFV0aWwuY29udmVydERlc2NyaXB0b3Io
ZGVzY3JpcHRvcikpKTsNCisJCQkJCX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiBl
KSB7DQorCQkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCisJCQkJCX0NCisJCQkJCWlmIChtZXRo
b2QgPT0gbnVsbCkgew0KKwkJCQkJCXJldHVybiBudWxsOw0KKwkJCQkJfQ0KKwkJCQkJaWYgKG1l
dGhvZC5leGlzdHMoKSkgew0KKwkJCQkJCXJldHVybiBtZXRob2Q7DQorCQkJCQl9DQorDQorCQkJ
CQlicmVhazsNCisJCQkJfQ0KKwkJfQ0KKwkJcmV0dXJuIG51bGw7DQorCX0NCiANCiAJLyoqDQor
CSAqIFJldHVybnMgdGhlIGdpdmVuIGlucHV0IHN0cmVhbSBhcyBhIGJ5dGUgYXJyYXkNCisJICog
QHBhcmFtIHN0cmVhbSB0aGUgc3RyZWFtIHRvIGdldCBhcyBhIGJ5dGUgYXJyYXkNCisJICogQHBh
cmFtIGxlbmd0aCB0aGUgbGVuZ3RoIHRvIHJlYWQgZnJvbSB0aGUgc3RyZWFtIG9yIC0xIGZvciB1
bmtub3duDQorCSAqIEByZXR1cm4gdGhlIGdpdmVuIGlucHV0IHN0cmVhbSBhcyBhIGJ5dGUgYXJy
YXkNCisJICogQHRocm93cyBJT0V4Y2VwdGlvbg0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBieXRl
W10gZ2V0SW5wdXRTdHJlYW1Bc0J5dGVBcnJheShJbnB1dFN0cmVhbSBzdHJlYW0sIGludCBsZW5n
dGgpIHRocm93cyBJT0V4Y2VwdGlvbiB7DQorCQlieXRlW10gY29udGVudHM7DQorCQlpZiAobGVu
Z3RoID09IC0xKSB7DQorCQkJY29udGVudHMgPSBuZXcgYnl0ZVswXTsNCisJCQlpbnQgY29udGVu
dHNMZW5ndGggPSAwOw0KKwkJCWludCBhbW91bnRSZWFkID0gLTE7DQorCQkJZG8gew0KKwkJCQkv
LyByZWFkIGF0IGxlYXN0IDhLDQorCQkJCWludCBhbW91bnRSZXF1ZXN0ZWQgPSBNYXRoLm1heChz
dHJlYW0uYXZhaWxhYmxlKCksIERFRkFVTFRfUkVBRElOR19TSVpFKTsNCisJCQkJLy8gcmVzaXpl
IGNvbnRlbnRzIGlmIG5lZWRlZA0KKwkJCQlpZiAoY29udGVudHNMZW5ndGggKyBhbW91bnRSZXF1
ZXN0ZWQgPiBjb250ZW50cy5sZW5ndGgpIHsNCisJCQkJCVN5c3RlbS5hcnJheWNvcHkoY29udGVu
dHMsDQorCQkJCQkJCTAsDQorCQkJCQkJCWNvbnRlbnRzID0gbmV3IGJ5dGVbY29udGVudHNMZW5n
dGggKyBhbW91bnRSZXF1ZXN0ZWRdLA0KKwkJCQkJCQkwLA0KKwkJCQkJCQljb250ZW50c0xlbmd0
aCk7DQorCQkJCX0NCisJCQkJLy8gcmVhZCBhcyBtYW55IGJ5dGVzIGFzIHBvc3NpYmxlDQorCQkJ
CWFtb3VudFJlYWQgPSBzdHJlYW0ucmVhZChjb250ZW50cywgY29udGVudHNMZW5ndGgsIGFtb3Vu
dFJlcXVlc3RlZCk7DQorCQkJCWlmIChhbW91bnRSZWFkID4gMCkgew0KKwkJCQkJLy8gcmVtZW1i
ZXIgbGVuZ3RoIG9mIGNvbnRlbnRzDQorCQkJCQljb250ZW50c0xlbmd0aCArPSBhbW91bnRSZWFk
Ow0KKwkJCQl9DQorCQkJfSB3aGlsZSAoYW1vdW50UmVhZCAhPSAtMSk7DQorCQkJLy8gcmVzaXpl
IGNvbnRlbnRzIGlmIG5lY2Vzc2FyeQ0KKwkJCWlmIChjb250ZW50c0xlbmd0aCA8IGNvbnRlbnRz
Lmxlbmd0aCkgew0KKwkJCQlTeXN0ZW0uYXJyYXljb3B5KGNvbnRlbnRzLCAwLCBjb250ZW50cyA9
IG5ldyBieXRlW2NvbnRlbnRzTGVuZ3RoXSwgMCwgY29udGVudHNMZW5ndGgpOw0KKwkJCX0NCisJ
CX0gZWxzZSB7DQorCQkJY29udGVudHMgPSBuZXcgYnl0ZVtsZW5ndGhdOw0KKwkJCWludCBsZW4g
PSAwOw0KKwkJCWludCByZWFkU2l6ZSA9IDA7DQorCQkJd2hpbGUgKChyZWFkU2l6ZSAhPSAtMSkg
JiYgKGxlbiAhPSBsZW5ndGgpKSB7DQorCQkJCS8vIFNlZSBQUiAxRk1TODlVDQorCQkJCS8vIFdl
IHJlY29yZCBmaXJzdCB0aGUgcmVhZCBzaXplLiBJbiB0aGlzIGNhc2UgbGVuZ3RoIGlzIHRoZSBh
Y3R1YWwNCisJCQkJLy8gcmVhZCBzaXplLg0KKwkJCQlsZW4gKz0gcmVhZFNpemU7DQorCQkJCXJl
YWRTaXplID0gc3RyZWFtLnJlYWQoY29udGVudHMsIGxlbiwgbGVuZ3RoIC0gbGVuKTsNCisJCQl9
DQorCQl9DQorCQlyZXR1cm4gY29udGVudHM7DQorCX0NCisJDQorCS8qKg0KIAkgKiBSZXR1cm5z
IHRoZSBnaXZlbiBpbnB1dCBzdHJlYW0ncyBjb250ZW50cyBhcyBhIGNoYXJhY3RlciBhcnJheS4N
CiAJICogSWYgYSBsZW5ndGggaXMgc3BlY2lmaWVkIChpLmUuIGlmIGxlbmd0aCAhPSAtMSksIHRo
aXMgcmVwcmVzZW50cyB0aGUgbnVtYmVyIG9mIGJ5dGVzIGluIHRoZSBzdHJlYW0uDQogCSAqIE5v
dGUgdGhlIHNwZWNpZmllZCBzdHJlYW0gaXMgbm90IGNsb3NlZCBpbiB0aGlzIG1ldGhvZA0KQEAg
LTg3Myw3ICsxMjIxLDQ1IEBADQogCQlieXRlQnVmZmVyLmZsaXAoKTsNCiAJCXJldHVybiBjaGFy
c2V0RGVjb2Rlci5kZWNvZGUoYnl0ZUJ1ZmZlcikuYXJyYXkoKTsNCiAJfQ0KLQ0KKwkNCisJcHVi
bGljIHN0YXRpYyBJUmVzb3VyY2UgZ2V0TWFuaWZlc3RGaWxlKElQcm9qZWN0IGN1cnJlbnRQcm9q
ZWN0KSB7DQorCQlyZXR1cm4gY3VycmVudFByb2plY3QuZmluZE1lbWJlcigiTUVUQS1JTkYvTUFO
SUZFU1QuTUYiKTsgLy8kTk9OLU5MUy0xJA0KKwl9DQorCQ0KKwkvKioNCisJICogUmV0dXJucyB0
aGUgc3RyaW5nIG9mIHRoZSAna2luZCcgZnJvbSBhIGdpdmVuIGFwaSBwcm9ibGVtIG1hcmtlcg0K
KwkgKiBAcGFyYW0ga2luZA0KKwkgKiBAcmV0dXJuIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24g
b2YgdGhlIGtpbmQgb2YgYW4gYXBpIHByb2JsZW0gbWFya2VyIG9yIHtAbGluayAjVU5LTk9XTl9L
SU5EfQ0KKwkgKi8NCisJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgZ2V0TWFya2VyS2luZChJ
TWFya2VyIG1hcmtlcikgew0KKwkJU3RyaW5nQnVmZmVyIGJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZm
ZXIoKTsNCisJCWludCBmbGFncyA9IG1hcmtlci5nZXRBdHRyaWJ1dGUoSUFwaU1hcmtlckNvbnN0
YW50cy5NQVJLRVJfQVRUUl9GTEFHUywgLTEpOw0KKwkJaW50IGtpbmRzID0gbWFya2VyLmdldEF0
dHJpYnV0ZShJQXBpTWFya2VyQ29uc3RhbnRzLk1BUktFUl9BVFRSX0tJTkQsIC0xKTsNCisJCWlm
KGtpbmRzICE9IC0xKSB7DQorCQkJU3RyaW5nIGtpbmRzdHIgPSBudWxsOw0KKwkJCWlmKGZsYWdz
ID09IDApIHsNCisJCQkJa2luZHN0ciA9IGdldFJlZmVyZW5jZUtpbmQoa2luZHMpOw0KKwkJCX0N
CisJCQllbHNlIHsNCisJCQkJa2luZHN0ciA9IGdldERlbHRhS2luZE5hbWUoa2luZHMpOw0KKwkJ
CQlpZihVTktOT1dOX0tJTkQuZXF1YWxzKGtpbmRzdHIpKSB7DQorCQkJCQkvL3RyeSB0aGUgcmVm
IGtpbmRzOiBvdmVybGFwDQorCQkJCQlraW5kc3RyID0gZ2V0UmVmZXJlbmNlS2luZChraW5kcyk7
DQorCQkJCX0NCisJCQl9DQorCQkJaWYoa2luZHN0ciAhPSBudWxsKSB7IA0KKwkJCQlidWZmZXIu
YXBwZW5kKGtpbmRzdHIpOw0KKwkJCX0NCisJCQlpZihraW5kcyAhPSBJRGVsdGEuQURERURfTk9U
X0VYVEVORF9SRVNUUklDVElPTiAmJiANCisJCQkJa2luZHMgIT0gSURlbHRhLkFEREVEX05PVF9J
TVBMRU1FTlRfUkVTVFJJQ1RJT04gJiYgDQorCQkJCWZsYWdzID4gMCkgew0KKwkJCQkJYnVmZmVy
LmFwcGVuZCgiXyIpLmFwcGVuZChnZXREZWx0YUZsYWdzTmFtZShmbGFncykpOyAvLyROT04tTkxT
LTEkDQorCQkJfQ0KKwkJfQ0KKwkJU3RyaW5nIHZhbHVlID0gYnVmZmVyLnRvU3RyaW5nKCk7DQor
CQlyZXR1cm4gKHZhbHVlLmxlbmd0aCgpID09IDAgPyBVTktOT1dOX0tJTkQgOiB2YWx1ZSk7DQor
CX0NCisJDQogCS8qKg0KIAkgKiBDcmVhdGVzIGEgbWV0aG9kIHNpZ25hdHVyZSBmcm9tIGEgc3Bl
Y2lmaWVkIHtAbGluayBNZXRob2REZWNsYXJhdGlvbn0NCiAJICogQHBhcmFtIG5vZGUNCkBAIC05
MDQsNyArMTI5MCw3IEBADQogCQl9DQogCQlyZXR1cm4gbnVsbDsNCiAJfQ0KLQ0KKwkNCiAJLyoq
DQogCSAqIFRoZSB0eXBlIG5hbWUgaXMgZG90LXNlcGFyYXRlZA0KIAkgKiBAcGFyYW0gdHlwZU5h
bWUgdGhlIGdpdmVuIHR5cGUgbmFtZQ0KQEAgLTkxNCwyMiArMTMwMCwxMjAgQEANCiAJCWludCBp
bmRleCA9IHR5cGVOYW1lLmxhc3RJbmRleE9mKCcuJyk7DQogCQlyZXR1cm4gaW5kZXggPT0gLTEg
PyBERUZBVUxUX1BBQ0tBR0VfTkFNRSA6IHR5cGVOYW1lLnN1YnN0cmluZygwLCBpbmRleCk7DQog
CX0NCi0NCisJDQogCS8qKg0KLQkgKiBSZXR1cm5zIGEgcmVmZXJlbmNlIHR5cGUgZm9yIHRoZSBn
aXZlbiBmdWxseSBxdWFsaWZpZWQgdHlwZSBuYW1lLg0KLQkgKiANCi0JICogQHBhcmFtIGZ1bGx5
UXVhbGlmaWVkTmFtZSB0eXBlIG5hbWUNCi0JICogQHJldHVybiByZWZlcmVuY2UgdHlwZQ0KKwkg
KiBSZXR1cm5zIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gZm9yIHRoZSBnaXZlbiByZWZlcmVu
Y2Uga2luZA0KKwkgKiBAcGFyYW0ga2luZA0KKwkgKiBAcmV0dXJuIHRoZSBzdHJpbmcgZm9yIHRo
ZSByZWZlcmVuY2Uga2luZA0KIAkgKi8NCi0JcHVibGljIHN0YXRpYyBJUmVmZXJlbmNlVHlwZURl
c2NyaXB0b3IgZ2V0VHlwZShTdHJpbmcgZnVsbHlRdWFsaWZpZWROYW1lKSB7DQotCQlpbnQgaW5k
ZXggPSBmdWxseVF1YWxpZmllZE5hbWUubGFzdEluZGV4T2YoJy4nKTsNCi0JCVN0cmluZyBwa2cg
PSBpbmRleCA9PSAtMSA/IERFRkFVTFRfUEFDS0FHRV9OQU1FIDogZnVsbHlRdWFsaWZpZWROYW1l
LnN1YnN0cmluZygwLCBpbmRleCk7DQotCQlTdHJpbmcgdHlwZSA9IGluZGV4ID09IC0xID8gZnVs
bHlRdWFsaWZpZWROYW1lIDogZnVsbHlRdWFsaWZpZWROYW1lLnN1YnN0cmluZyhpbmRleCArIDEp
Ow0KLQkJcmV0dXJuIEZhY3RvcnkucGFja2FnZURlc2NyaXB0b3IocGtnKS5nZXRUeXBlKHR5cGUp
Ow0KLQl9DQotDQotCS8qKg0KLQkgKiBSZXR1cm5zIHRoZSBzaW1wbGUgbmFtZSBvZiB0aGUgdHlw
ZSwgYnkgc3RyaXBwaW5nIG9mZiB0aGUgbGFzdCAnLicgc2VnbWVudCBhbmQgcmV0dXJuaW5nIGl0
Lg0KKwlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBnZXRSZWZlcmVuY2VLaW5kKGludCBraW5k
KSB7DQorCQlzd2l0Y2goa2luZCkgew0KKwkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9F
WFRFTkRTOiB7DQorCQkJCXJldHVybiAiRVhURU5EUyI7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQor
CQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX0lNUExFTUVOVFM6IHsNCisJCQkJcmV0dXJu
ICJJTVBMRU1FTlRTIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1v
ZGlmaWVycy5SRUZfU1BFQ0lBTE1FVEhPRDogew0KKwkJCQlyZXR1cm4gIklOVk9LRURfU1BFQ0lB
TCI7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQorCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVG
X1NUQVRJQ01FVEhPRDogew0KKwkJCQlyZXR1cm4gIklOVk9LRURfU1RBVElDIjsgLy8kTk9OLU5M
Uy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfUFVURklFTEQ6IHsN
CisJCQkJcmV0dXJuICJQVVRfRklFTEQiOyAvLyROT04tTkxTLTEkDQorCQkJfQ0KKwkJCWNhc2Ug
UmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9QVVRTVEFUSUM6IHsNCisJCQkJcmV0dXJuICJQVVRfU1RB
VElDX0ZJRUxEIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlm
aWVycy5SRUZfRklFTERERUNMOiB7DQorCQkJCXJldHVybiAiREVDQUxSRURfRklFTEQiOyAvLyRO
T04tTkxTLTEkDQorCQkJfQ0KKwkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9QQVJBTUVU
RVJJWkVEX1RZUEVERUNMOiB7DQorCQkJCXJldHVybiAiREVDTEFSRURfUEFSQU1FVEVSSVpFRF9U
WVBFIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5S
RUZfUEFSQU1FVEVSSVpFRF9GSUVMRERFQ0w6IHsNCisJCQkJcmV0dXJuICJERUNMQVJFRF9QQVJB
TUVURVJJWkVEX0ZJRUxEIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5j
ZU1vZGlmaWVycy5SRUZfUEFSQU1FVEVSSVpFRF9NRVRIT0RERUNMOiB7DQorCQkJCXJldHVybiAi
REVDTEFSRURfUEFSQU1FVEVSSVpFRF9NRVRIT0QiOyAvLyROT04tTkxTLTEkDQorCQkJfQ0KKwkJ
CWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9QQVJBTUVURVI6IHsNCisJCQkJcmV0dXJuICJQ
QVJBTUVURVIiOyAvLyROT04tTkxTLTEkDQorCQkJfQ0KKwkJCWNhc2UgUmVmZXJlbmNlTW9kaWZp
ZXJzLlJFRl9MT0NBTFZBUklBQkxFREVDTDogew0KKwkJCQlyZXR1cm4gIkxPQ0FMX1ZBUl9ERUNM
QVJFRCI7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQorCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMu
UkVGX1BBUkFNRVRFUklaRURfVkFSSUFCTEU6IHsNCisJCQkJcmV0dXJuICJERUNMQVJFRF9QQVJB
TUVURVJJWkVEX1ZBUklBQkxFIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVy
ZW5jZU1vZGlmaWVycy5SRUZfVEhST1dTOiB7DQorCQkJCXJldHVybiAiVEhST1dTIjsgLy8kTk9O
LU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfQ0hFQ0tDQVNU
OiB7DQorCQkJCXJldHVybiAiQ0FTVFMiOyAvLyROT04tTkxTLTEkDQorCQkJfQ0KKwkJCWNhc2Ug
UmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9BUlJBWUFMTE9DOiB7DQorCQkJCXJldHVybiAiQUxMT0NB
VEVTX0FSUkFZIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlm
aWVycy5SRUZfQ0FUQ0hFWENFUFRJT046IHsNCisJCQkJcmV0dXJuICJDQVRDSEVTX0VYQ0VQVElP
TiI7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQorCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVG
X0dFVEZJRUxEOiB7DQorCQkJCXJldHVybiAiR0VUU19GSUVMRCI7IC8vJE5PTi1OTFMtMSQNCisJ
CQl9DQorCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX0dFVFNUQVRJQzogew0KKwkJCQly
ZXR1cm4gIkdFVFNfU1RBVElDX0ZJRUxEIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNl
IFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfSU5TVEFOQ0VPRjogew0KKwkJCQlyZXR1cm4gIklOU1RB
TkNFT0YiOyAvLyROT04tTkxTLTEkDQorCQkJfQ0KKwkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJz
LlJFRl9JTlRFUkZBQ0VNRVRIT0Q6IHsNCisJCQkJcmV0dXJuICJJTlRFUkZBQ0VfTUVUSE9EIjsg
Ly8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfQ09O
U1RSVUNUT1JNRVRIT0Q6IHsNCisJCQkJcmV0dXJuICJDT05TVFJVQ1RPUl9NRVRIT0QiOyAvLyRO
T04tTkxTLTEkDQorCQkJfQ0KKwkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9MT0NBTFZB
UklBQkxFOiB7DQorCQkJCXJldHVybiAiTE9DQUxfVkFSSUFCTEUiOyAvLyROT04tTkxTLTEkDQor
CQkJfQ0KKwkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9QQVNTRURQQVJBTUVURVI6IHsN
CisJCQkJcmV0dXJuICJQQVNTRURfUEFSQU1FVEVSIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJ
CQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfUkVUVVJOVFlQRTogew0KKwkJCQlyZXR1cm4g
IlJFVFVSTl9UWVBFIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1v
ZGlmaWVycy5SRUZfVklSVFVBTE1FVEhPRDogew0KKwkJCQlyZXR1cm4gIlZJUlRVQUxfTUVUSE9E
IjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZf
Q09OU1RBTlRQT09MOiB7DQorCQkJCXJldHVybiAiQ09OU1RBTlRfUE9PTCI7IC8vJE5PTi1OTFMt
MSQNCisJCQl9DQorCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX0lOU1RBTlRJQVRFOiB7
DQorCQkJCXJldHVybiAiSU5TVEFOVElBVElPTiI7IC8vJE5PTi1OTFMtMSQNCisJCQl9DQorCQkJ
Y2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX09WRVJSSURFIDogew0KKwkJCQlyZXR1cm4gIk9W
RVJSSURFIjsgLy8kTk9OLU5MUy0xJA0KKwkJCX0NCisJCX0NCisJCXJldHVybiBudWxsOw0KKwl9
CQ0KKwkNCisJLyoqDQorCSAqIFJldHVybnMgYSByZWZlcmVuY2UgdHlwZSBmb3IgdGhlIGdpdmVu
IGZ1bGx5IHF1YWxpZmllZCB0eXBlIG5hbWUuDQorCSAqIA0KKwkgKiBAcGFyYW0gZnVsbHlRdWFs
aWZpZWROYW1lIHR5cGUgbmFtZQ0KKwkgKiBAcmV0dXJuIHJlZmVyZW5jZSB0eXBlDQorCSAqLw0K
KwlwdWJsaWMgc3RhdGljIElSZWZlcmVuY2VUeXBlRGVzY3JpcHRvciBnZXRUeXBlKFN0cmluZyBm
dWxseVF1YWxpZmllZE5hbWUpIHsNCisJCWludCBpbmRleCA9IGZ1bGx5UXVhbGlmaWVkTmFtZS5s
YXN0SW5kZXhPZignLicpOw0KKwkJU3RyaW5nIHBrZyA9IGluZGV4ID09IC0xID8gREVGQVVMVF9Q
QUNLQUdFX05BTUUgOiBmdWxseVF1YWxpZmllZE5hbWUuc3Vic3RyaW5nKDAsIGluZGV4KTsNCisJ
CVN0cmluZyB0eXBlID0gaW5kZXggPT0gLTEgPyBmdWxseVF1YWxpZmllZE5hbWUgOiBmdWxseVF1
YWxpZmllZE5hbWUuc3Vic3RyaW5nKGluZGV4ICsgMSk7DQorCQlyZXR1cm4gRmFjdG9yeS5wYWNr
YWdlRGVzY3JpcHRvcihwa2cpLmdldFR5cGUodHlwZSk7DQorCX0JDQorCQ0KKwkvKioNCisJICog
UmV0dXJucyB0aGUgc2ltcGxlIG5hbWUgb2YgdGhlIHR5cGUsIGJ5IHN0cmlwcGluZyBvZmYgdGhl
IGxhc3QgJy4nIHNlZ21lbnQgYW5kIHJldHVybmluZyBpdC4NCiAJICogVGhpcyBtZXRob2QgYXNz
dW1lcyB0aGF0IHF1YWxpZmllZCB0eXBlIG5hbWVzIGFyZSAnLicgc2VwYXJhdGVkLiBJZiB0aGUg
dHlwZSBzcGVjaWZpZWQgaXMgYSBwYWNrYWdlDQogCSAqIHRoYW4gYW4gZW1wdHkgc3RyaW5nIGlz
IHJldHVybmVkLg0KIAkgKiBAcGFyYW0gcXVhbGlmaWVkbmFtZSB0aGUgZnVsbHkgcXVhbGlmaWVk
IG5hbWUgb2YgYSB0eXBlLCAnLicgc2VwYXJhdGVkIChlLmcuIGEuYi5jLlR5cGUpDQpAQCAtOTQ1
LDcgKzE0MjksNyBAQA0KIAkJLy8gZGVmYXVsdCBwYWNrYWdlDQogCQlyZXR1cm4gcXVhbGlmaWVk
bmFtZTsNCiAJfQ0KLQ0KKwkNCiAJLyoqDQogCSAqIFByb2Nlc3NlcyB0aGUgc2lnbmF0dXJlIGZv
ciB0aGUgZ2l2ZW4ge0BsaW5rIFR5cGV9DQogCSAqIEBwYXJhbSB0eXBlIHRoZSB0eXBlIHRvIHBy
b2Nlc3MNCkBAIC05NzQsMTUgKzE0NTgsMTUgQEANCiAJCX0NCiAJCXJldHVybiBudWxsOw0KIAl9
DQotDQorCQ0KIAlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNBYnN0cmFjdChpbnQgYWNjZXNzRmxh
Z3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3MgJiBPcGNvZGVzLkFDQ19BQlNUUkFDVCkgIT0g
MDsNCiAJfQ0KLQ0KKwkNCiAJcHVibGljIHN0YXRpYyBib29sZWFuIGlzQW5ub3RhdGlvbihpbnQg
YWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3MgJiBPcGNvZGVzLkFDQ19BTk5P
VEFUSU9OKSAhPSAwOw0KIAl9DQotDQorCQ0KIAkvKioNCiAJICogUmV0dXJucyBpZiB0aGUgc3Bl
Y2lmaWVkIGZpbGUgbmFtZSBpcyBhbiBhcmNoaXZlIG5hbWUuIEEgbmFtZSBpcw0KIAkgKiBjb25z
aWRlcmVkIHRvIGJlIGFuIGFyY2hpdmUgbmFtZSBpZiBpdCBlbmRzIHdpdGggZWl0aGVyICcuemlw
JyBvciAnLmphcicNCkBAIC05OTQsNyArMTQ3OCw3IEBADQogCQlTdHJpbmcgbm9ybWFsaXplZEZp
bGVOYW1lID0gZmlsZU5hbWUudG9Mb3dlckNhc2UoKTsNCiAJCXJldHVybiBub3JtYWxpemVkRmls
ZU5hbWUuZW5kc1dpdGgoIi56aXAiKSB8fCBub3JtYWxpemVkRmlsZU5hbWUuZW5kc1dpdGgoIi5q
YXIiKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkDQogCX0NCi0NCisJDQogCS8qKg0KIAkg
KiBSZXR1cm5zIGlmIHRoZSBmbGFncyBhcmUgZm9yIGEgYnJpZGdlDQogCSAqIEBwYXJhbSBhY2Nl
c3NGbGFncw0KQEAgLTEwMjMsNyArMTUwNyw3IEBADQogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBp
c0NsYXNzRmlsZShTdHJpbmcgZmlsZU5hbWUpIHsNCiAJCXJldHVybiBmaWxlTmFtZS50b0xvd2Vy
Q2FzZSgpLmVuZHNXaXRoKCIuY2xhc3MiKTsgLy8kTk9OLU5MUy0xJA0KIAl9DQotCQ0KKw0KIAlw
dWJsaWMgc3RhdGljIGJvb2xlYW4gaXNEZWZhdWx0KGludCBhY2Nlc3NGbGFncykgew0KIAkJLy8g
bm9uZSBvZiB0aGUgcHJpdmF0ZSwgcHJvdGVjdGVkIG9yIHB1YmxpYyBiaXQgaXMgc2V0DQogCQly
ZXR1cm4gKGFjY2Vzc0ZsYWdzICYgKE9wY29kZXMuQUNDX1BSSVZBVEUNCkBAIC0xMDM0LDE5ICsx
NTE4LDY0IEBADQogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc0RlcHJlY2F0ZWQoaW50IGFjY2Vz
c0ZsYWdzKSB7DQogCQlyZXR1cm4gKGFjY2Vzc0ZsYWdzICYgT3Bjb2Rlcy5BQ0NfREVQUkVDQVRF
RCkgIT0gMDsNCiAJfQ0KLQkNCisNCisNCiAJcHVibGljIHN0YXRpYyBib29sZWFuIGlzRW51bShp
bnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3MgJiBPcGNvZGVzLkFDQ19F
TlVNKSAhPSAwOw0KIAl9DQotCQ0KKw0KIAlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNGaW5hbChp
bnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3MgJiBPcGNvZGVzLkFDQ19G
SU5BTCkgIT0gMDsNCi0JfQkNCisJfQ0KIAkNCisJcHVibGljIHN0YXRpYyBmaW5hbCBib29sZWFu
IGlzR3JlYXRoZXJWZXJzaW9uKFN0cmluZyB2ZXJzaW9uVG9CZUNoZWNrZWQsIFN0cmluZyByZWZl
cmVuY2VWZXJzaW9uKSB7DQorCQlTaW5jZVRhZ1ZlcnNpb24gc2luY2VUYWdWZXJzaW9uMSA9IG51
bGw7DQorCQlTaW5jZVRhZ1ZlcnNpb24gc2luY2VUYWdWZXJzaW9uMiA9IG51bGw7DQorCQl0cnkg
ew0KKwkJCXNpbmNlVGFnVmVyc2lvbjEgPSBuZXcgU2luY2VUYWdWZXJzaW9uKHZlcnNpb25Ub0Jl
Q2hlY2tlZCk7DQorCQkJc2luY2VUYWdWZXJzaW9uMiA9IG5ldyBTaW5jZVRhZ1ZlcnNpb24ocmVm
ZXJlbmNlVmVyc2lvbik7DQorCQl9IGNhdGNoIChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkg
ew0KKwkJCS8vIFdlIGNhbm5vdCBjb21wYXJlIHRoZSB0d28gdmVyc2lvbnMgYXMgdGhlaXIgZm9y
bWF0IGlzIHVua25vd24NCisJCQkvLyBUT0RPIChvbGl2aWVyKSBzaG91bGQgd2UgcmVwb3J0IHRo
ZXNlIGFzIG1hbGZvcm1lZCB0YWdzPw0KKwkJCXJldHVybiBmYWxzZTsNCisJCX0NCisJCVZlcnNp
b24gdmVyc2lvbjEgPSBzaW5jZVRhZ1ZlcnNpb24xLmdldFZlcnNpb24oKTsNCisJCVZlcnNpb24g
dmVyc2lvbjIgPSBzaW5jZVRhZ1ZlcnNpb24yLmdldFZlcnNpb24oKTsNCisJCWlmICh2ZXJzaW9u
MS5nZXRNYWpvcigpID4gdmVyc2lvbjIuZ2V0TWFqb3IoKSkgew0KKwkJCXJldHVybiB0cnVlOw0K
KwkJfQ0KKwkJaWYgKHZlcnNpb24xLmdldE1pbm9yKCkgPiB2ZXJzaW9uMi5nZXRNaW5vcigpKSB7
DQorCQkJcmV0dXJuIHRydWU7DQorCQl9DQorCQlpZiAodmVyc2lvbjEuZ2V0TWljcm8oKSA+IHZl
cnNpb24yLmdldE1pY3JvKCkpIHsNCisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJCVN0cmluZyBx
dWFsaWZpZXIxID0gdmVyc2lvbjEuZ2V0UXVhbGlmaWVyKCk7DQorCQlTdHJpbmcgcXVhbGlmaWVy
MiA9IHZlcnNpb24yLmdldFF1YWxpZmllcigpOw0KKwkJaWYgKHF1YWxpZmllcjEgPT0gbnVsbCkg
ew0KKwkJCXJldHVybiBmYWxzZTsNCisJCX0gZWxzZSBpZiAocXVhbGlmaWVyMiA9PSBudWxsKSB7
DQorCQkJcmV0dXJuIHRydWU7DQorCQl9IGVsc2Ugew0KKwkJCXJldHVybiBxdWFsaWZpZXIxLmNv
bXBhcmVUbyhxdWFsaWZpZXIyKSA+IDA7DQorCQl9DQorCX0NCisNCiAJcHVibGljIHN0YXRpYyBi
b29sZWFuIGlzSW50ZXJmYWNlKGludCBhY2Nlc3NGbGFncykgew0KIAkJcmV0dXJuIChhY2Nlc3NG
bGFncyAmIE9wY29kZXMuQUNDX0lOVEVSRkFDRSkgIT0gMDsNCi0JfQkNCi0JDQorCX0NCisNCisJ
LyoqDQorCSAqIFJldHVybnMgaWYgdGhlIHNwZWNpZmllZCBmaWxlIG5hbWUgaXMgZm9yIGEgamF2
YSBzb3VyY2UgZmlsZS4gQSBuYW1lIGlzDQorCSAqIGNvbnNpZGVyZWQgdG8gYmUgYSBqYXZhIHNv
dXJjZSBmaWxlIGlmIGl0IGVuZHMgaW4gJy5qYXZhJw0KKwkgKiANCisJICogQHBhcmFtIGZpbGVO
YW1lDQorCSAqIEByZXR1cm4gdHJ1ZSBpZiB0aGUgbmFtZSBpcyBmb3IgYSBqYXZhIHNvdXJjZSBm
aWxlLCBmYWxzZSBvdGhlcndpc2UNCisJICovDQorCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc0ph
dmFGaWxlTmFtZShTdHJpbmcgZmlsZU5hbWUpIHsNCisJCXJldHVybiBmaWxlTmFtZS50b0xvd2Vy
Q2FzZSgpLmVuZHNXaXRoKCIuamF2YSIpOyAvLyROT04tTkxTLTEkDQorCX0NCisNCiAJLyoqDQog
CSAqIFJldHVybnMgaWYgdGhlIGdpdmVuIG5hbWUgaXMge0BsaW5rIGphdmEubGFuZy5PYmplY3R9
DQogCSAqIEBwYXJhbSBuYW1lDQpAQCAtMTA2NCwzMSArMTU5MywzMSBAQA0KIAlwdWJsaWMgc3Rh
dGljIGJvb2xlYW4gaXNKYXZhTGFuZ1J1bnRpbWVFeGNlcHRpb24oU3RyaW5nIG5hbWUpIHsNCiAJ
CXJldHVybiBuYW1lICE9IG51bGwgJiYgbmFtZS5lcXVhbHMoSkFWQV9MQU5HX1JVTlRJTUVFWENF
UFRJT04pOw0KIAl9DQotCQ0KKw0KIAlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNOYXRpdmUoaW50
IGFjY2Vzc0ZsYWdzKSB7DQogCQlyZXR1cm4gKGFjY2Vzc0ZsYWdzICYgT3Bjb2Rlcy5BQ0NfTkFU
SVZFKSAhPSAwOw0KIAl9DQotCQ0KKw0KIAlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNQcml2YXRl
KGludCBhY2Nlc3NGbGFncykgew0KIAkJcmV0dXJuIChhY2Nlc3NGbGFncyAmIE9wY29kZXMuQUND
X1BSSVZBVEUpICE9IDA7DQogCX0NCi0JDQorDQogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc1By
b3RlY3RlZChpbnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3MgJiBPcGNv
ZGVzLkFDQ19QUk9URUNURUQpICE9IDA7DQogCX0NCi0JDQorDQogCXB1YmxpYyBzdGF0aWMgYm9v
bGVhbiBpc1B1YmxpYyhpbnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3Mg
JiBPcGNvZGVzLkFDQ19QVUJMSUMpICE9IDA7DQogCX0NCi0JDQorDQogCXB1YmxpYyBzdGF0aWMg
Ym9vbGVhbiBpc1N0YXRpYyhpbnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxh
Z3MgJiBPcGNvZGVzLkFDQ19TVEFUSUMpICE9IDA7DQogCX0NCi0JDQorDQogCXB1YmxpYyBzdGF0
aWMgYm9vbGVhbiBpc1N0cmljdChpbnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNz
RmxhZ3MgJiBPcGNvZGVzLkFDQ19TVFJJQ1QpICE9IDA7DQogCX0NCi0NCisJDQogCXB1YmxpYyBz
dGF0aWMgYm9vbGVhbiBpc1N5bmNocm9uaXplZChpbnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVy
biAoYWNjZXNzRmxhZ3MgJiBPcGNvZGVzLkFDQ19TWU5DSFJPTklaRUQpICE9IDA7DQogCX0NCkBA
IC0xMDk3LDExICsxNjI2LDEwIEBADQogCQlyZXR1cm4gKGFjY2Vzc0ZsYWdzICYgT3Bjb2Rlcy5B
Q0NfU1lOVEhFVElDKSAhPSAwOw0KIAl9DQogDQotDQogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBp
c1RyYW5zaWVudChpbnQgYWNjZXNzRmxhZ3MpIHsNCiAJCXJldHVybiAoYWNjZXNzRmxhZ3MgJiBP
cGNvZGVzLkFDQ19UUkFOU0lFTlQpICE9IDA7DQogCX0NCi0NCisJDQogCXB1YmxpYyBzdGF0aWMg
Ym9vbGVhbiBpc1ZhcmFyZ3MoaW50IGFjY2Vzc0ZsYWdzKSB7DQogCQlyZXR1cm4gKGFjY2Vzc0Zs
YWdzICYgT3Bjb2Rlcy5BQ0NfVkFSQVJHUykgIT0gMDsNCiAJfQ0KQEAgLTExMDksNyArMTYzNyw3
IEBADQogCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc1ZvbGF0aWxlKGludCBhY2Nlc3NGbGFncykg
ew0KIAkJcmV0dXJuIChhY2Nlc3NGbGFncyAmIE9wY29kZXMuQUNDX1ZPTEFUSUxFKSAhPSAwOw0K
IAl9DQotDQorCQ0KIAkvKioNCiAJICogUmV0dXJucyBhIG5ldyBYTUwgZG9jdW1lbnQuDQogCSAq
IA0KQEAgLTEyMTQsNTIxICsxNzQyLDQgQEANCiAJCX0NCiAJCXJldHVybiBudWxsOw0KIAl9DQot
DQotCS8qKg0KLQkgKiBSZXR1cm4gYSBzdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBraW5kIG9m
IHRoZSBnaXZlbiBkZWx0YS4NCi0JICogUmV0dXJucyB7QGxpbmsgI1VOS05PV05fS0lORH0gaWYg
dGhlIGtpbmQgY2Fubm90IGJlIGRldGVybWluZWQuDQotCSAqIA0KLQkgKiBAcGFyYW0gZGVsdGEg
dGhlIGdpdmVuIGRlbHRhDQotCSAqIEByZXR1cm4gYSBzdHJpbmcgdGhhdCByZXByZXNlbnRzIHRo
ZSBraW5kIG9mIHRoZSBnaXZlbiBkZWx0YS4NCi0JICovDQotCXB1YmxpYyBzdGF0aWMgU3RyaW5n
IGdldERlbHRhS2luZE5hbWUoSURlbHRhIGRlbHRhKSB7DQotCQlyZXR1cm4gZ2V0RGVsdGFLaW5k
TmFtZShkZWx0YS5nZXRLaW5kKCkpOw0KLQl9DQotDQotCS8qKg0KLQkgKiBSZXR1cm4gYSBzdHJp
bmcgdGhhdCByZXByZXNlbnRzIHRoZSBnaXZlbiBraW5kLg0KLQkgKiBSZXR1cm5zIHtAbGluayAj
VU5LTk9XTl9LSU5EfSBpZiB0aGUga2luZCBjYW5ub3QgYmUgZGV0ZXJtaW5lZC4NCi0JICogDQot
CSAqIEBwYXJhbSBkZWx0YSB0aGUgZ2l2ZW4ga2luZA0KLQkgKiBAcmV0dXJuIGEgc3RyaW5nIHRo
YXQgcmVwcmVzZW50cyB0aGUgZ2l2ZW4ga2luZC4NCi0JICovDQotCXB1YmxpYyBzdGF0aWMgU3Ry
aW5nIGdldERlbHRhS2luZE5hbWUoaW50IGtpbmQpIHsNCi0JCXN3aXRjaChraW5kKSB7DQotCQkJ
Y2FzZSBJRGVsdGEuQURERUQgOg0KLQkJCQlyZXR1cm4gIkFEREVEIjsgLy8kTk9OLU5MUy0xJA0K
LQkJCWNhc2UgSURlbHRhLkFEREVEX0VYVEVORF9SRVNUUklDVElPTiA6DQotCQkJCXJldHVybiAi
QURERURfRVhURU5EX1JFU1RSSUNUSU9OIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRh
LkFEREVEX0lNUExFTUVOVF9SRVNUUklDVElPTiA6DQotCQkJCXJldHVybiAiQURERURfSU1QTEVN
RU5UX1JFU1RSSUNUSU9OIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLkFEREVEX05P
Tl9WSVNJQkxFIDoNCi0JCQkJcmV0dXJuICJBRERFRF9OT05fVklTSUJMRSI7IC8vJE5PTi1OTFMt
MSQNCi0JCQljYXNlIElEZWx0YS5BRERFRF9OT1RfRVhURU5EX1JFU1RSSUNUSU9OIDoNCi0JCQkJ
cmV0dXJuICJBRERFRF9OT1RfRVhURU5EX1JFU1RSSUNUSU9OIjsgLy8kTk9OLU5MUy0xJA0KLQkJ
CWNhc2UgSURlbHRhLkFEREVEX05PVF9FWFRFTkRfUkVTVFJJQ1RJT05fU1RBVElDIDoNCi0JCQkJ
cmV0dXJuICJBRERFRF9OT1RfRVhURU5EX1JFU1RSSUNUSU9OX1NUQVRJQyI7IC8vJE5PTi1OTFMt
MSQNCi0JCQljYXNlIElEZWx0YS5BRERFRF9OT1RfSU1QTEVNRU5UX1JFU1RSSUNUSU9OIDoNCi0J
CQkJcmV0dXJuICJBRERFRF9OT1RfSU1QTEVNRU5UX1JFU1RSSUNUSU9OIjsgLy8kTk9OLU5MUy0x
JA0KLQkJCWNhc2UgSURlbHRhLkNIQU5HRUQgOg0KLQkJCQlyZXR1cm4gIkNIQU5HRUQiOyAvLyRO
T04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuQ0hBTkdFRF9OT1RfRVhURU5EX1JFU1RSSUNUSU9O
IDoNCi0JCQkJcmV0dXJuICJDSEFOR0VEX05PVF9FWFRFTkRfUkVTVFJJQ1RJT04iOyAvLyROT04t
TkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuQ0hBTkdFRF9OT05fVklTSUJMRSA6DQotCQkJCXJldHVy
biAiQ0hBTkdFRF9OT05fVklTSUJMRSI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5D
SEFOR0VEX1ZJU0lCSUxJVFkgOg0KLQkJCQlyZXR1cm4gIkNIQU5HRURfVklTSUJJTElUWSI7IC8v
JE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5SRU1PVkVEIDoNCi0JCQkJcmV0dXJuICJSRU1P
VkVEIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLlJFTU9WRURfRVhURU5EX1JFU1RS
SUNUSU9OIDoNCi0JCQkJcmV0dXJuICJSRU1PVkVEX0VYVEVORF9SRVNUUklDVElPTiI7IC8vJE5P
Ti1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5SRU1PVkVEX05PTl9WSVNJQkxFIDoNCi0JCQkJcmV0
dXJuICJSRU1PVkVEX05PTl9WSVNJQkxFIjsgLy8kTk9OLU5MUy0xJA0KLQkJfQ0KLQkJcmV0dXJu
IFVOS05PV05fS0lORDsNCi0JfQ0KLQ0KLQkvKioNCi0JICogUmV0dXJuIGEgc3RyaW5nIHRoYXQg
cmVwcmVzZW50cyB0aGUgZmxhZ3Mgb2YgdGhlIGdpdmVuIGRlbHRhLg0KLQkgKiBSZXR1cm5zIHtA
bGluayAjVU5LTk9XTl9GTEFHU30gaWYgdGhlIGZsYWdzIGNhbm5vdCBiZSBkZXRlcm1pbmVkLg0K
LQkgKiANCi0JICogQHBhcmFtIGRlbHRhIHRoZSBnaXZlbiBkZWx0YQ0KLQkgKiBAcmV0dXJuIGEg
c3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZmxhZ3Mgb2YgdGhlIGdpdmVuIGRlbHRhLg0KLQkg
Ki8NCi0JcHVibGljIHN0YXRpYyBTdHJpbmcgZ2V0RGVsdGFGbGFnc05hbWUoSURlbHRhIGRlbHRh
KSB7DQotCQlyZXR1cm4gZ2V0RGVsdGFGbGFnc05hbWUoZGVsdGEuZ2V0RmxhZ3MoKSk7DQotCX0N
Ci0NCi0JLyoqDQotCSAqIFJldHVybiBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIGdpdmVu
IGZsYWdzDQotCSAqIFJldHVybnMge0BsaW5rICNVTktOT1dOX0ZMQUdTfSBpZiB0aGUgZmxhZ3Mg
Y2Fubm90IGJlIGRldGVybWluZWQuDQotCSAqIA0KLQkgKiBAcGFyYW0gZmxhZ3MgdGhlIGdpdmVu
IGRlbHRhJ3MgZmxhZ3MNCi0JICogQHJldHVybiBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhl
IGdpdmVuIGZsYWdzLg0KLQkgKi8NCi0JcHVibGljIHN0YXRpYyBTdHJpbmcgZ2V0RGVsdGFGbGFn
c05hbWUoaW50IGZsYWdzKSB7DQotCQlzd2l0Y2goZmxhZ3MpIHsNCi0JCQljYXNlIElEZWx0YS5B
QlNUUkFDVF9UT19OT05fQUJTVFJBQ1QgOiByZXR1cm4gIkFCU1RSQUNUX1RPX05PTl9BQlNUUkFD
VCI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5BTk5PVEFUSU9OX0RFRkFVTFRfVkFM
VUUgOiByZXR1cm4gIkFOTk9UQVRJT05fREVGQVVMVF9WQUxVRSI7IC8vJE5PTi1OTFMtMSQNCi0J
CQljYXNlIElEZWx0YS5BUElfQ09NUE9ORU5UIDogcmV0dXJuICJBUElfQ09NUE9ORU5UIjsgLy8k
Tk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLkFSUkFZX1RPX1ZBUkFSR1MgOiByZXR1cm4gIkFS
UkFZX1RPX1ZBUkFSR1MiOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuQ0hFQ0tFRF9F
WENFUFRJT04gOiByZXR1cm4gIkNIRUNLRURfRVhDRVBUSU9OIjsgLy8kTk9OLU5MUy0xJA0KLQkJ
CWNhc2UgSURlbHRhLkNMQVNTX0JPVU5EIDogcmV0dXJuICJDTEFTU19CT1VORCI7IC8vJE5PTi1O
TFMtMSQNCi0JCQljYXNlIElEZWx0YS5DTElOSVQgOiByZXR1cm4gIkNMSU5JVCI7IC8vJE5PTi1O
TFMtMSQNCi0JCQljYXNlIElEZWx0YS5DT05TVFJVQ1RPUiA6IHJldHVybiAiQ09OU1RSVUNUT1Ii
OyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuQ09OVFJBQ1RFRF9TVVBFUkNMQVNTX1NF
VCA6IHJldHVybiAiQ09OVFJBQ1RFRF9TVVBFUkNMQVNTX1NFVCI7IC8vJE5PTi1OTFMtMSQNCi0J
CQljYXNlIElEZWx0YS5DT05UUkFDVEVEX1NVUEVSSU5URVJGQUNFU19TRVQgOiByZXR1cm4gIkNP
TlRSQUNURURfU1VQRVJJTlRFUkZBQ0VTX1NFVCI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElE
ZWx0YS5ERUNSRUFTRV9BQ0NFU1MgOiByZXR1cm4gIkRFQ1JFQVNFX0FDQ0VTUyI7IC8vJE5PTi1O
TFMtMSQNCi0JCQljYXNlIElEZWx0YS5FTlVNX0NPTlNUQU5UIDogcmV0dXJuICJFTlVNX0NPTlNU
QU5UIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLkVYUEFOREVEX1NVUEVSQ0xBU1Nf
U0VUIDogcmV0dXJuICJFWFBBTkRFRF9TVVBFUkNMQVNTX1NFVCI7IC8vJE5PTi1OTFMtMSQNCi0J
CQljYXNlIElEZWx0YS5FWFBBTkRFRF9TVVBFUklOVEVSRkFDRVNfU0VUIDogcmV0dXJuICJFWFBB
TkRFRF9TVVBFUklOVEVSRkFDRVNfU0VUIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRh
LkZJRUxEIDogcmV0dXJuICJGSUVMRCI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5G
SUVMRF9NT1ZFRF9VUCA6IHJldHVybiAiRklFTERfTU9WRURfVVAiOyAvLyROT04tTkxTLTEkDQot
CQkJY2FzZSBJRGVsdGEuRklOQUxfVE9fTk9OX0ZJTkFMIDogcmV0dXJuICJGSU5BTF9UT19OT05f
RklOQUwiOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuRklOQUxfVE9fTk9OX0ZJTkFM
X05PTl9TVEFUSUMgOiByZXR1cm4gIkZJTkFMX1RPX05PTl9GSU5BTF9OT05fU1RBVElDIjsgLy8k
Tk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLkZJTkFMX1RPX05PTl9GSU5BTF9TVEFUSUNfQ09O
U1RBTlQgOiByZXR1cm4gIkZJTkFMX1RPX05PTl9GSU5BTF9TVEFUSUNfQ09OU1RBTlQiOyAvLyRO
T04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuRklOQUxfVE9fTk9OX0ZJTkFMX1NUQVRJQ19OT05f
Q09OU1RBTlQgOiByZXR1cm4gIkZJTkFMX1RPX05PTl9GSU5BTF9TVEFUSUNfTk9OX0NPTlNUQU5U
IjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLklOQ1JFQVNFX0FDQ0VTUyA6IHJldHVy
biAiSU5DUkVBU0VfQUNDRVNTIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLklOVEVS
RkFDRV9CT1VORCA6IHJldHVybiAiSU5URVJGQUNFX0JPVU5EIjsgLy8kTk9OLU5MUy0xJA0KLQkJ
CWNhc2UgSURlbHRhLklOVEVSRkFDRV9CT1VORFMgOiByZXR1cm4gIklOVEVSRkFDRV9CT1VORFMi
OyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuTUVUSE9EIDogcmV0dXJuICJNRVRIT0Qi
OyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuTUVUSE9EX01PVkVEX1VQIDogcmV0dXJu
ICJNRVRIT0RfTU9WRURfVVAiOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuTUVUSE9E
X1dJVEhfREVGQVVMVF9WQUxVRSA6IHJldHVybiAiTUVUSE9EX1dJVEhfREVGQVVMVF9WQUxVRSI7
IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5NRVRIT0RfV0lUSE9VVF9ERUZBVUxUX1ZB
TFVFIDogcmV0dXJuICJNRVRIT0RfV0lUSE9VVF9ERUZBVUxUX1ZBTFVFIjsgLy8kTk9OLU5MUy0x
JA0KLQkJCWNhc2UgSURlbHRhLk5BVElWRV9UT19OT05fTkFUSVZFIDogcmV0dXJuICJOQVRJVkVf
VE9fTk9OX05BVElWRSI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5OT05fQUJTVFJB
Q1RfVE9fQUJTVFJBQ1QgOiByZXR1cm4gIk5PTl9BQlNUUkFDVF9UT19BQlNUUkFDVCI7IC8vJE5P
Ti1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5OT05fRklOQUxfVE9fRklOQUwgOiByZXR1cm4gIk5P
Tl9GSU5BTF9UT19GSU5BTCI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5OT05fTkFU
SVZFX1RPX05BVElWRSA6IHJldHVybiAiTk9OX05BVElWRV9UT19OQVRJVkUiOyAvLyROT04tTkxT
LTEkDQotCQkJY2FzZSBJRGVsdGEuTk9OX1NUQVRJQ19UT19TVEFUSUMgOiByZXR1cm4gIk5PTl9T
VEFUSUNfVE9fU1RBVElDIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLk5PTl9TWU5D
SFJPTklaRURfVE9fU1lOQ0hST05JWkVEIDogcmV0dXJuICJOT05fU1lOQ0hST05JWkVEX1RPX1NZ
TkNIUk9OSVpFRCI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5OT05fVFJBTlNJRU5U
X1RPX1RSQU5TSUVOVCA6IHJldHVybiAiTk9OX1RSQU5TSUVOVF9UT19UUkFOU0lFTlQiOyAvLyRO
T04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuU1RBVElDX1RPX05PTl9TVEFUSUMgOiByZXR1cm4g
IlNUQVRJQ19UT19OT05fU1RBVElDIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLlNV
UEVSQ0xBU1MgOiByZXR1cm4gIlNVUEVSQ0xBU1MiOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJ
RGVsdGEuU1lOQ0hST05JWkVEX1RPX05PTl9TWU5DSFJPTklaRUQgOiByZXR1cm4gIlNZTkNIUk9O
SVpFRF9UT19OT05fU1lOQ0hST05JWkVEIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRh
LlRPX0FOTk9UQVRJT04gOiByZXR1cm4gIlRPX0FOTk9UQVRJT04iOyAvLyROT04tTkxTLTEkDQot
CQkJY2FzZSBJRGVsdGEuVE9fQ0xBU1MgOiByZXR1cm4gIlRPX0NMQVNTIjsgLy8kTk9OLU5MUy0x
JA0KLQkJCWNhc2UgSURlbHRhLlRPX0VOVU0gOiByZXR1cm4gIlRPX0VOVU0iOyAvLyROT04tTkxT
LTEkDQotCQkJY2FzZSBJRGVsdGEuVE9fSU5URVJGQUNFIDogcmV0dXJuICJUT19JTlRFUkZBQ0Ui
OyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuVFJBTlNJRU5UX1RPX05PTl9UUkFOU0lF
TlQgOiByZXR1cm4gIlRSQU5TSUVOVF9UT19OT05fVFJBTlNJRU5UIjsgLy8kTk9OLU5MUy0xJA0K
LQkJCWNhc2UgSURlbHRhLlRZUEUgOiByZXR1cm4gIlRZUEUiOyAvLyROT04tTkxTLTEkDQotCQkJ
Y2FzZSBJRGVsdGEuVFlQRV9NRU1CRVIgOiByZXR1cm4gIlRZUEVfTUVNQkVSIjsgLy8kTk9OLU5M
Uy0xJA0KLQkJCWNhc2UgSURlbHRhLlRZUEVfUEFSQU1FVEVSIDogcmV0dXJuICJUWVBFX1BBUkFN
RVRFUiI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5UWVBFX1BBUkFNRVRFUl9OQU1F
IDogcmV0dXJuICJUWVBFX1BBUkFNRVRFUl9OQU1FIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2Ug
SURlbHRhLlRZUEVfUEFSQU1FVEVSUyA6IHJldHVybiAiVFlQRV9QQVJBTUVURVJTIjsgLy8kTk9O
LU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLlVOQ0hFQ0tFRF9FWENFUFRJT04gOiByZXR1cm4gIlVO
Q0hFQ0tFRF9FWENFUFRJT04iOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuVkFMVUUg
OiByZXR1cm4gIlZBTFVFIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2UgSURlbHRhLlZBUkFSR1Nf
VE9fQVJSQVkgOiByZXR1cm4gIlZBUkFSR1NfVE9fQVJSQVkiOyAvLyROT04tTkxTLTEkDQotCQkJ
Y2FzZSBJRGVsdGEuUkVTVFJJQ1RJT05TIDogcmV0dXJuICJSRVNUUklDVElPTlMiOyAvLyROT04t
TkxTLTEkDQotCQl9DQotCQlyZXR1cm4gVU5LTk9XTl9GTEFHUzsNCi0JfQ0KLQ0KLQkvKioNCi0J
ICogUmV0dXJuIGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZWxlbWVudCB0eXBlIG9mIHRo
ZSBnaXZlbiBkZWx0YS4NCi0JICogUmV0dXJucyB7QGxpbmsgI1VOS05PV05fRUxFTUVOVF9UWVBF
fSBpZiB0aGUgZWxlbWVudCB0eXBlIGNhbm5vdCBiZSBkZXRlcm1pbmVkLg0KLQkgKiANCi0JICog
QHBhcmFtIGRlbHRhIHRoZSBnaXZlbiBkZWx0YQ0KLQkgKiBAcmV0dXJuIGEgc3RyaW5nIHRoYXQg
cmVwcmVzZW50cyB0aGUgZWxlbWVudCB0eXBlIG9mIHRoZSBnaXZlbiBkZWx0YS4NCi0JICovDQot
CXB1YmxpYyBzdGF0aWMgU3RyaW5nIGdldERlbHRhRWxlbWVudFR5cGUoSURlbHRhIGRlbHRhKSB7
DQotCQlyZXR1cm4gZ2V0RGVsdGFFbGVtZW50VHlwZShkZWx0YS5nZXRFbGVtZW50VHlwZSgpKTsN
Ci0JfQ0KLQkNCi0JLyoqDQotCSAqIFJldHVybnMgdGhlIHN0cmluZyBvZiB0aGUgJ2tpbmQnIGZy
b20gYSBnaXZlbiBhcGkgcHJvYmxlbSBtYXJrZXINCi0JICogQHBhcmFtIGtpbmQNCi0JICogQHJl
dHVybiB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBraW5kIG9mIGFuIGFwaSBwcm9i
bGVtIG1hcmtlciBvciB7QGxpbmsgI1VOS05PV05fS0lORH0NCi0JICovDQotCXB1YmxpYyBzdGF0
aWMgZmluYWwgU3RyaW5nIGdldE1hcmtlcktpbmQoSU1hcmtlciBtYXJrZXIpIHsNCi0JCVN0cmlu
Z0J1ZmZlciBidWZmZXIgPSBuZXcgU3RyaW5nQnVmZmVyKCk7DQotCQlpbnQgZmxhZ3MgPSBtYXJr
ZXIuZ2V0QXR0cmlidXRlKElBcGlNYXJrZXJDb25zdGFudHMuTUFSS0VSX0FUVFJfRkxBR1MsIC0x
KTsNCi0JCWludCBraW5kcyA9IG1hcmtlci5nZXRBdHRyaWJ1dGUoSUFwaU1hcmtlckNvbnN0YW50
cy5NQVJLRVJfQVRUUl9LSU5ELCAtMSk7DQotCQlpZihraW5kcyAhPSAtMSkgew0KLQkJCVN0cmlu
ZyBraW5kc3RyID0gbnVsbDsNCi0JCQlpZihmbGFncyA9PSAwKSB7DQotCQkJCWtpbmRzdHIgPSBn
ZXRSZWZlcmVuY2VLaW5kKGtpbmRzKTsNCi0JCQl9DQotCQkJZWxzZSB7DQotCQkJCWtpbmRzdHIg
PSBnZXREZWx0YUtpbmROYW1lKGtpbmRzKTsNCi0JCQkJaWYoVU5LTk9XTl9LSU5ELmVxdWFscyhr
aW5kc3RyKSkgew0KLQkJCQkJLy90cnkgdGhlIHJlZiBraW5kczogb3ZlcmxhcA0KLQkJCQkJa2lu
ZHN0ciA9IGdldFJlZmVyZW5jZUtpbmQoa2luZHMpOw0KLQkJCQl9DQotCQkJfQ0KLQkJCWlmKGtp
bmRzdHIgIT0gbnVsbCkgeyANCi0JCQkJYnVmZmVyLmFwcGVuZChraW5kc3RyKTsNCi0JCQl9DQot
CQkJaWYoa2luZHMgIT0gSURlbHRhLkFEREVEX05PVF9FWFRFTkRfUkVTVFJJQ1RJT04gJiYgDQot
CQkJCWtpbmRzICE9IElEZWx0YS5BRERFRF9OT1RfSU1QTEVNRU5UX1JFU1RSSUNUSU9OICYmIA0K
LQkJCQlmbGFncyA+IDApIHsNCi0JCQkJCWJ1ZmZlci5hcHBlbmQoIl8iKS5hcHBlbmQoZ2V0RGVs
dGFGbGFnc05hbWUoZmxhZ3MpKTsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCX0NCi0JCVN0cmlu
ZyB2YWx1ZSA9IGJ1ZmZlci50b1N0cmluZygpOw0KLQkJcmV0dXJuICh2YWx1ZS5sZW5ndGgoKSA9
PSAwID8gVU5LTk9XTl9LSU5EIDogdmFsdWUpOw0KLQl9DQotCQ0KLQkvKioNCi0JICogUmV0dXJu
IGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZ2l2ZW4gZWxlbWVudCB0eXBlDQotCSAqIFJl
dHVybnMge0BsaW5rICNVTktOT1dOX0VMRU1FTlRfVFlQRX0gaWYgdGhlIGVsZW1lbnQgdHlwZSBj
YW5ub3QgYmUgZGV0ZXJtaW5lZC4NCi0JICogDQotCSAqIEBwYXJhbSBlbGVtZW50VHlwZSB0aGUg
Z2l2ZW4gZWxlbWVudCB0eXBlDQotCSAqIEByZXR1cm4gYSBzdHJpbmcgdGhhdCByZXByZXNlbnRz
IHRoZSBnaXZlbiBlbGVtZW50IHR5cGUuDQotCSAqLw0KLQlwdWJsaWMgc3RhdGljIFN0cmluZyBn
ZXREZWx0YUVsZW1lbnRUeXBlKGludCBlbGVtZW50VHlwZSkgew0KLQkJc3dpdGNoKGVsZW1lbnRU
eXBlKSB7DQotCQkJY2FzZSBJRGVsdGEuQU5OT1RBVElPTl9FTEVNRU5UX1RZUEUgOg0KLQkJCQly
ZXR1cm4gIkFOTk9UQVRJT05fRUxFTUVOVF9UWVBFIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2Ug
SURlbHRhLklOVEVSRkFDRV9FTEVNRU5UX1RZUEUgOg0KLQkJCQlyZXR1cm4gIklOVEVSRkFDRV9F
TEVNRU5UX1RZUEUiOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuRU5VTV9FTEVNRU5U
X1RZUEUgOg0KLQkJCQlyZXR1cm4gIkVOVU1fRUxFTUVOVF9UWVBFIjsgLy8kTk9OLU5MUy0xJA0K
LQkJCWNhc2UgSURlbHRhLkFQSV9DT01QT05FTlRfRUxFTUVOVF9UWVBFIDoNCi0JCQkJcmV0dXJu
ICJBUElfQ09NUE9ORU5UX0VMRU1FTlRfVFlQRSI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElE
ZWx0YS5BUElfUFJPRklMRV9FTEVNRU5UX1RZUEUgOg0KLQkJCQlyZXR1cm4gIkFQSV9QUk9GSUxF
X0VMRU1FTlRfVFlQRSI7IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5DT05TVFJVQ1RP
Ul9FTEVNRU5UX1RZUEUgOg0KLQkJCQlyZXR1cm4gIkNPTlNUUlVDVE9SX0VMRU1FTlRfVFlQRSI7
IC8vJE5PTi1OTFMtMSQNCi0JCQljYXNlIElEZWx0YS5NRU1CRVJfRUxFTUVOVF9UWVBFIDoNCi0J
CQkJcmV0dXJuICJNRU1CRVJfRUxFTUVOVF9UWVBFIjsgLy8kTk9OLU5MUy0xJA0KLQkJCWNhc2Ug
SURlbHRhLk1FVEhPRF9FTEVNRU5UX1RZUEUgOg0KLQkJCQlyZXR1cm4gIk1FVEhPRF9FTEVNRU5U
X1RZUEUiOyAvLyROT04tTkxTLTEkDQotCQkJY2FzZSBJRGVsdGEuRklFTERfRUxFTUVOVF9UWVBF
IDoNCi0JCQkJcmV0dXJuICJGSUVMRF9FTEVNRU5UX1RZUEUiOyAvLyROT04tTkxTLTEkDQotCQkJ
Y2FzZSBJRGVsdGEuQ0xBU1NfRUxFTUVOVF9UWVBFIDoNCi0JCQkJcmV0dXJuICJDTEFTU19FTEVN
RU5UX1RZUEUiOyAvLyROT04tTkxTLTEkDQotCQl9DQotCQlyZXR1cm4gVU5LTk9XTl9FTEVNRU5U
X1RZUEU7DQotCX0NCi0NCi0JLyoqDQotCSAqIFJldHVybnMgdGhlIHN0cmluZyByZXByZXNlbnRh
dGlvbiBmb3IgdGhlIGdpdmVuIHJlZmVyZW5jZSBraW5kDQotCSAqIEBwYXJhbSBraW5kDQotCSAq
IEByZXR1cm4gdGhlIHN0cmluZyBmb3IgdGhlIHJlZmVyZW5jZSBraW5kDQotCSAqLw0KLQlwdWJs
aWMgc3RhdGljIGZpbmFsIFN0cmluZyBnZXRSZWZlcmVuY2VLaW5kKGludCBraW5kKSB7DQotCQlz
d2l0Y2goa2luZCkgew0KLQkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9FWFRFTkRTOiB7
DQotCQkJCXJldHVybiAiRVhURU5EUyI7IC8vJE5PTi1OTFMtMSQNCi0JCQl9DQotCQkJY2FzZSBS
ZWZlcmVuY2VNb2RpZmllcnMuUkVGX0lNUExFTUVOVFM6IHsNCi0JCQkJcmV0dXJuICJJTVBMRU1F
TlRTIjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5S
RUZfU1BFQ0lBTE1FVEhPRDogew0KLQkJCQlyZXR1cm4gIklOVk9LRURfU1BFQ0lBTCI7IC8vJE5P
Ti1OTFMtMSQNCi0JCQl9DQotCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX1NUQVRJQ01F
VEhPRDogew0KLQkJCQlyZXR1cm4gIklOVk9LRURfU1RBVElDIjsgLy8kTk9OLU5MUy0xJA0KLQkJ
CX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfUFVURklFTEQ6IHsNCi0JCQkJcmV0
dXJuICJQVVRfRklFTEQiOyAvLyROT04tTkxTLTEkDQotCQkJfQ0KLQkJCWNhc2UgUmVmZXJlbmNl
TW9kaWZpZXJzLlJFRl9QVVRTVEFUSUM6IHsNCi0JCQkJcmV0dXJuICJQVVRfU1RBVElDX0ZJRUxE
IjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZf
RklFTERERUNMOiB7DQotCQkJCXJldHVybiAiREVDQUxSRURfRklFTEQiOyAvLyROT04tTkxTLTEk
DQotCQkJfQ0KLQkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9QQVJBTUVURVJJWkVEX1RZ
UEVERUNMOiB7DQotCQkJCXJldHVybiAiREVDTEFSRURfUEFSQU1FVEVSSVpFRF9UWVBFIjsgLy8k
Tk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfUEFSQU1F
VEVSSVpFRF9GSUVMRERFQ0w6IHsNCi0JCQkJcmV0dXJuICJERUNMQVJFRF9QQVJBTUVURVJJWkVE
X0ZJRUxEIjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVy
cy5SRUZfUEFSQU1FVEVSSVpFRF9NRVRIT0RERUNMOiB7DQotCQkJCXJldHVybiAiREVDTEFSRURf
UEFSQU1FVEVSSVpFRF9NRVRIT0QiOyAvLyROT04tTkxTLTEkDQotCQkJfQ0KLQkJCWNhc2UgUmVm
ZXJlbmNlTW9kaWZpZXJzLlJFRl9QQVJBTUVURVI6IHsNCi0JCQkJcmV0dXJuICJQQVJBTUVURVIi
OyAvLyROT04tTkxTLTEkDQotCQkJfQ0KLQkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9M
T0NBTFZBUklBQkxFREVDTDogew0KLQkJCQlyZXR1cm4gIkxPQ0FMX1ZBUl9ERUNMQVJFRCI7IC8v
JE5PTi1OTFMtMSQNCi0JCQl9DQotCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX1BBUkFN
RVRFUklaRURfVkFSSUFCTEU6IHsNCi0JCQkJcmV0dXJuICJERUNMQVJFRF9QQVJBTUVURVJJWkVE
X1ZBUklBQkxFIjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlm
aWVycy5SRUZfVEhST1dTOiB7DQotCQkJCXJldHVybiAiVEhST1dTIjsgLy8kTk9OLU5MUy0xJA0K
LQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfQ0hFQ0tDQVNUOiB7DQotCQkJ
CXJldHVybiAiQ0FTVFMiOyAvLyROT04tTkxTLTEkDQotCQkJfQ0KLQkJCWNhc2UgUmVmZXJlbmNl
TW9kaWZpZXJzLlJFRl9BUlJBWUFMTE9DOiB7DQotCQkJCXJldHVybiAiQUxMT0NBVEVTX0FSUkFZ
IjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZf
Q0FUQ0hFWENFUFRJT046IHsNCi0JCQkJcmV0dXJuICJDQVRDSEVTX0VYQ0VQVElPTiI7IC8vJE5P
Ti1OTFMtMSQNCi0JCQl9DQotCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX0dFVEZJRUxE
OiB7DQotCQkJCXJldHVybiAiR0VUU19GSUVMRCI7IC8vJE5PTi1OTFMtMSQNCi0JCQl9DQotCQkJ
Y2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX0dFVFNUQVRJQzogew0KLQkJCQlyZXR1cm4gIkdF
VFNfU1RBVElDX0ZJRUxEIjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5j
ZU1vZGlmaWVycy5SRUZfSU5TVEFOQ0VPRjogew0KLQkJCQlyZXR1cm4gIklOU1RBTkNFT0YiOyAv
LyROT04tTkxTLTEkDQotCQkJfQ0KLQkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9JTlRF
UkZBQ0VNRVRIT0Q6IHsNCi0JCQkJcmV0dXJuICJJTlRFUkZBQ0VfTUVUSE9EIjsgLy8kTk9OLU5M
Uy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfQ09OU1RSVUNUT1JN
RVRIT0Q6IHsNCi0JCQkJcmV0dXJuICJDT05TVFJVQ1RPUl9NRVRIT0QiOyAvLyROT04tTkxTLTEk
DQotCQkJfQ0KLQkJCWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9MT0NBTFZBUklBQkxFOiB7
DQotCQkJCXJldHVybiAiTE9DQUxfVkFSSUFCTEUiOyAvLyROT04tTkxTLTEkDQotCQkJfQ0KLQkJ
CWNhc2UgUmVmZXJlbmNlTW9kaWZpZXJzLlJFRl9QQVNTRURQQVJBTUVURVI6IHsNCi0JCQkJcmV0
dXJuICJQQVNTRURfUEFSQU1FVEVSIjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJl
ZmVyZW5jZU1vZGlmaWVycy5SRUZfUkVUVVJOVFlQRTogew0KLQkJCQlyZXR1cm4gIlJFVFVSTl9U
WVBFIjsgLy8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5S
RUZfVklSVFVBTE1FVEhPRDogew0KLQkJCQlyZXR1cm4gIlZJUlRVQUxfTUVUSE9EIjsgLy8kTk9O
LU5MUy0xJA0KLQkJCX0NCi0JCQljYXNlIFJlZmVyZW5jZU1vZGlmaWVycy5SRUZfQ09OU1RBTlRQ
T09MOiB7DQotCQkJCXJldHVybiAiQ09OU1RBTlRfUE9PTCI7IC8vJE5PTi1OTFMtMSQNCi0JCQl9
DQotCQkJY2FzZSBSZWZlcmVuY2VNb2RpZmllcnMuUkVGX0lOU1RBTlRJQVRFOiB7DQotCQkJCXJl
dHVybiAiSU5TVEFOVElBVElPTiI7IC8vJE5PTi1OTFMtMSQNCi0JCQl9DQotCQkJY2FzZSBSZWZl
cmVuY2VNb2RpZmllcnMuUkVGX09WRVJSSURFIDogew0KLQkJCQlyZXR1cm4gIk9WRVJSSURFIjsg
Ly8kTk9OLU5MUy0xJA0KLQkJCX0NCi0JCX0NCi0JCXJldHVybiBudWxsOw0KLQl9DQotCQ0KLQkv
KioNCi0JICogUmV0dXJucyB0aGUgcHJlZmVyZW5jZSBrZXkgZm9yIHRoZSBnaXZlbiBlbGVtZW50
IHR5cGUsIHRoZSBnaXZlbiBraW5kIGFuZCB0aGUgZ2l2ZW4gZmxhZ3MuDQotCSAqIA0KLQkgKiBA
cGFyYW0gZWxlbWVudFR5cGUgdGhlIGdpdmVuIGVsZW1lbnQgdHlwZSAocmV0cmlldmVkIHVzaW5n
IHtAbGluayBJRGVsdGEjZ2V0RWxlbWVudFR5cGUoKX0NCi0JICogQHBhcmFtIGtpbmQgdGhlIGdp
dmVuIGtpbmQgKHJldHJpZXZlZCB1c2luZyB7QGxpbmsgSURlbHRhI2dldEtpbmQoKX0NCi0JICog
QHBhcmFtIGZsYWdzIHRoZSBnaXZlbiBmbGFncyAocmV0cmlldmVkIHVzaW5nIHtAbGluayBJRGVs
dGEjZ2V0RmxhZ3MoKX0NCi0JICogQHJldHVybiB0aGUgcHJlZmVyZW5jZSBrZXkgZm9yIHRoZSBn
aXZlbiBlbGVtZW50IHR5cGUsIHRoZSBnaXZlbiBraW5kIGFuZCB0aGUgZ2l2ZW4gZmxhZ3MuDQot
CSAqLw0KLQlwdWJsaWMgc3RhdGljIFN0cmluZyBnZXREZWx0YVByZWZlcmVyZW5jZUtleShpbnQg
ZWxlbWVudFR5cGUsIGludCBraW5kLCBpbnQgZmxhZ3MpIHsNCi0JCVN0cmluZ0J1ZmZlciBidWZm
ZXIgPSBuZXcgU3RyaW5nQnVmZmVyKFV0aWwuZ2V0RGVsdGFFbGVtZW50VHlwZShlbGVtZW50VHlw
ZSkpOw0KLQkJYnVmZmVyLmFwcGVuZCgnXycpLmFwcGVuZChVdGlsLmdldERlbHRhS2luZE5hbWUo
a2luZCkpOw0KLQkJaWYgKGZsYWdzICE9IC0xKSBidWZmZXIuYXBwZW5kKCdfJykuYXBwZW5kKFV0
aWwuZ2V0RGVsdGFGbGFnc05hbWUoZmxhZ3MpKTsNCi0JCXJldHVybiBTdHJpbmcudmFsdWVPZihi
dWZmZXIpOw0KLQl9DQotCQ0KLQlwdWJsaWMgc3RhdGljIElNZW1iZXIgZ2V0SU1lbWJlcihJRGVs
dGEgZGVsdGEsIElKYXZhUHJvamVjdCBqYXZhUHJvamVjdCkgew0KLQkJSVR5cGUgdHlwZSA9IG51
bGw7DQotCQl0cnkgew0KLQkJCXR5cGUgPSBqYXZhUHJvamVjdC5maW5kVHlwZShkZWx0YS5nZXRU
eXBlTmFtZSgpKTsNCi0JCX0gY2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7DQotCQkJLy8g
aWdub3JlDQotCQl9DQotCQlpZiAodHlwZSA9PSBudWxsKSByZXR1cm4gbnVsbDsNCi0JCVN0cmlu
ZyBrZXkgPSBkZWx0YS5nZXRLZXkoKTsNCi0JCXN3aXRjaChkZWx0YS5nZXRFbGVtZW50VHlwZSgp
KSB7DQotCQkJY2FzZSBJRGVsdGEuRklFTERfRUxFTUVOVF9UWVBFIDogew0KLQkJCQkJSUZpZWxk
IGZpZWxkID0gdHlwZS5nZXRGaWVsZChrZXkpOw0KLQkJCQkJaWYgKGZpZWxkLmV4aXN0cygpKSB7
DQotCQkJCQkJcmV0dXJuIGZpZWxkOw0KLQkJCQkJfQ0KLQkJCQl9DQotCQkJCWJyZWFrOw0KLQkJ
CWNhc2UgSURlbHRhLkNMQVNTX0VMRU1FTlRfVFlQRSA6DQotCQkJY2FzZSBJRGVsdGEuQU5OT1RB
VElPTl9FTEVNRU5UX1RZUEUgOg0KLQkJCWNhc2UgSURlbHRhLklOVEVSRkFDRV9FTEVNRU5UX1RZ
UEUgOg0KLQkJCWNhc2UgSURlbHRhLkVOVU1fRUxFTUVOVF9UWVBFIDoNCi0JCQljYXNlIElEZWx0
YS5NRU1CRVJfRUxFTUVOVF9UWVBFIDoNCi0JCQkJLy8gd2UgcmVwb3J0IHRoZSBtYXJrZXIgb24g
dGhlIHR5cGUNCi0JCQkJc3dpdGNoKGRlbHRhLmdldEtpbmQoKSkgew0KLQkJCQkJY2FzZSBJRGVs
dGEuQURERUQgOg0KLQkJCQkJY2FzZSBJRGVsdGEuQURERURfRVhURU5EX1JFU1RSSUNUSU9OIDoN
Ci0JCQkJCWNhc2UgSURlbHRhLkFEREVEX0lNUExFTUVOVF9SRVNUUklDVElPTiA6DQotCQkJCQlj
YXNlIElEZWx0YS5BRERFRF9OT05fVklTSUJMRSA6DQotCQkJCQljYXNlIElEZWx0YS5BRERFRF9O
T1RfRVhURU5EX1JFU1RSSUNUSU9OIDoNCi0JCQkJCWNhc2UgSURlbHRhLkFEREVEX05PVF9FWFRF
TkRfUkVTVFJJQ1RJT05fU1RBVElDIDoNCi0JCQkJCWNhc2UgSURlbHRhLkFEREVEX05PVF9JTVBM
RU1FTlRfUkVTVFJJQ1RJT04gOg0KLQkJCQkJCXN3aXRjaChkZWx0YS5nZXRGbGFncygpKSB7DQot
CQkJCQkJCWNhc2UgSURlbHRhLkZJRUxEIDoNCi0JCQkJCQkJCUlGaWVsZCBmaWVsZCA9IHR5cGUu
Z2V0RmllbGQoa2V5KTsNCi0JCQkJCQkJCWlmIChmaWVsZC5leGlzdHMoKSkgew0KLQkJCQkJCQkJ
CXJldHVybiBmaWVsZDsNCi0JCQkJCQkJCX0NCi0JCQkJCQkJCWJyZWFrOw0KLQkJCQkJCQljYXNl
IElEZWx0YS5NRVRIT0QgOg0KLQkJCQkJCQljYXNlIElEZWx0YS5DT05TVFJVQ1RPUiA6DQotCQkJ
CQkJCQlpbnQgaW5kZXhPZiA9IGtleS5pbmRleE9mKCcoJyk7DQotCQkJCQkJCQlpZiAoaW5kZXhP
ZiA9PSAtMSkgew0KLQkJCQkJCQkJCXJldHVybiBudWxsOw0KLQkJCQkJCQkJfQ0KLQkJCQkJCQkJ
aW50IGluZGV4ID0gaW5kZXhPZjsNCi0JCQkJCQkJCVN0cmluZyBzZWxlY3RvciA9IGtleS5zdWJz
dHJpbmcoMCwgaW5kZXgpOw0KLQkJCQkJCQkJU3RyaW5nIGRlc2NyaXB0b3IgPSBrZXkuc3Vic3Ry
aW5nKGluZGV4LCBrZXkubGVuZ3RoKCkpOw0KLQkJCQkJCQkJSU1ldGhvZCBtZXRob2QgPSBudWxs
Ow0KLQkJCQkJCQkJdHJ5IHsNCi0JCQkJCQkJCQltZXRob2QgPSB0eXBlLmdldE1ldGhvZChzZWxl
Y3RvciwgU2lnbmF0dXJlLmdldFBhcmFtZXRlclR5cGVzKFV0aWwuY29udmVydERlc2NyaXB0b3Io
ZGVzY3JpcHRvcikpKTsNCi0JCQkJCQkJCX0gY2F0Y2ggKElsbGVnYWxBcmd1bWVudEV4Y2VwdGlv
biBlKSB7DQotCQkJCQkJCQkJZS5wcmludFN0YWNrVHJhY2UoKTsNCi0JCQkJCQkJCX0NCi0JCQkJ
CQkJCWlmIChtZXRob2QgPT0gbnVsbCkgew0KLQkJCQkJCQkJCXJldHVybiBudWxsOw0KLQkJCQkJ
CQkJfQ0KLQkJCQkJCQkJaWYgKG1ldGhvZC5leGlzdHMoKSkgew0KLQkJCQkJCQkJCXJldHVybiBt
ZXRob2Q7DQotCQkJCQkJCQl9DQotCQkJCQkJCQlicmVhazsNCi0JCQkJCQkJY2FzZSBJRGVsdGEu
VFlQRV9NRU1CRVIgOg0KLQkJCQkJCQkJSVR5cGUgdHlwZTIgPSB0eXBlLmdldFR5cGUoa2V5KTsN
Ci0JCQkJCQkJCWlmICh0eXBlMi5leGlzdHMoKSkgew0KLQkJCQkJCQkJCXJldHVybiB0eXBlMjsN
Ci0JCQkJCQkJCX0NCi0JCQkJCQl9DQotCQkJCX0NCi0JCQkJcmV0dXJuIHR5cGU7DQotCQkJY2Fz
ZSBJRGVsdGEuTUVUSE9EX0VMRU1FTlRfVFlQRSA6DQotCQkJY2FzZSBJRGVsdGEuQ09OU1RSVUNU
T1JfRUxFTUVOVF9UWVBFIDogew0KLQkJCQkJaW50IGluZGV4T2YgPSBrZXkuaW5kZXhPZignKCcp
Ow0KLQkJCQkJaWYgKGluZGV4T2YgPT0gLTEpIHsNCi0JCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJ
CX0NCi0JCQkJCWludCBpbmRleCA9IGluZGV4T2Y7DQotCQkJCQlTdHJpbmcgc2VsZWN0b3IgPSBr
ZXkuc3Vic3RyaW5nKDAsIGluZGV4KTsNCi0JCQkJCVN0cmluZyBkZXNjcmlwdG9yID0ga2V5LnN1
YnN0cmluZyhpbmRleCwga2V5Lmxlbmd0aCgpKTsNCi0JCQkJCUlNZXRob2QgbWV0aG9kID0gbnVs
bDsNCi0JCQkJCXRyeSB7DQotCQkJCQkJbWV0aG9kID0gdHlwZS5nZXRNZXRob2Qoc2VsZWN0b3Is
IFNpZ25hdHVyZS5nZXRQYXJhbWV0ZXJUeXBlcyhVdGlsLmNvbnZlcnREZXNjcmlwdG9yKGRlc2Ny
aXB0b3IpKSk7DQotCQkJCQl9IGNhdGNoIChJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gZSkgew0K
LQkJCQkJCWUucHJpbnRTdGFja1RyYWNlKCk7DQotCQkJCQl9DQotCQkJCQlpZiAobWV0aG9kID09
IG51bGwpIHsNCi0JCQkJCQlyZXR1cm4gbnVsbDsNCi0JCQkJCX0NCi0JCQkJCWlmIChtZXRob2Qu
ZXhpc3RzKCkpIHsNCi0JCQkJCQlyZXR1cm4gbWV0aG9kOw0KLQkJCQkJfQ0KLQ0KLQkJCQkJYnJl
YWs7DQotCQkJCX0NCi0JCX0NCi0JCXJldHVybiBudWxsOw0KLQl9DQotCQ0KLQkvKioNCi0JICog
UmV0dXJucyB0aGUgbmFtZSB0byBkaXNwbGF5IGZvciBhbiB7QGxpbmsgSUFwaVByb2JsZW1GaWx0
ZXJ9Lg0KLQkgKiBVc2VkIHByaW1hcmlseSBpbiBVSSBjb250ZXh0IGZvciBsYWJlbCBwcm92aWRl
cnMNCi0JICogQHBhcmFtIGZpbHRlcg0KLQkgKiBAcmV0dXJuIGEgZm9ybWF0dGVkIGZpbHRlciBu
YW1lIG9yIG51bGwgaWYgdGhlIHR5cGUgb2YgdGhlIGZpbHRlciBpcyB1bmtub3duDQotCSAqLw0K
LQlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBnZXRGb3JtYXR0ZWRGaWx0ZXJOYW1lKElBcGlQ
cm9ibGVtRmlsdGVyIGZpbHRlcikgew0KLQkJSUVsZW1lbnREZXNjcmlwdG9yIGRlc2MgPSBmaWx0
ZXIuZ2V0RWxlbWVudCgpOw0KLQkJc3dpdGNoKGRlc2MuZ2V0RWxlbWVudFR5cGUoKSkgew0KLQkJ
CWNhc2UgSUVsZW1lbnREZXNjcmlwdG9yLlRfUEFDS0FHRTogew0KLQkJCQlyZXR1cm4gKChJUGFj
a2FnZURlc2NyaXB0b3IpZGVzYykuZ2V0TmFtZSgpOw0KLQkJCX0NCi0JCQljYXNlIElFbGVtZW50
RGVzY3JpcHRvci5UX1JFRkVSRU5DRV9UWVBFOiB7DQotCQkJCXJldHVybiAoKElSZWZlcmVuY2VU
eXBlRGVzY3JpcHRvcilkZXNjKS5nZXROYW1lKCk7DQotCQkJfQ0KLQkJCWNhc2UgSUVsZW1lbnRE
ZXNjcmlwdG9yLlRfTUVUSE9EOiB7DQotCQkJCUlNZXRob2REZXNjcmlwdG9yIG1ldGhvZCA9IChJ
TWV0aG9kRGVzY3JpcHRvcikgZGVzYzsNCi0JCQkJcmV0dXJuIFNpZ25hdHVyZS50b1N0cmluZyht
ZXRob2QuZ2V0U2lnbmF0dXJlKCksIG1ldGhvZC5nZXROYW1lKCksIG51bGwsIGZhbHNlLCBmYWxz
ZSk7DQotCQkJfQ0KLQkJCWNhc2UgSUVsZW1lbnREZXNjcmlwdG9yLlRfRklFTEQ6IHsNCi0JCQkJ
cmV0dXJuICgoSUZpZWxkRGVzY3JpcHRvcikgZGVzYykuZ2V0TmFtZSgpOw0KLQkJCX0NCi0JCX0N
Ci0JCXJldHVybiBudWxsOw0KLQl9DQotCQ0KLQkvKioNCi0JICogUmV0dXJucyB0aGUgbnVtYmVy
IG9mIGZyYWdtZW50cyBmb3IgdGhlIGdpdmVuIHZlcnNpb24gdmFsdWUsIC0xIGlmIHRoZSBmb3Jt
YXQgaXMgdW5rbm93bi4NCi0JICogVGhlIHZlcnNpb24gaXMgZm9ybWVkIGxpa2U6IFtvcHRpb25h
bCBwbHVnaW4gbmFtZV0gbWFqb3IubWlub3IubWljcm8ucXVhbGlmaWVyLg0KLQkgKiANCi0JICog
QHBhcmFtIHZlcnNpb24gdGhlIGdpdmVuIHZlcnNpb24gdmFsdWUNCi0JICogQHJldHVybiB0aGUg
bnVtYmVyIG9mIGZyYWdtZW50cyBmb3IgdGhlIGdpdmVuIHZlcnNpb24gdmFsdWUgb3IgLTEgaWYg
dGhlIGZvcm1hdCBpcyB1bmtub3duDQotCSAqIEB0aHJvd3MgSWxsZWdhbEFyZ3VtZW50RXhjZXB0
aW9uIGlmIHZlcnNpb24gaXMgbnVsbA0KLQkgKi8NCi0JcHVibGljIHN0YXRpYyBmaW5hbCBpbnQg
Z2V0RnJhZ21lbnROdW1iZXIoU3RyaW5nIHZlcnNpb24pIHsNCi0JCWlmICh2ZXJzaW9uID09IG51
bGwpIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oIlRoZSBnaXZlbiB2ZXJzaW9u
IHNob3VsZCBub3QgYmUgbnVsbCIpOyAvLyROT04tTkxTLTEkDQotCQlpbnQgaW5kZXggPSB2ZXJz
aW9uLmluZGV4T2YoJyAnKTsNCi0JCWNoYXJbXSBjaGFyQXJyYXkgPSB2ZXJzaW9uLnRvQ2hhckFy
cmF5KCk7DQotCQlpbnQgbGVuZ3RoID0gY2hhckFycmF5Lmxlbmd0aDsNCi0JCWlmIChpbmRleCAr
IDEgPj0gbGVuZ3RoKSB7DQotCQkJcmV0dXJuIC0xOw0KLQkJfQ0KLQkJaW50IGNvdW50ZXIgPSAx
Ow0KLQkJZm9yIChpbnQgaSA9IGluZGV4ICsgMTsgaSA8IGxlbmd0aDsgaSsrKSB7DQotCQkJc3dp
dGNoKGNoYXJBcnJheVtpXSkgew0KLQkJCQljYXNlICcwJyA6DQotCQkJCWNhc2UgJzEnIDoNCi0J
CQkJY2FzZSAnMicgOg0KLQkJCQljYXNlICczJyA6DQotCQkJCWNhc2UgJzQnIDoNCi0JCQkJY2Fz
ZSAnNScgOg0KLQkJCQljYXNlICc2JyA6DQotCQkJCWNhc2UgJzcnIDoNCi0JCQkJY2FzZSAnOCcg
Og0KLQkJCQljYXNlICc5JyA6DQotCQkJCQljb250aW51ZTsNCi0JCQkJY2FzZSAnLicgOg0KLQkJ
CQkJY291bnRlcisrOw0KLQkJCQkJYnJlYWs7DQotCQkJCWRlZmF1bHQgOg0KLQkJCQkJcmV0dXJu
IC0xOw0KLQkJCX0NCi0JCX0NCi0JCXJldHVybiBjb3VudGVyOw0KLQl9DQotCQ0KLQlwdWJsaWMg
c3RhdGljIGZpbmFsIGJvb2xlYW4gaXNHcmVhdGhlclZlcnNpb24oU3RyaW5nIHZlcnNpb25Ub0Jl
Q2hlY2tlZCwgU3RyaW5nIHJlZmVyZW5jZVZlcnNpb24pIHsNCi0JCVNpbmNlVGFnVmVyc2lvbiBz
aW5jZVRhZ1ZlcnNpb24xID0gbnVsbDsNCi0JCVNpbmNlVGFnVmVyc2lvbiBzaW5jZVRhZ1ZlcnNp
b24yID0gbnVsbDsNCi0JCXRyeSB7DQotCQkJc2luY2VUYWdWZXJzaW9uMSA9IG5ldyBTaW5jZVRh
Z1ZlcnNpb24odmVyc2lvblRvQmVDaGVja2VkKTsNCi0JCQlzaW5jZVRhZ1ZlcnNpb24yID0gbmV3
IFNpbmNlVGFnVmVyc2lvbihyZWZlcmVuY2VWZXJzaW9uKTsNCi0JCX0gY2F0Y2ggKElsbGVnYWxB
cmd1bWVudEV4Y2VwdGlvbiBlKSB7DQotCQkJLy8gV2UgY2Fubm90IGNvbXBhcmUgdGhlIHR3byB2
ZXJzaW9ucyBhcyB0aGVpciBmb3JtYXQgaXMgdW5rbm93bg0KLQkJCS8vIFRPRE8gKG9saXZpZXIp
IHNob3VsZCB3ZSByZXBvcnQgdGhlc2UgYXMgbWFsZm9ybWVkIHRhZ3M/DQotCQkJcmV0dXJuIGZh
bHNlOw0KLQkJfQ0KLQkJVmVyc2lvbiB2ZXJzaW9uMSA9IHNpbmNlVGFnVmVyc2lvbjEuZ2V0VmVy
c2lvbigpOw0KLQkJVmVyc2lvbiB2ZXJzaW9uMiA9IHNpbmNlVGFnVmVyc2lvbjIuZ2V0VmVyc2lv
bigpOw0KLQkJaWYgKHZlcnNpb24xLmdldE1ham9yKCkgPiB2ZXJzaW9uMi5nZXRNYWpvcigpKSB7
DQotCQkJcmV0dXJuIHRydWU7DQotCQl9DQotCQlpZiAodmVyc2lvbjEuZ2V0TWlub3IoKSA+IHZl
cnNpb24yLmdldE1pbm9yKCkpIHsNCi0JCQlyZXR1cm4gdHJ1ZTsNCi0JCX0NCi0JCWlmICh2ZXJz
aW9uMS5nZXRNaWNybygpID4gdmVyc2lvbjIuZ2V0TWljcm8oKSkgew0KLQkJCXJldHVybiB0cnVl
Ow0KLQkJfQ0KLQkJU3RyaW5nIHF1YWxpZmllcjEgPSB2ZXJzaW9uMS5nZXRRdWFsaWZpZXIoKTsN
Ci0JCVN0cmluZyBxdWFsaWZpZXIyID0gdmVyc2lvbjIuZ2V0UXVhbGlmaWVyKCk7DQotCQlpZiAo
cXVhbGlmaWVyMSA9PSBudWxsKSB7DQotCQkJcmV0dXJuIGZhbHNlOw0KLQkJfSBlbHNlIGlmIChx
dWFsaWZpZXIyID09IG51bGwpIHsNCi0JCQlyZXR1cm4gdHJ1ZTsNCi0JCX0gZWxzZSB7DQotCQkJ
cmV0dXJuIHF1YWxpZmllcjEuY29tcGFyZVRvKHF1YWxpZmllcjIpID4gMDsNCi0JCX0NCi0JfQ0K
LQ0KLQlwdWJsaWMgc3RhdGljIElSZXNvdXJjZSBnZXRNYW5pZmVzdEZpbGUoSVByb2plY3QgY3Vy
cmVudFByb2plY3QpIHsNCi0JCXJldHVybiBjdXJyZW50UHJvamVjdC5maW5kTWVtYmVyKCJNRVRB
LUlORi9NQU5JRkVTVC5NRiIpOyAvLyROT04tTkxTLTEkDQotCX0NCiB9DQpJbmRleDogc3JjL29y
Zy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQXBpU2V0dGluZ3NYbWxWaXNpdG9yLmph
dmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL3BkZS1pbmN1YmF0b3Iv
YXBpLXRvb2xpbmcvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzL3NyYy9vcmcvZWNs
aXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL0FwaVNldHRpbmdzWG1sVmlzaXRvci5qYXZhLHYN
CnJldHJpZXZpbmcgcmV2aXNpb24gMS4zDQpkaWZmIC11IC1yMS4zIEFwaVNldHRpbmdzWG1sVmlz
aXRvci5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQXBp
U2V0dGluZ3NYbWxWaXNpdG9yLmphdmEJNiBEZWMgMjAwNyAwMzozMDozNiAtMDAwMAkxLjMNCisr
KyBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9pbnRlcm5hbC9BcGlTZXR0aW5nc1htbFZp
c2l0b3IuamF2YQkyOSBKYW4gMjAwOCAxNzowMzo1NCAtMDAwMA0KQEAgLTQxLDI2ICs0MSwyMSBA
QA0KIAkgKiBWaXNpYmlsaXR5IGF0dHJpYnV0ZSB2YWx1ZXMuDQogCSAqLw0KIAlwdWJsaWMgc3Rh
dGljIGZpbmFsIFN0cmluZyBWQUxVRV9BUEkgPSAiQVBJIjsgLy8kTk9OLU5MUy0xJA0KKwlwdWJs
aWMgc3RhdGljIGZpbmFsIFN0cmluZyBWQUxVRV9GQUxTRSA9ICJmYWxzZSI7IC8vJE5PTi1OTFMt
MSQNCiAJcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVkFMVUVfUFJJVkFURSA9ICJwcml2YXRl
IjsgLy8kTk9OLU5MUy0xJA0KIAlwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBWQUxVRV9QUklW
QVRFX1BFUk1JU1NBQkxFPSAicHJpdmF0ZV9wZXJtaXNzYWJsZSI7IC8vJE5PTi1OTFMtMSQNCiAJ
cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVkFMVUVfU1BJID0gIlNQSSI7IC8vJE5PTi1OTFMt
MSQNCi0JcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgVkFMVUVfRkFMU0UgPSAiZmFsc2UiOyAv
LyROT04tTkxTLTEkDQogCXB1YmxpYyBzdGF0aWMgZmluYWwgU3RyaW5nIFZBTFVFX1RSVUUgPSAi
dHJ1ZSI7IC8vJE5PTi1OTFMtMSQNCiAJDQogCS8qKg0KLQkgKiBYTUwgZG9jIGJlaW5nIGdlbmVy
YXRlZA0KLQkgKi8NCi0JcHJpdmF0ZSBEb2N1bWVudCBmRG9jOw0KLQkNCi0JLyoqDQogCSAqIENv
bXBvbmVudCBlbGVtZW50DQogCSAqLw0KIAlwcml2YXRlIEVsZW1lbnQgZkNvbXBvbmVudDsNCiAJ
DQogCS8qKg0KLQkgKiBTZXQgb2YgcGFja2FnZSBuYW1lcyBhbHJlYWR5IHZpc2l0ZWQgKHRvIGF2
b2lkIHJlLXZpc2l0aW5nIHNhbWUgcGFja2FnZSkNCisJICogWE1MIGRvYyBiZWluZyBnZW5lcmF0
ZWQNCiAJICovDQotCXByaXZhdGUgU2V0IGZWaXNpdGVkUGFja2FnZXM7DQorCXByaXZhdGUgRG9j
dW1lbnQgZkRvYzsNCiAJDQogCS8qKg0KIAkgKiBDdXJyZW50IHBhY2thZ2Ugbm9kZSBiZWluZyBj
cmVhdGVkDQpAQCAtNjgsMTQgKzYzLDE5IEBADQogCXByaXZhdGUgRWxlbWVudCBmUGFja2FnZTsN
CiAJDQogCS8qKg0KKwkgKiBWaXNpYmlsaXR5IG1vZGlmaWVycyBmb3IgcGFja2FnZSBiZWluZyB2
aXNpdGVkDQorCSAqLw0KKwlwcml2YXRlIGludCBmUGFja2FnZVZpc2liaWxpdHk7DQorCQ0KKwkv
KioNCiAJICogVGhlIHN0YWNrIG9mIGN1cnJlbnQgdHlwZSBub2RlIGJlaW5nIHZpc2l0ZWQNCiAJ
ICovDQogCXByaXZhdGUgU3RhY2sgZlR5cGVTdGFjazsNCiANCiAJLyoqDQotCSAqIFZpc2liaWxp
dHkgbW9kaWZpZXJzIGZvciBwYWNrYWdlIGJlaW5nIHZpc2l0ZWQNCisJICogU2V0IG9mIHBhY2th
Z2UgbmFtZXMgYWxyZWFkeSB2aXNpdGVkICh0byBhdm9pZCByZS12aXNpdGluZyBzYW1lIHBhY2th
Z2UpDQogCSAqLw0KLQlwcml2YXRlIGludCBmUGFja2FnZVZpc2liaWxpdHk7DQorCXByaXZhdGUg
U2V0IGZWaXNpdGVkUGFja2FnZXM7DQogCQ0KIAkvKioNCiAJICogQ29uc3RydWN0cyBhIG5ldyB2
aXNpdG9yIGZvciB0aGUgZ2l2ZW4gY29tcG9uZW50Lg0KQEAgLTg0LDE3ICs4NCw5NCBAQA0KIAkg
KiBAdGhyb3dzIENvcmVFeGNlcHRpb24gaWYgdW5hYmxlIHRvIGNvbnN0cnVjdCB0aGUgdmlzaXRv
cg0KIAkgKi8NCiAJcHVibGljIEFwaVNldHRpbmdzWG1sVmlzaXRvcihJQXBpQ29tcG9uZW50IGNv
bXBvbmVudCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwkJdGhpcyhjb21wb25lbnQuZ2V0TmFt
ZSgpLCBjb21wb25lbnQuZ2V0SWQoKSk7DQorCX0NCisNCisJLyoqDQorCSAqIENvbnN0cnVjdHMg
YSBuZXcgdmlzaXRvciBmb3IgdGhlIGdpdmVuIGNvbXBvbmVudC4NCisJICogDQorCSAqIEBwYXJh
bSBjb21wb25lbnROYW1lIHRoZSBnaXZlbiBjb21wb25lbnQgbmFtZQ0KKwkgKiBAcGFyYW0gY29t
cG9uZW50SWQgdGhlIGdpdmVuIGNvbXBvbmVudCBpZA0KKwkgKiANCisJICogQHRocm93cyBDb3Jl
RXhjZXB0aW9uIGlmIHVuYWJsZSB0byBjb25zdHJ1Y3QgdGhlIHZpc2l0b3INCisJICovDQorCXB1
YmxpYyBBcGlTZXR0aW5nc1htbFZpc2l0b3IoU3RyaW5nIGNvbXBvbmVudE5hbWUsIFN0cmluZyBj
b21wb25lbnRJZCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KIAkJZkRvYyA9IFV0aWwubmV3RG9j
dW1lbnQoKTsJDQogCQlmQ29tcG9uZW50ID0gZkRvYy5jcmVhdGVFbGVtZW50KEFwaURlc2NyaXB0
aW9uUHJvY2Vzc29yLkVMRU1FTlRfQ09NUE9ORU5UKTsNCi0JCWZDb21wb25lbnQuc2V0QXR0cmli
dXRlKEFwaURlc2NyaXB0aW9uUHJvY2Vzc29yLkFUVFJfTkFNRSwgY29tcG9uZW50LmdldE5hbWUo
KSk7DQorCQlmQ29tcG9uZW50LnNldEF0dHJpYnV0ZShBcGlEZXNjcmlwdGlvblByb2Nlc3Nvci5B
VFRSX05BTUUsIGNvbXBvbmVudE5hbWUpOw0KIAkJZkRvYy5hcHBlbmRDaGlsZChmQ29tcG9uZW50
KTsNCiAJCUVsZW1lbnQgcGx1Z2luID0gZkRvYy5jcmVhdGVFbGVtZW50KEFwaURlc2NyaXB0aW9u
UHJvY2Vzc29yLkVMRU1FTlRfUExVR0lOKTsNCi0JCXBsdWdpbi5zZXRBdHRyaWJ1dGUoQXBpRGVz
Y3JpcHRpb25Qcm9jZXNzb3IuQVRUUl9JRCwgY29tcG9uZW50LmdldElkKCkpOw0KKwkJcGx1Z2lu
LnNldEF0dHJpYnV0ZShBcGlEZXNjcmlwdGlvblByb2Nlc3Nvci5BVFRSX0lELCBjb21wb25lbnRJ
ZCk7DQogCQlmQ29tcG9uZW50LmFwcGVuZENoaWxkKHBsdWdpbik7DQogCQlmVmlzaXRlZFBhY2th
Z2VzID0gbmV3IEhhc2hTZXQoKTsNCiAJCWZUeXBlU3RhY2sgPSBuZXcgU3RhY2soKTsNCiAJfQ0K
IA0KKwkvKioNCisJICogQWRkcyB2aXNpYmlsaXR5IGF0dHJpYnV0ZXMgdG8gdGhlIGdpdmVuIGVs
ZW1lbnQuDQorCSAqIA0KKwkgKiBAcGFyYW0gZWxlbWVudCBYTUwgZWxlbWVudA0KKwkgKiBAcGFy
YW0gZGVzY3JpcHRpb24gQVBJIGRlc2NyaXB0aW9uDQorCSAqLw0KKwlwcml2YXRlIHZvaWQgYWRk
VmlzaWJpbGl0eUF0dHJpYnV0ZXMoRWxlbWVudCBlbGVtZW50LCBJQXBpQW5ub3RhdGlvbnMgZGVz
Y3JpcHRpb24pIHsNCisJCWludCBtb2RpZmllcnMgPSBkZXNjcmlwdGlvbi5nZXRWaXNpYmlsaXR5
KCk7DQorCQlTdHJpbmcgdmFsdWUgPSBudWxsOw0KKwkJc3dpdGNoIChtb2RpZmllcnMpIHsNCisJ
CQljYXNlIFZpc2liaWxpdHlNb2RpZmllcnMuQVBJOiB7DQorCQkJCXZhbHVlID0gVkFMVUVfQVBJ
Ow0KKwkJCQlicmVhazsNCisJCQl9DQorCQkJY2FzZSBWaXNpYmlsaXR5TW9kaWZpZXJzLlBSSVZB
VEU6IHsNCisJCQkJdmFsdWUgPSBWQUxVRV9QUklWQVRFOw0KKwkJCQlicmVhazsNCisJCQl9DQor
CQkJY2FzZSBWaXNpYmlsaXR5TW9kaWZpZXJzLlBSSVZBVEVfUEVSTUlTU0lCTEU6IHsNCisJCQkJ
dmFsdWUgPSBWQUxVRV9QUklWQVRFX1BFUk1JU1NBQkxFOw0KKwkJCQlicmVhazsNCisJCQl9DQor
CQkJY2FzZSBWaXNpYmlsaXR5TW9kaWZpZXJzLlNQSTogew0KKwkJCQl2YWx1ZSA9IFZBTFVFX1NQ
STsNCisJCQkJYnJlYWs7DQorCQkJfQ0KKwkJCWRlZmF1bHQ6IHsNCisJCQkJYnJlYWs7DQorCQkJ
fQ0KKwkJfQ0KKwkJaWYgKHZhbHVlICE9IG51bGwpIHsNCisJCQllbGVtZW50LnNldEF0dHJpYnV0
ZShBcGlEZXNjcmlwdGlvblByb2Nlc3Nvci5BVFRSX1ZJU0lCSUxJVFksIHZhbHVlKTsNCisJCX0N
CisJfQ0KKwkNCisJLyoqDQorCSAqIEFubm90YXRlcyB0aGUgYXR0cmlidXRlIHNldCBvZiB0aGUg
c3BlY2lmaWVkIHtAbGluayBFbGVtZW50fQ0KKwkgKiANCisJICogQHBhcmFtIGNvbXBvbmVudENv
bnRleHQgY29tcG9uZW50IGNvbnRleHQgdG8gd2hpY2ggdGhlIEFQSSBhcHBsaWVzLCBvciA8Y29k
ZT5udWxsPC9jb2RlPg0KKwkgKiBAcGFyYW0gZGVzY3JpcHRpb24gdGhlIGRlc2NyaXB0aW9uIHRv
IGFubm90YXRlIGZyb20NCisJICogQHBhcmFtIGVsZW1lbnQgdGhlIGVsZW1lbnQgdG8gYW5ub3Rh
dGUNCisJICovDQorCXByaXZhdGUgdm9pZCBhbm5vdGF0ZUVsZW1lbnRBdHRyaWJ1dGVzKFN0cmlu
ZyBjb21wb25lbnRDb250ZXh0LCBJQXBpQW5ub3RhdGlvbnMgZGVzY3JpcHRpb24sIEVsZW1lbnQg
ZWxlbWVudCkgew0KKwkJaW50IHJlc3RyaWN0aW9ucyA9IGRlc2NyaXB0aW9uLmdldFJlc3RyaWN0
aW9ucygpOw0KKwkJaWYgKFJlc3RyaWN0aW9uTW9kaWZpZXJzLmlzSW1wbGVtZW50UmVzdHJpY3Rp
b24ocmVzdHJpY3Rpb25zKSkgew0KKwkJCWVsZW1lbnQuc2V0QXR0cmlidXRlKEFwaURlc2NyaXB0
aW9uUHJvY2Vzc29yLkFUVFJfSU1QTEVNRU5ULCBWQUxVRV9GQUxTRSk7DQorCQl9DQorCQlpZiAo
UmVzdHJpY3Rpb25Nb2RpZmllcnMuaXNFeHRlbmRSZXN0cmljdGlvbihyZXN0cmljdGlvbnMpKSB7
DQorCQkJZWxlbWVudC5zZXRBdHRyaWJ1dGUoQXBpRGVzY3JpcHRpb25Qcm9jZXNzb3IuQVRUUl9F
WFRFTkQsIFZBTFVFX0ZBTFNFKTsNCisJCX0NCisJCWlmIChSZXN0cmljdGlvbk1vZGlmaWVycy5p
c0luc3RhbnRpYXRlUmVzdHJpY3Rpb24ocmVzdHJpY3Rpb25zKSkgew0KKwkJCWVsZW1lbnQuc2V0
QXR0cmlidXRlKEFwaURlc2NyaXB0aW9uUHJvY2Vzc29yLkFUVFJfSU5TVEFOVElBVEUsIFZBTFVF
X0ZBTFNFKTsNCisJCX0NCisJCWlmIChSZXN0cmljdGlvbk1vZGlmaWVycy5pc1JlZmVyZW5jZVJl
c3RyaWN0aW9uKHJlc3RyaWN0aW9ucykpIHsNCisJCQllbGVtZW50LnNldEF0dHJpYnV0ZShBcGlE
ZXNjcmlwdGlvblByb2Nlc3Nvci5BVFRSX1JFRkVSRU5DRSwgVkFMVUVfRkFMU0UpOw0KKwkJfQ0K
KwkJaWYgKGNvbXBvbmVudENvbnRleHQgIT0gbnVsbCkgew0KKwkJCWVsZW1lbnQuc2V0QXR0cmli
dXRlKEFwaURlc2NyaXB0aW9uUHJvY2Vzc29yLkFUVFJfQ09OVEVYVCwgY29tcG9uZW50Q29udGV4
dCk7DQorCQl9DQorCQlpbnQgdmlzaWJpbGl0eSA9IGRlc2NyaXB0aW9uLmdldFZpc2liaWxpdHko
KTsNCisJCWlmICh2aXNpYmlsaXR5ICE9IGZQYWNrYWdlVmlzaWJpbGl0eSkgew0KKwkJCWFkZFZp
c2liaWxpdHlBdHRyaWJ1dGVzKGVsZW1lbnQsIGRlc2NyaXB0aW9uKTsNCisJCX0NCisJfQ0KKwkN
CiAJLyogKG5vbi1KYXZhZG9jKQ0KIAkgKiBAc2VlIG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMu
bW9kZWwuY29tcG9uZW50LkFwaURlc2NyaXB0aW9uVmlzaXRvciNlbmRWaXNpdEVsZW1lbnQob3Jn
LmVjbGlwc2UucGRlLmFwaS50b29scy5tb2RlbC5jb21wb25lbnQuSUVsZW1lbnREZXNjcmlwdG9y
LCBqYXZhLmxhbmcuU3RyaW5nLCBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLm1vZGVsLklBcGlB
bm5vdGF0aW9ucykNCiAJICovDQpAQCAtMTE2LDYgKzE5MywxNiBAQA0KIAkJCX0NCiAJCX0NCiAJ
fQ0KKwkNCisJLyoqDQorCSAqIFJldHVybnMgdGhlIHNldHRpbmdzIGFzIGEgVVRGLTggc3RyaW5n
IGNvbnRhaW5pbmcgWE1MLg0KKwkgKiANCisJICogQHJldHVybiBYTUwNCisJICogQHRocm93cyBD
b3JlRXhjZXB0aW9uIGlmIHNvbWV0aGluZyBnb2VzIHdyb25nIA0KKwkgKi8NCisJcHVibGljIFN0
cmluZyBnZXRYTUwoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQorCQlyZXR1cm4gVXRpbC5zZXJp
YWxpemVEb2N1bWVudChmRG9jKTsNCisJfQ0KIA0KIAkvKiAobm9uLUphdmFkb2MpDQogCSAqIEBz
ZWUgb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5tb2RlbC5jb21wb25lbnQuQXBpRGVzY3JpcHRp
b25WaXNpdG9yI3Zpc2l0RWxlbWVudChvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLm1vZGVsLmNv
bXBvbmVudC5JRWxlbWVudERlc2NyaXB0b3IsIGphdmEubGFuZy5TdHJpbmcsIG9yZy5lY2xpcHNl
LnBkZS5hcGkudG9vbHMubW9kZWwuSUFwaUFubm90YXRpb25zKQ0KQEAgLTE3NCw3OSArMjYxLDQg
QEANCiAJCX0NCiAJCXJldHVybiB0cnVlOw0KIAl9DQotCQ0KLQkvKioNCi0JICogQW5ub3RhdGVz
IHRoZSBhdHRyaWJ1dGUgc2V0IG9mIHRoZSBzcGVjaWZpZWQge0BsaW5rIEVsZW1lbnR9DQotCSAq
IA0KLQkgKiBAcGFyYW0gY29tcG9uZW50Q29udGV4dCBjb21wb25lbnQgY29udGV4dCB0byB3aGlj
aCB0aGUgQVBJIGFwcGxpZXMsIG9yIDxjb2RlPm51bGw8L2NvZGU+DQotCSAqIEBwYXJhbSBkZXNj
cmlwdGlvbiB0aGUgZGVzY3JpcHRpb24gdG8gYW5ub3RhdGUgZnJvbQ0KLQkgKiBAcGFyYW0gZWxl
bWVudCB0aGUgZWxlbWVudCB0byBhbm5vdGF0ZQ0KLQkgKi8NCi0JcHJpdmF0ZSB2b2lkIGFubm90
YXRlRWxlbWVudEF0dHJpYnV0ZXMoU3RyaW5nIGNvbXBvbmVudENvbnRleHQsIElBcGlBbm5vdGF0
aW9ucyBkZXNjcmlwdGlvbiwgRWxlbWVudCBlbGVtZW50KSB7DQotCQlpbnQgcmVzdHJpY3Rpb25z
ID0gZGVzY3JpcHRpb24uZ2V0UmVzdHJpY3Rpb25zKCk7DQotCQlpZiAoUmVzdHJpY3Rpb25Nb2Rp
ZmllcnMuaXNJbXBsZW1lbnRSZXN0cmljdGlvbihyZXN0cmljdGlvbnMpKSB7DQotCQkJZWxlbWVu
dC5zZXRBdHRyaWJ1dGUoQXBpRGVzY3JpcHRpb25Qcm9jZXNzb3IuQVRUUl9JTVBMRU1FTlQsIFZB
TFVFX0ZBTFNFKTsNCi0JCX0NCi0JCWlmIChSZXN0cmljdGlvbk1vZGlmaWVycy5pc0V4dGVuZFJl
c3RyaWN0aW9uKHJlc3RyaWN0aW9ucykpIHsNCi0JCQllbGVtZW50LnNldEF0dHJpYnV0ZShBcGlE
ZXNjcmlwdGlvblByb2Nlc3Nvci5BVFRSX0VYVEVORCwgVkFMVUVfRkFMU0UpOw0KLQkJfQ0KLQkJ
aWYgKFJlc3RyaWN0aW9uTW9kaWZpZXJzLmlzSW5zdGFudGlhdGVSZXN0cmljdGlvbihyZXN0cmlj
dGlvbnMpKSB7DQotCQkJZWxlbWVudC5zZXRBdHRyaWJ1dGUoQXBpRGVzY3JpcHRpb25Qcm9jZXNz
b3IuQVRUUl9JTlNUQU5USUFURSwgVkFMVUVfRkFMU0UpOw0KLQkJfQ0KLQkJaWYgKFJlc3RyaWN0
aW9uTW9kaWZpZXJzLmlzUmVmZXJlbmNlUmVzdHJpY3Rpb24ocmVzdHJpY3Rpb25zKSkgew0KLQkJ
CWVsZW1lbnQuc2V0QXR0cmlidXRlKEFwaURlc2NyaXB0aW9uUHJvY2Vzc29yLkFUVFJfUkVGRVJF
TkNFLCBWQUxVRV9GQUxTRSk7DQotCQl9DQotCQlpZiAoY29tcG9uZW50Q29udGV4dCAhPSBudWxs
KSB7DQotCQkJZWxlbWVudC5zZXRBdHRyaWJ1dGUoQXBpRGVzY3JpcHRpb25Qcm9jZXNzb3IuQVRU
Ul9DT05URVhULCBjb21wb25lbnRDb250ZXh0KTsNCi0JCX0NCi0JCWludCB2aXNpYmlsaXR5ID0g
ZGVzY3JpcHRpb24uZ2V0VmlzaWJpbGl0eSgpOw0KLQkJaWYgKHZpc2liaWxpdHkgIT0gZlBhY2th
Z2VWaXNpYmlsaXR5KSB7DQotCQkJYWRkVmlzaWJpbGl0eUF0dHJpYnV0ZXMoZWxlbWVudCwgZGVz
Y3JpcHRpb24pOw0KLQkJfQ0KLQl9DQotCQ0KLQkvKioNCi0JICogQWRkcyB2aXNpYmlsaXR5IGF0
dHJpYnV0ZXMgdG8gdGhlIGdpdmVuIGVsZW1lbnQuDQotCSAqIA0KLQkgKiBAcGFyYW0gZWxlbWVu
dCBYTUwgZWxlbWVudA0KLQkgKiBAcGFyYW0gZGVzY3JpcHRpb24gQVBJIGRlc2NyaXB0aW9uDQot
CSAqLw0KLQlwcml2YXRlIHZvaWQgYWRkVmlzaWJpbGl0eUF0dHJpYnV0ZXMoRWxlbWVudCBlbGVt
ZW50LCBJQXBpQW5ub3RhdGlvbnMgZGVzY3JpcHRpb24pIHsNCi0JCWludCBtb2RpZmllcnMgPSBk
ZXNjcmlwdGlvbi5nZXRWaXNpYmlsaXR5KCk7DQotCQlTdHJpbmcgdmFsdWUgPSBudWxsOw0KLQkJ
c3dpdGNoIChtb2RpZmllcnMpIHsNCi0JCQljYXNlIFZpc2liaWxpdHlNb2RpZmllcnMuQVBJOiB7
DQotCQkJCXZhbHVlID0gVkFMVUVfQVBJOw0KLQkJCQlicmVhazsNCi0JCQl9DQotCQkJY2FzZSBW
aXNpYmlsaXR5TW9kaWZpZXJzLlBSSVZBVEU6IHsNCi0JCQkJdmFsdWUgPSBWQUxVRV9QUklWQVRF
Ow0KLQkJCQlicmVhazsNCi0JCQl9DQotCQkJY2FzZSBWaXNpYmlsaXR5TW9kaWZpZXJzLlBSSVZB
VEVfUEVSTUlTU0lCTEU6IHsNCi0JCQkJdmFsdWUgPSBWQUxVRV9QUklWQVRFX1BFUk1JU1NBQkxF
Ow0KLQkJCQlicmVhazsNCi0JCQl9DQotCQkJY2FzZSBWaXNpYmlsaXR5TW9kaWZpZXJzLlNQSTog
ew0KLQkJCQl2YWx1ZSA9IFZBTFVFX1NQSTsNCi0JCQkJYnJlYWs7DQotCQkJfQ0KLQkJCWRlZmF1
bHQ6IHsNCi0JCQkJYnJlYWs7DQotCQkJfQ0KLQkJfQ0KLQkJaWYgKHZhbHVlICE9IG51bGwpIHsN
Ci0JCQllbGVtZW50LnNldEF0dHJpYnV0ZShBcGlEZXNjcmlwdGlvblByb2Nlc3Nvci5BVFRSX1ZJ
U0lCSUxJVFksIHZhbHVlKTsNCi0JCX0NCi0JfQ0KLQkNCi0JLyoqDQotCSAqIFJldHVybnMgdGhl
IHNldHRpbmdzIGFzIGEgVVRGLTggc3RyaW5nIGNvbnRhaW5pbmcgWE1MLg0KLQkgKiANCi0JICog
QHJldHVybiBYTUwNCi0JICogQHRocm93cyBDb3JlRXhjZXB0aW9uIGlmIHNvbWV0aGluZyBnb2Vz
IHdyb25nIA0KLQkgKi8NCi0JcHVibGljIFN0cmluZyBnZXRYTUwoKSB0aHJvd3MgQ29yZUV4Y2Vw
dGlvbiB7DQotCQlyZXR1cm4gVXRpbC5zZXJpYWxpemVEb2N1bWVudChmRG9jKTsNCi0JfQ0KIH0N
CkluZGV4OiBNRVRBLUlORi9NQU5JRkVTVC5NRg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2UvcGRlLWluY3ViYXRvci9hcGktdG9vbGluZy9wbHVnaW5zL29yZy5lY2xpcHNl
LnBkZS5hcGkudG9vbHMvTUVUQS1JTkYvTUFOSUZFU1QuTUYsdg0KcmV0cmlldmluZyByZXZpc2lv
biAxLjE5DQpkaWZmIC11IC1yMS4xOSBNQU5JRkVTVC5NRg0KLS0tIE1FVEEtSU5GL01BTklGRVNU
Lk1GCTExIEphbiAyMDA4IDE4OjI5OjMxIC0wMDAwCTEuMTkNCisrKyBNRVRBLUlORi9NQU5JRkVT
VC5NRgkyOSBKYW4gMjAwOCAxNzowMzo1NCAtMDAwMA0KQEAgLTYsNyArNiw2IEBADQogQnVuZGxl
LVZlbmRvcjogJXByb3ZpZGVyTmFtZQ0KIEJ1bmRsZS1Mb2NhbGl6YXRpb246IHBsdWdpbg0KIFJl
cXVpcmUtQnVuZGxlOiBvcmcuZWNsaXBzZS5vc2dpLA0KLSBvcmcuYXBhY2hlLmFudCwNCiAgb3Jn
LmVjbGlwc2UuY29yZS5ydW50aW1lLA0KICBvcmcuZWNsaXBzZS5wZGUuY29yZSwNCiAgb3JnLmVj
bGlwc2UudXBkYXRlLmNvbmZpZ3VyYXRvciwNCkBAIC0xNSw3ICsxNCw4IEBADQogIG9yZy5lY2xp
cHNlLmNvcmUucmVzb3VyY2VzLA0KICBvcmcuZWNsaXBzZS50ZXh0LA0KICBvcmcuZWNsaXBzZS5j
b3JlLmZpbGVidWZmZXJzLA0KLSBvcmcuZWNsaXBzZS5qZHQudWk7YnVuZGxlLXZlcnNpb249IjMu
NC4wIg0KKyBvcmcuZWNsaXBzZS5qZHQudWk7YnVuZGxlLXZlcnNpb249IjMuNC4wIiwNCisgb3Jn
LmVjbGlwc2UuYW50LmNvcmU7YnVuZGxlLXZlcnNpb249IjMuMS4zMDAiDQogRXhwb3J0LVBhY2th
Z2U6IG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMsDQogIG9yZy5lY2xpcHNlLnBkZS5hcGkudG9v
bHMuY29tcGFyYXRvciwNCiAgb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5kZXNjcmlwdG9ycywN
CkBAIC0zMiw3ICszMiw3IEBADQogSW1wb3J0LVBhY2thZ2U6IGNvbS5pYm0uaWN1LmltcGwuZGF0
YS5pY3VkdDM2YiwNCiAgY29tLmlibS5pY3UudGV4dDt2ZXJzaW9uPSIzLjYuMSINCiBCdW5kbGUt
QWN0aXZhdG9yOiBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLkFwaVBsdWdpbg0KLUVjbGlwc2Ut
TGF6eVN0YXJ0OiB0cnVlDQogQnVuZGxlLUNsYXNzUGF0aDogbGliL2FzbTMuMC9hc20tMy4wLmph
ciwNCiAgbGliL2FzbTMuMC9hc20tdHJlZS0zLjAuamFyLA0KICAuDQorQnVuZGxlLUFjdGl2YXRp
b25Qb2xpY3k6IGxhenkNCkluZGV4OiBzcmNfYW50L29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMv
aW50ZXJuYWwvdGFza3MvQXBpRmlsZUdlbmVyYXRvci5qYXZhDQo9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmls
ZTogc3JjX2FudC9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL3Rhc2tzL0FwaUZp
bGVHZW5lcmF0b3IuamF2YQ0KZGlmZiAtTiBzcmNfYW50L29yZy9lY2xpcHNlL3BkZS9hcGkvdG9v
bHMvaW50ZXJuYWwvdGFza3MvQXBpRmlsZUdlbmVyYXRvci5qYXZhDQotLS0gL2Rldi9udWxsCTEg
SmFuIDE5NzAgMDA6MDA6MDAgLTAwMDANCisrKyBzcmNfYW50L29yZy9lY2xpcHNlL3BkZS9hcGkv
dG9vbHMvaW50ZXJuYWwvdGFza3MvQXBpRmlsZUdlbmVyYXRvci5qYXZhCTEgSmFuIDE5NzAgMDA6
MDA6MDAgLTAwMDANCkBAIC0wLDAgKzEsMTk3IEBADQorcGFja2FnZSBvcmcuZWNsaXBzZS5wZGUu
YXBpLnRvb2xzLmludGVybmFsLnRhc2tzOw0KKw0KK2ltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkSW5w
dXRTdHJlYW07DQoraW1wb3J0IGphdmEuaW8uRmlsZTsNCitpbXBvcnQgamF2YS5pby5GaWxlRmls
dGVyOw0KK2ltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTsNCitpbXBvcnQgamF2YS5pby5G
aWxlTm90Rm91bmRFeGNlcHRpb247DQoraW1wb3J0IGphdmEuaW8uSU9FeGNlcHRpb247DQoraW1w
b3J0IGphdmEudXRpbC5JdGVyYXRvcjsNCitpbXBvcnQgamF2YS51dGlsLk1hcDsNCitpbXBvcnQg
amF2YS51dGlsLlByb3BlcnRpZXM7DQorDQoraW1wb3J0IG9yZy5hcGFjaGUudG9vbHMuYW50LkJ1
aWxkRXhjZXB0aW9uOw0KK2ltcG9ydCBvcmcuYXBhY2hlLnRvb2xzLmFudC5UYXNrOw0KK2ltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuQ29yZUV4Y2VwdGlvbjsNCitpbXBvcnQgb3JnLmVj
bGlwc2Uub3NnaS51dGlsLk1hbmlmZXN0RWxlbWVudDsNCitpbXBvcnQgb3JnLmVjbGlwc2UucGRl
LmFwaS50b29scy5BcGlQbHVnaW47DQoraW1wb3J0IG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMu
aW50ZXJuYWwuQXBpRGVzY3JpcHRpb247DQoraW1wb3J0IG9yZy5lY2xpcHNlLnBkZS5hcGkudG9v
bHMuaW50ZXJuYWwuQXBpU2V0dGluZ3NYbWxWaXNpdG9yOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5w
ZGUuYXBpLnRvb2xzLmludGVybmFsLkJ1bmRsZUFwaUNvbXBvbmVudDsNCitpbXBvcnQgb3JnLmVj
bGlwc2UucGRlLmFwaS50b29scy5pbnRlcm5hbC5Db21waWxhdGlvblVuaXQ7DQoraW1wb3J0IG9y
Zy5lY2xpcHNlLnBkZS5hcGkudG9vbHMuaW50ZXJuYWwuRGlyZWN0b3J5Q2xhc3NGaWxlQ29udGFp
bmVyOw0KK2ltcG9ydCBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLmludGVybmFsLnV0aWwuVXRp
bDsNCitpbXBvcnQgb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5zY2FubmVyLlRhZ1NjYW5uZXI7
DQoraW1wb3J0IG9yZy5vc2dpLmZyYW1ld29yay5CdW5kbGVFeGNlcHRpb247DQorDQorcHVibGlj
IGNsYXNzIEFwaUZpbGVHZW5lcmF0b3IgZXh0ZW5kcyBUYXNrIHsNCisJDQorCXByaXZhdGUgc3Rh
dGljIGZpbmFsIGJvb2xlYW4gREVCVUcgPSB0cnVlOw0KKw0KKwlTdHJpbmcgcHJvamVjdE5hbWU7
DQorCVN0cmluZyBwcm9qZWN0TG9jYXRpb247DQorCVN0cmluZyB0YXJnZXRGb2xkZXI7DQorDQor
CXB1YmxpYyB2b2lkIHNldFByb2plY3ROYW1lKFN0cmluZyBwcm9qZWN0TmFtZSkgew0KKwkJdGhp
cy5wcm9qZWN0TmFtZSA9IHByb2plY3ROYW1lOw0KKwl9DQorCXB1YmxpYyB2b2lkIHNldFByb2pl
Y3RMb2NhdGlvbihTdHJpbmcgcHJvamVjdExvY2F0aW9uKSB7DQorCQl0aGlzLnByb2plY3RMb2Nh
dGlvbiA9IHByb2plY3RMb2NhdGlvbjsNCisJfQ0KKwlwdWJsaWMgdm9pZCBzZXRUYXJnZXRGb2xk
ZXIoU3RyaW5nIHRhcmdldEZvbGRlcikgew0KKwkJdGhpcy50YXJnZXRGb2xkZXIgPSB0YXJnZXRG
b2xkZXI7DQorCX0NCisJDQorCXB1YmxpYyB2b2lkIGV4ZWN1dGUoKSB0aHJvd3MgQnVpbGRFeGNl
cHRpb24gew0KKwkJaWYgKERFQlVHKSB7DQorCQkJU3lzdGVtLm91dC5wcmludGxuKHRoaXMudGFy
Z2V0Rm9sZGVyKTsNCisJCQlTeXN0ZW0ub3V0LnByaW50bG4odGhpcy5wcm9qZWN0TG9jYXRpb24p
Ow0KKwkJCVN5c3RlbS5vdXQucHJpbnRsbih0aGlzLnByb2plY3ROYW1lKTsNCisJCX0NCisJCS8v
IGNyZWF0ZSB0aGUgZGlyZWN0b3J5IGNsYXNzIGZpbGUgY29udGFpbmVyDQorCQlTdHJpbmdCdWZm
ZXIgY2xhc3NGaWxlQ29udGFpbmVyUm9vdEJ1ZmZlciA9IG5ldyBTdHJpbmdCdWZmZXIodGhpcy50
YXJnZXRGb2xkZXIpOw0KKwkJY2xhc3NGaWxlQ29udGFpbmVyUm9vdEJ1ZmZlci5hcHBlbmQoRmls
ZS5zZXBhcmF0b3JDaGFyKS5hcHBlbmQodGhpcy5wcm9qZWN0TmFtZSk7DQorCQlEaXJlY3RvcnlD
bGFzc0ZpbGVDb250YWluZXIgY2xhc3NGaWxlQ29udGFpbmVyID0gbmV3IERpcmVjdG9yeUNsYXNz
RmlsZUNvbnRhaW5lcigNCisJCQkJU3RyaW5nLnZhbHVlT2YoY2xhc3NGaWxlQ29udGFpbmVyUm9v
dEJ1ZmZlcikpOw0KKwkJU3RyaW5nW10gcGFja2FnZU5hbWVzID0gbnVsbDsNCisJCXRyeSB7DQor
CQkJcGFja2FnZU5hbWVzID0gY2xhc3NGaWxlQ29udGFpbmVyLmdldFBhY2thZ2VOYW1lcygpOw0K
KwkJfSBjYXRjaCAoQ29yZUV4Y2VwdGlvbiBlKSB7DQorCQkJQXBpUGx1Z2luLmxvZyhlKTsNCisJ
CX0NCisJCWlmIChERUJVRykgew0KKwkJCWlmIChwYWNrYWdlTmFtZXMgIT0gbnVsbCkgew0KKwkJ
CQlTeXN0ZW0ub3V0LnByaW50bG4oIkxpc3QgYWxsIHBhY2thZ2UgbmFtZXMiKTsgLy8kTk9OLU5M
Uy0xJA0KKwkJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gcGFja2FnZU5hbWVzLmxlbmd0aDsgaSA8
IG1heDsgaSsrKSB7DQorCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIlBhY2thZ2UgbmFtZSA6ICIg
KyBwYWNrYWdlTmFtZXNbaV0pOyAvLyROT04tTkxTLTEkDQorCQkJCX0NCisJCQl9IGVsc2Ugew0K
KwkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIk5vIHBhY2thZ2VzIik7IC8vJE5PTi1OTFMtMSQNCisJ
CQl9DQorCQl9DQorDQorCQkvLyBjb2xsZWN0IGFsbCBjb21waWxhdGlvbiB1bml0cw0KKwkJRmls
ZSByb290ID0gbmV3IEZpbGUodGhpcy5wcm9qZWN0TG9jYXRpb24pOw0KKwkJaWYgKCFyb290LmV4
aXN0cygpIHx8ICFyb290LmlzRGlyZWN0b3J5KCkpIHsNCisJCQlpZiAoREVCVUcpIHsNCisJCQkJ
U3lzdGVtLmVyci5wcmludGxuKCJTaG91bGQgYmUgYSBkaXJlY3RvcnkgOiAiICsgdGhpcy5wcm9q
ZWN0TG9jYXRpb24pOyAvLyROT04tTkxTLTEkDQorCQkJfQ0KKwkJCXJldHVybjsNCisJCX0NCisJ
CS8vIGNoZWNrIGlmIHRoZSAuYXBpX2Rlc2NyaXB0aW9uIGZpbGUgZXhpc3RzIGluIHNvdXJjZQ0K
KwkJRmlsZSBhcGlEZXNjcmlwdGlvbkZpbGUgPSBuZXcgRmlsZShyb290LCBCdW5kbGVBcGlDb21w
b25lbnQuQVBJX0RFU0NSSVBUSU9OX1hNTF9OQU1FKTsNCisJCUZpbGUgdGFyZ2V0UHJvamVjdEZv
bGRlciA9IG5ldyBGaWxlKHRoaXMudGFyZ2V0Rm9sZGVyLCB0aGlzLnByb2plY3ROYW1lKTsgDQor
CQlpZiAoYXBpRGVzY3JpcHRpb25GaWxlLmV4aXN0cygpKSB7DQorCQkJLy8gY29weSB0byB0aGUg
dGFyZ2V0IGZvbGRlciArIHByb2plY3QgbmFtZQ0KKwkJCVV0aWwuY29weShhcGlEZXNjcmlwdGlv
bkZpbGUsIG5ldyBGaWxlKHRhcmdldFByb2plY3RGb2xkZXIsIEJ1bmRsZUFwaUNvbXBvbmVudC5B
UElfREVTQ1JJUFRJT05fWE1MX05BTUUpKTsNCisJCQlyZXR1cm47DQorCQl9DQorCQlGaWxlW10g
YWxsRmlsZXMgPSBVdGlsLmdldEFsbEZpbGVzKHJvb3QsIG5ldyBGaWxlRmlsdGVyKCkgew0KKwkJ
CXB1YmxpYyBib29sZWFuIGFjY2VwdChGaWxlIHBhdGgpIHsNCisJCQkJcmV0dXJuIChwYXRoLmlz
RmlsZSgpICYmIFV0aWwuaXNKYXZhRmlsZU5hbWUocGF0aC5nZXROYW1lKCkpKSB8fCBwYXRoLmlz
RGlyZWN0b3J5KCk7DQorCQkJfQ0KKwkJfSk7DQorCQlBcGlEZXNjcmlwdGlvbiBhcGlEZXNjcmlw
dGlvbiA9IG5ldyBBcGlEZXNjcmlwdGlvbih0aGlzLnByb2plY3ROYW1lKTsNCisJCVRhZ1NjYW5u
ZXIgdGFnU2Nhbm5lciA9IFRhZ1NjYW5uZXIubmV3U2Nhbm5lcigpOw0KKwkJaWYgKGFsbEZpbGVz
ICE9IG51bGwpIHsNCisJCQlmb3IgKGludCBpID0gMCwgbWF4ID0gYWxsRmlsZXMubGVuZ3RoOyBp
IDwgbWF4OyBpKyspIHsNCisJCQkJQ29tcGlsYXRpb25Vbml0IHVuaXQgPSBuZXcgQ29tcGlsYXRp
b25Vbml0KGFsbEZpbGVzW2ldLmdldEFic29sdXRlUGF0aCgpKTsNCisJCQkJaWYgKERFQlVHKSB7
DQorCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIlVuaXQgbmFtZVsiICsgaSArICJdIDogIiArIHVu
aXQuZ2V0TmFtZSgpKTsgLy8kTk9OLU5MUy0xJCAvLyROT04tTkxTLTIkDQorCQkJCX0NCisJCQkJ
dHJ5IHsNCisJCQkJCXRhZ1NjYW5uZXIuc2Nhbih1bml0LCBhcGlEZXNjcmlwdGlvbiwgY2xhc3NG
aWxlQ29udGFpbmVyKTsNCisJCQkJfSBjYXRjaCAoRmlsZU5vdEZvdW5kRXhjZXB0aW9uIGUpIHsN
CisJCQkJCUFwaVBsdWdpbi5sb2coZSk7DQorCQkJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsN
CisJCQkJCUFwaVBsdWdpbi5sb2coZSk7DQorCQkJCX0NCisJCQl9DQorCQl9DQorCQkvLyBjaGVj
ayB0aGUgbWFuaWZlc3QgZmlsZQ0KKwkJU3RyaW5nIGNvbXBvbmVudE5hbWUgPSB0aGlzLnByb2pl
Y3ROYW1lOw0KKwkJU3RyaW5nIGNvbXBvbmVudElEID0gdGhpcy5wcm9qZWN0TmFtZTsNCisJCWlm
ICh0YXJnZXRQcm9qZWN0Rm9sZGVyLmV4aXN0cygpICYmIHRhcmdldFByb2plY3RGb2xkZXIuaXNE
aXJlY3RvcnkoKSkgew0KKwkJCUZpbGUgbWFuaWZlc3REaXIgPSBuZXcgRmlsZSh0YXJnZXRQcm9q
ZWN0Rm9sZGVyLCAiTUVUQS1JTkYiKTsgLy8kTk9OLU5MUy0xJA0KKwkJCWlmIChtYW5pZmVzdERp
ci5leGlzdHMoKSAmJiBtYW5pZmVzdERpci5pc0RpcmVjdG9yeSgpKSB7DQorCQkJCUZpbGUgbWFu
aWZlc3RGaWxlID0gbmV3IEZpbGUobWFuaWZlc3REaXIsICJNQU5JRkVTVC5NRiIpOyAvLyROT04t
TkxTLTEkDQorCQkJCWlmIChtYW5pZmVzdEZpbGUuZXhpc3RzKCkpIHsNCisJCQkJCUJ1ZmZlcmVk
SW5wdXRTdHJlYW0gaW5wdXRTdHJlYW0gPSBudWxsOw0KKwkJCQkJTWFwIG1hbmlmZXN0TWFwID0g
bnVsbDsNCisJCQkJCXRyeSB7DQorCQkJCQkJaW5wdXRTdHJlYW0gPSBuZXcgQnVmZmVyZWRJbnB1
dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKG1hbmlmZXN0RmlsZSkpOw0KKwkJCQkJCW1hbmlm
ZXN0TWFwID0gTWFuaWZlc3RFbGVtZW50LnBhcnNlQnVuZGxlTWFuaWZlc3QoaW5wdXRTdHJlYW0s
IG51bGwpOw0KKwkJCQkJfSBjYXRjaCAoRmlsZU5vdEZvdW5kRXhjZXB0aW9uIGUpIHsNCisJCQkJ
CQlBcGlQbHVnaW4ubG9nKGUpOw0KKwkJCQkJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgew0KKwkJ
CQkJCUFwaVBsdWdpbi5sb2coZSk7DQorCQkJCQl9IGNhdGNoIChCdW5kbGVFeGNlcHRpb24gZSkg
ew0KKwkJCQkJCUFwaVBsdWdpbi5sb2coZSk7DQorCQkJCQl9IGZpbmFsbHkgew0KKwkJCQkJCWlm
IChpbnB1dFN0cmVhbSAhPSBudWxsKSB7DQorCQkJCQkJCXRyeSB7DQorCQkJCQkJCQlpbnB1dFN0
cmVhbS5jbG9zZSgpOw0KKwkJCQkJCQl9IGNhdGNoKElPRXhjZXB0aW9uIGUpIHsNCisJCQkJCQkJ
CS8vIGlnbm9yZQ0KKwkJCQkJCQl9DQorCQkJCQkJfQ0KKwkJCQkJfQ0KKwkJCQkJaWYgKG1hbmlm
ZXN0TWFwICE9IG51bGwgJiYgREVCVUcpIHsNCisJCQkJCQlmb3IgKEl0ZXJhdG9yIGl0ZXJhdG9y
ID0gbWFuaWZlc3RNYXAua2V5U2V0KCkuaXRlcmF0b3IoKTsgaXRlcmF0b3IuaGFzTmV4dCgpOyAp
IHsNCisJCQkJCQkJT2JqZWN0IGtleSA9IGl0ZXJhdG9yLm5leHQoKTsNCisJCQkJCQkJU3lzdGVt
Lm91dC5wcmludCgia2V5ID0gIiArIGtleSk7IC8vJE5PTi1OTFMtMSQNCisJCQkJCQkJU3lzdGVt
Lm91dC5wcmludGxuKCIgdmFsdWUgPSAiICsgbWFuaWZlc3RNYXAuZ2V0KGtleSkpOyAvLyROT04t
TkxTLTEkDQorCQkJCQkJfQ0KKwkJCQkJfQ0KKwkJCQkJU3RyaW5nIGxvY2FsaXphdGlvbiA9IChT
dHJpbmcpIG1hbmlmZXN0TWFwLmdldChvcmcub3NnaS5mcmFtZXdvcmsuQ29uc3RhbnRzLkJVTkRM
RV9MT0NBTElaQVRJT04pOw0KKwkJCQkJU3RyaW5nIG5hbWUgPSAoU3RyaW5nKSBtYW5pZmVzdE1h
cC5nZXQob3JnLm9zZ2kuZnJhbWV3b3JrLkNvbnN0YW50cy5CVU5ETEVfTkFNRSk7DQorCQkJCQlT
dHJpbmcgbmFtZUtleSA9IChuYW1lICE9IG51bGwgJiYgbmFtZS5zdGFydHNXaXRoKCIlIikpID8g
bmFtZS5zdWJzdHJpbmcoMSkgOiBudWxsOyAvLyROT04tTkxTLTEkOw0KKwkJCQkJaWYgKG5hbWVL
ZXkgIT0gbnVsbCkgew0KKwkJCQkJCVByb3BlcnRpZXMgcHJvcGVydGllcyA9IG5ldyBQcm9wZXJ0
aWVzKCk7DQorCQkJCQkJaW5wdXRTdHJlYW0gPSBudWxsOw0KKwkJCQkJCXRyeSB7DQorCQkJCQkJ
CWlucHV0U3RyZWFtID0gbmV3IEJ1ZmZlcmVkSW5wdXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVh
bShuZXcgRmlsZSh0YXJnZXRQcm9qZWN0Rm9sZGVyLCBsb2NhbGl6YXRpb24gKyAiLnByb3BlcnRp
ZXMiKSkpOyAvLyROT04tTkxTLTEkDQorCQkJCQkJCXByb3BlcnRpZXMubG9hZChpbnB1dFN0cmVh
bSk7DQorCQkJCQkJfSBjYXRjaChJT0V4Y2VwdGlvbiBlKSB7DQorCQkJCQkJCUFwaVBsdWdpbi5s
b2coZSk7DQorCQkJCQkJfSBmaW5hbGx5IHsNCisJCQkJCQkJaWYgKGlucHV0U3RyZWFtICE9IG51
bGwpIHsNCisJCQkJCQkJCXRyeSB7DQorCQkJCQkJCQkJaW5wdXRTdHJlYW0uY2xvc2UoKTsNCisJ
CQkJCQkJCX0gY2F0Y2goSU9FeGNlcHRpb24gZSkgew0KKwkJCQkJCQkJCS8vIGlnbm9yZQ0KKwkJ
CQkJCQkJfQ0KKwkJCQkJCQl9DQorCQkJCQkJfQ0KKwkJCQkJCVN0cmluZyBwcm9wZXJ0eSA9IHBy
b3BlcnRpZXMuZ2V0UHJvcGVydHkobmFtZUtleSk7DQorCQkJCQkJaWYgKHByb3BlcnR5ICE9IG51
bGwpIHsNCisJCQkJCQkJY29tcG9uZW50TmFtZSA9IHByb3BlcnR5LnRyaW0oKTsNCisJCQkJCQl9
DQorCQkJCQl9IGVsc2Ugew0KKwkJCQkJCWNvbXBvbmVudE5hbWUgPSBuYW1lOw0KKwkJCQkJfQ0K
KwkJCQkJU3RyaW5nIHN5bWJvbGljTmFtZSA9IChTdHJpbmcpIG1hbmlmZXN0TWFwLmdldChvcmcu
b3NnaS5mcmFtZXdvcmsuQ29uc3RhbnRzLkJVTkRMRV9TWU1CT0xJQ05BTUUpOw0KKwkJCQkJaWYg
KHN5bWJvbGljTmFtZSAhPSBudWxsKSB7DQorCQkJCQkJaW50IGluZGV4T2YgPSBzeW1ib2xpY05h
bWUuaW5kZXhPZignOycpOw0KKwkJCQkJCWlmIChpbmRleE9mID09IC0xKSB7DQorCQkJCQkJCWNv
bXBvbmVudElEID0gc3ltYm9saWNOYW1lLnRyaW0oKTsNCisJCQkJCQl9IGVsc2Ugew0KKwkJCQkJ
CQljb21wb25lbnRJRCA9IHN5bWJvbGljTmFtZS5zdWJzdHJpbmcoMCwgaW5kZXhPZikudHJpbSgp
Ow0KKwkJCQkJCX0NCisJCQkJCX0NCisJCQkJfQ0KKwkJCX0NCisJCX0NCisJCXRyeSB7DQorCQkJ
QXBpU2V0dGluZ3NYbWxWaXNpdG9yIHhtbFZpc2l0b3IgPSBuZXcgQXBpU2V0dGluZ3NYbWxWaXNp
dG9yKGNvbXBvbmVudE5hbWUsIGNvbXBvbmVudElEKTsNCisJCQlhcGlEZXNjcmlwdGlvbi5hY2Nl
cHQoeG1sVmlzaXRvcik7DQorCQkJU3RyaW5nIHhtbCA9IHhtbFZpc2l0b3IuZ2V0WE1MKCk7DQor
CQkJVXRpbC5zYXZlRmlsZShhcGlEZXNjcmlwdGlvbkZpbGUsIHhtbCk7DQorCQkJVXRpbC5jb3B5
KGFwaURlc2NyaXB0aW9uRmlsZSwgbmV3IEZpbGUodGFyZ2V0UHJvamVjdEZvbGRlciwgQnVuZGxl
QXBpQ29tcG9uZW50LkFQSV9ERVNDUklQVElPTl9YTUxfTkFNRSkpOw0KKwkJfSBjYXRjaCAoQ29y
ZUV4Y2VwdGlvbiBlKSB7DQorCQkJQXBpUGx1Z2luLmxvZyhlKTsNCisJCX0gY2F0Y2ggKElPRXhj
ZXB0aW9uIGUpIHsNCisJCQlBcGlQbHVnaW4ubG9nKGUpOw0KKwkJfQ0KKwl9DQorfQ0K
</data>

          </attachment>
      

    </bug>

</bugzilla>