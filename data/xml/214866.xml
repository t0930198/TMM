<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.1"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>214866</bug_id>
          
          <creation_ts>2008-01-10 04:26:00 -0500</creation_ts>
          <short_desc>Assertion failure in DocumentLineDiffer</short_desc>
          <delta_ts>2008-01-10 14:06:28 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>Platform</product>
          <component>Text</component>
          <version>3.3.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>205589</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tom Lane">tlane</reporter>
          <assigned_to name="Platform-Text-Inbox">platform-text-inbox</assigned_to>
          <cc>daniel_megert</cc>
    
    <cc>pwebster</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1128765</commentid>
    <comment_count>0</comment_count>
    <who name="Tom Lane">tlane</who>
    <bug_when>2008-01-10 04:26:48 -0500</bug_when>
    <thetext>Build ID: M20071023-1652

Steps To Reproduce:
One time I got into a state where any changes to a document produced this exception in the error log:

org.eclipse.core.runtime.AssertionFailedException: assertion failed: 
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:109)
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:95)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.handleAboutToBeChanged(DocumentLineDiffer.java:775)
	at org.eclipse.ui.internal.texteditor.quickdiff.DocumentLineDiffer.documentAboutToBeChanged(DocumentLineDiffer.java:744)

This completely hosed the editor until I closed and reopened it.

Inspecting the code, it looks like DocumentLineDiffer is vulnerable to some race conditions. Of course, race conditions are hard to write repro steps for, but I will explain my analysis below.



More information:
I spy a couple situations that could trigger this assert:

Situation 1: Two threads fire documentAboutToBeChanged events

1. Thread A calls documentAboutToBeChanged. This passes the assert in handleAboutToBeChanged that fThread == null, and sets fThread = A

2. Thread B calls documentAboutToBeChanged. This fails the fThread assert.

(It takes a call to documentChanged after step 1 to set fThread back to null, but there is no guarantee of that.)

Situation 2: Initialization competes with another thread&apos;s documentAboutToBeChanged event

1. fInitializationJob runs on thread A. It sets fState = SYNCHRONIZED (around line 626 in my source) and gets to the point where it calls handleAboutToBeChanged.

2. handleAboutToBeChanged sets fThread = A.

3. Thread B then calls documentAboutToBeChanged, which passes the isInitialized() check that checks fState == SYNCHRONIZED

4. Thread B proceeds to handleAboutToBeChanged which fails the fThread assert</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1128772</commentid>
    <comment_count>1</comment_count>
    <who name="Tom Lane">tlane</who>
    <bug_when>2008-01-10 04:44:32 -0500</bug_when>
    <thetext>Here&apos;s another way to trigger the assert: Throw a RuntimeException in a documentChanged listener that runs before DocumentLineDiffer. The second change will trigger the assert since fThread won&apos;t get set back to null. Granted, this case relies on bad behavior on the part of a listener.
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129013</commentid>
    <comment_count>2</comment_count>
    <who name="Dani Megert">daniel_megert</who>
    <bug_when>2008-01-10 12:04:49 -0500</bug_when>
    <thetext>Steps would be great.

*** This bug has been marked as a duplicate of bug 205589 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129119</commentid>
    <comment_count>3</comment_count>
    <who name="Tom Lane">tlane</who>
    <bug_when>2008-01-10 14:04:19 -0500</bug_when>
    <thetext>Let me amend my &quot;situation 1&quot;.. it doesn&apos;t even require 2 different threads. This will happen even if the same thread fires &gt;1 aboutToBeChanged events. That seems like the most likely cause.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1129122</commentid>
    <comment_count>4</comment_count>
    <who name="Tom Lane">tlane</who>
    <bug_when>2008-01-10 14:06:28 -0500</bug_when>
    <thetext>Arg.. nevermind my &quot;most likely cause&quot; sentence.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>