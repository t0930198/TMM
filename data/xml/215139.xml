<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.1"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>215139</bug_id>
          
          <creation_ts>2008-01-13 07:33:00 -0500</creation_ts>
          <short_desc>[search] More options for HierarchyScope</short_desc>
          <delta_ts>2010-05-27 17:42:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>JDT</product>
          <component>Core</component>
          <version>3.4</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>3.6 M3</target_milestone>
          
          <blocked>61185</blocked>
    
    <blocked>288780</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Stephan Herrmann">stephan.herrmann</reporter>
          <assigned_to name="Frederic Fusier">frederic_fusier</assigned_to>
          <cc>baumanbr</cc>
    
    <cc>caniszczyk</cc>
    
    <cc>daniel_megert</cc>
    
    <cc>frederic_fusier</cc>
    
    <cc>markus_keller</cc>
    
    <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1130270</commentid>
    <comment_count>0</comment_count>
      <attachid>86773</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-01-13 07:33:59 -0500</bug_when>
    <thetext>Created attachment 86773
proposed patch against HEAD (v_831)

While implementing bug 61185 I would like to use a
HierarchyScope with more fine grained control.
The use case is to provide a type selection dialog constrained
to subtypes of a given type and constrained to the current project.

For that purpose HierarchyScope would have to be enhanced in to regards:
(1) add a flag &apos;onlySubtypes&apos; 
(2) add a field &apos;javaProject&apos;

For passing the javaProject down to the search engine also new API
in SearchEngine and BasicSearchEngine would be required.

Please see attached patch for details.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1130275</commentid>
    <comment_count>1</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-01-13 08:11:13 -0500</bug_when>
    <thetext>Also when working on bug 61185 I observed that the
TypeNameMatchRequestorWrapper would also capture member types of 
types in the hierarchy, because on certain control flows scope.encloses()
is only called for the IResource (-&gt; matches) but not for the
nested contained types (-&gt; don&apos;t match).
Note that acceptType() is the first method to actually retrieve the ITypes,
so checking can probably _not_ happen earlier up the call stack.

See this attachment for where I sensed the need for an additional
call to scope.encloses(IJavaElement):
https://bugs.eclipse.org/bugs/attachment.cgi?id=86635

Is answering member types the desired behavior in other use cases?
Is this a bug and should be changed globally?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1130517</commentid>
    <comment_count>2</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2008-01-14 07:03:52 -0500</bug_when>
    <thetext>&gt; Is answering member types the desired behavior in other use cases?
&gt; Is this a bug and should be changed globally?

See also bug 215196. I can&apos;t think of a case where it would be useful to get member types when using a hierarchy scope. It would be OK for me to remove the
&quot;or members of the types in this hierarchy&quot;, especially since this spec has not been implemented correctly (at least in HEAD, I have not checked history).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1130944</commentid>
    <comment_count>3</comment_count>
    <who name="Brian Bauman">baumanbr</who>
    <bug_when>2008-01-14 15:34:58 -0500</bug_when>
    <thetext>While we are at it, I figured I would raise the question.  Is there any way to do the HierarchySearch with two Hierarchies?  

In PDE we are using the HierarchySearch to quickly get a list of the valid java classes for an extension.  Though most class type extensions specify either 0 or 1 classes/interfaces users must extend/implement, there is the option to make the user extend a class and implement an interface.  

In this case, it would be nice to show only the classes that extend the specified class and implemented the specified interface.  

I know this is probably outside the design of the HierarchyScope, but thought I would ask to see if we could achieve the desired outcome with minor changes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1133217</commentid>
    <comment_count>4</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-01-17 10:52:05 -0500</bug_when>
    <thetext>Note that no API is really needed. One can create a hierarchy on a given type in a given Java project, then create a Java search scope that uses the subtypes in this hierarchy. E.g.

IType focus = ...;
IJavaProject project = ...;
ITypeHierarchy hierarchy = focus.newTypeHierarchy(project, pm);
IType[] subTypes = hierarchy.getAllSubTypes(focus);
IJavaSearchScope scope = SearchEngine.createJavaSearchScope(subTypes);

For the 2 hierarchies scope problem, you simply need to build the 2 hierarchies and intersect the subtypes from the 2 hierarchies, and create a Java search scope with these subtypes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1133286</commentid>
    <comment_count>5</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-01-17 11:55:23 -0500</bug_when>
    <thetext>(In reply to comment #4)
&gt; Note that no API is really needed...

hm, that&apos;s interesting!

Would the effect be the same also in terms of performance (time&amp;space)?

One more plus: we could even use a ProgressMonitor to give feedback
for longer searching (if relevant) ;-)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1133293</commentid>
    <comment_count>6</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-01-17 12:02:55 -0500</bug_when>
    <thetext>(In reply to comment #5)
&gt; Would the effect be the same also in terms of performance (time&amp;space)?
I believe so, since this we create a hierarchy inside the scope and keep it in the scope. And getAllSubTypes(...) performance is negligible comparing to the hierarchy creation performance. </thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1134605</commentid>
    <comment_count>7</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-01-20 19:01:26 -0500</bug_when>
    <thetext>OK, I tried the suggestion from comment 4, but actually it&apos;s not exactly what
is needed here, since SearchEngine.createJavaSearchScope(subTypes) creates a
scope that will also contain all nested classes within subTypes. 
What we need is compatible classes only.

See also bug 215196 where a similar problem is reported against the hierarchy scope. In contrast to HierarchyScope I believe that createJavaSearchScope 
is right in considering nested types, too.

So, if we go via createJavaSearchScope we&apos;d like a variant with a new flag
&apos;includeNested&apos;, which looks funny since the purpose of the method seems to
be to find contained elements. 
From here I would think the original proposal might still be preferable
(including a fix for 215196).
  </thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1135126</commentid>
    <comment_count>8</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-01-21 11:48:31 -0500</bug_when>
    <thetext>Agreed than my proposal from comment 4 doesn&apos;t work.
We will add your proposal time permitting (tests need to be written first).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1135221</commentid>
    <comment_count>9</comment_count>
    <who name="Brian Bauman">baumanbr</who>
    <bug_when>2008-01-21 13:40:30 -0500</bug_when>
    <thetext>&gt; OK, I tried the suggestion from comment 4, but actually it&apos;s not exactly what
&gt; is needed here, ...

Stephan, thanks for following up with the JDT request to make sure it is what PDE is looking for!  I appreciate all the time and effort you are putting into this.
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1153658</commentid>
    <comment_count>10</comment_count>
      <attachid>89335</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-02-09 09:47:55 -0500</bug_when>
    <thetext>Created attachment 89335
updated patch with initial test

(In reply to comment #8)
&gt; ... tests need to be written first ...

I&apos;ve updated the patch to include an initial test.
Does this look like what you had in mind? Do we need more like that?
So far, I&apos;m testing the &apos;onlySubtypes&apos; flag but not constraining the
scope to a JavaProject.

While writing this test, I found that my previous patch did not
correctly handle multiple types within the same compilation unit.
The updated patch handles that, too.

The scope does not include the focus type (which is perfect for bug 61185).
Hope that will be OK for other uses, too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1194960</commentid>
    <comment_count>11</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-04-05 10:39:46 -0400</bug_when>
    <thetext>Now that M6 is out, this patch from January failed to make it into Ganymede?
That&apos;s sad, because a good solution for bug 61185 actually depends on this.
Bug 61185 in turn has been open since 2004-05-06.
I really wish, I could have helped and did invest some time in this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1196730</commentid>
    <comment_count>12</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-04-08 10:19:45 -0400</bug_when>
    <thetext>Sorry Stephan. We ran out of time to even review your patch. And my understanding was that a workaround had been implemented for bug 61185, so I didn&apos;t see this enhancement as high priority.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1322138</commentid>
    <comment_count>13</comment_count>
      <attachid>111360</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-08-31 12:50:03 -0400</bug_when>
    <thetext>Created attachment 111360
patch updated to HEAD

Although currently marked as closed, bug 61185 still waits for
the enhancement from the patch proposed here.
See bug 61185 comment 23 for how the current solution is incomplete.

The patch in this bug fixes 2 of the 3 mentioned problems.

I&apos;d appreciate any comments on the patch, which I just updated to HEAD
for your convenience ;-)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1323161</commentid>
    <comment_count>14</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2008-09-02 10:32:40 -0400</bug_when>
    <thetext>(In reply to comment #13)
&gt; Created an attachment (id=111360) [details]
&gt; patch updated to HEAD
&gt; 
&gt; Although currently marked as closed, bug 61185 still waits for
&gt; the enhancement from the patch proposed here.
&gt; See bug 61185 comment 23 for how the current solution is incomplete.
&gt; 
&gt; The patch in this bug fixes 2 of the 3 mentioned problems.
&gt; 
&gt; I&apos;d appreciate any comments on the patch, which I just updated to HEAD
&gt; for your convenience ;-)
&gt; 
Thanks for the update.

Here are my feedback on this patch:
1) IMO, the working copy owner should be also an argument of the new API method. Either simply added to the proposed method or add an other new API method which would have it.
E.g. 
public static IJavaSearchScope createHierarchyScope(
	IJavaProject project,
	IType type,
	boolean onlySubtypes,
	WorkingCopyOwner owner) throws JavaModelException {

2) Not sure to understand why you used a HashSet subTypes in HierarchyScope.
My understanding was that having created the hierarchy using the ITypeHierarchy.getAllSubtypes(...) method would have been enough, hence no need to modify the encloses(...) methods to get the correct answers...

However, I&apos;m not an expert in this code area...
Jerome, could you please give your mind/advice on the proposed patch and my initial remarks? Thanks
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1323444</commentid>
    <comment_count>15</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-09-02 15:45:56 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; Here are my feedback on this patch:

&gt; 2) Not sure to understand why you used a HashSet subTypes in HierarchyScope.
&gt; My understanding was that having created the hierarchy using the
&gt; ITypeHierarchy.getAllSubtypes(...) method would have been enough, hence no need
&gt; to modify the encloses(...) methods to get the correct answers...

Thanks for commenting.

What you suggest wouldn&apos;t suffice because encloses(IJavaElement)
doesn&apos;t use the result of getAllSubtypes (stored in field &apos;types&apos;),
but goes back to calling this.hierarchy.contains(type), which gives
the wrong result for the requested feature.

Needing to add an additional lookup I decided to use a HashSet,
rather than iterating the &apos;types&apos; array each time encloses is executed.
(for comparison: encloses(String) uses an iterating strategy).
Note that the loop, which I re-use for filling the HashSet,
was already there.

In order to reduce confusion (and footprint?) I&apos;d suggest the opposite:
convert field &apos;types&apos; into a local of method buildResourceVector(),
because that&apos;s how it is currently used(!).

</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1324526</commentid>
    <comment_count>16</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-09-04 06:12:49 -0400</bug_when>
    <thetext>(In reply to comment #14)
&gt; 1) IMO, the working copy owner should be also an argument of the new API
&gt; method. Either simply added to the proposed method or add an other new API
&gt; method which would have it.
&gt; E.g. 
&gt; public static IJavaSearchScope createHierarchyScope(
&gt;         IJavaProject project,
&gt;         IType type,
&gt;         boolean onlySubtypes,
&gt;         WorkingCopyOwner owner) throws JavaModelException {
Agreed. This API should replace the one proposed in comment 13.

(In reply to comment #15)
&gt; In order to reduce confusion (and footprint?) I&apos;d suggest the opposite:
&gt; convert field &apos;types&apos; into a local of method buildResourceVector(),
&gt; because that&apos;s how it is currently used(!).
Agreed. Having &apos;types&apos; defined as a field seems overkill.

For the spec of createHierarchyScope(...) I would explained a little bit more what &apos;onlySubtypes&apos; means. In particular, if &apos;true&apos; is &apos;type&apos; also included&apos;. Maybe give a small example.

Also I&apos;m surprised to see &quot;or members of the types in this hierarchy.&quot; I thought you wanted compatible types only. I believe member if the types in the hierarchy will not be compatible with the focus type.

Finally, this also needs tests. It looks like the patch contains some test data, but no tests.

</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1326819</commentid>
    <comment_count>17</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-09-08 14:49:05 -0400</bug_when>
    <thetext>(In reply to comment #16)

Sorry for the delay, I&apos;m currently attending http://oss2008.dti.unimi.it :)

&gt; For the spec of createHierarchyScope(...) I would explained a little bit more
&gt; what &apos;onlySubtypes&apos; means. In particular, if &apos;true&apos; is &apos;type&apos; also included&apos;.
&gt; Maybe give a small example.

OK, I will expand the documentation a bit.
 
&gt; Also I&apos;m surprised to see &quot;or members of the types in this hierarchy.&quot; I
&gt; thought you wanted compatible types only. I believe member if the types in the
&gt; hierarchy will not be compatible with the focus type.

This piece is inherited from the sibling method SearchEngine#createHierarchyScope(IType).
The sentence reflects the current behavior, but as you assume correctly,
it&apos;s not what we actually want. 
The intended behavior additionally depends on bug 215196.
(But this patch on its own already improves the situation)

&gt; Finally, this also needs tests. It looks like the patch contains some test
&gt; data, but no tests.

I&apos;m sorry, the updated patch is broken. You may see the (terse) test implemention
in attachment 89335, or wait for an new patch (will upload by the end of this week).
If you tell me that the test looks OK, just more needed, I will go ahead writing
a few more variants.
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1346467</commentid>
    <comment_count>18</comment_count>
      <attachid>114603</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-10-08 16:51:57 -0400</bug_when>
    <thetext>Created attachment 114603
Improved patch

I finally found some time to improve the patch:

1. Since isolating this issue from bug 215196 creates an inconsistent
situation (as pointed out in comment 16) I decided to address both issues
in one patch. Instead of the quick&amp;dirty proposal in attachment 86635 
in bug 61185 comment 13 I now propose a new API in IJavaSearchScope 
with default implementation in AbstractJavaSearchScope:
 /**
  * Extra check whether a given type is enclosed, after the
  * containing resource has already been found to be enclosed.
  *
  * @param type the given type.
  * @return &lt;code&gt;true&lt;/code&gt; if the type is in this scope or if no
  *     additional check is required after checking the resource.
  * @since 3.5
  */
 public boolean enclosesTypeOfEnclosedResource(IType type);
 
HierarchyScope overrides the default implementation to perform additional
checks if so required (depending on a new flag field &apos;noMemberTypes&apos;).
This solves the issue of incompatible types contained in the scope.

2. I added the WorkingCopyOwner parameter as suggested in comment 14.

3. I updated and expanded the JavaDoc a bit.

4. I converted HierarchyScope#types into a local variable to avoid the
impression that this variable is used across method calls (see comment 15).

5. I updated the tests (test code was missing from previous patch):
using the same test data the new functionality is tested along
three different call chains.


This should solve all issues in this bug plus the scenarios described
in bug 215196.

To see the old behavior (with 3 of 4 new tests failing) simply 
disable the field assignments in the new ctor of HierarchyScope.

Future: Currently the new API from (1) is only called from
TypeNameMatchRequestorWrapper. I&apos;m not sure if other clients of
TypeNameMatchRequestor should eventually benefit from this API, too.
I looks like a AllTypeDeclarationsVisitor - local type in 
BasicSearchEngine - might be a candidate for future change.

By construction all old scenarios should not be affected by these
changes but only if a HierarchyScope is created using the new API,
the new behavior applies.

PS: I found the reason for the broken patch I previously attached:
&quot;create patch&quot; silently dropped the file JavaSearchTests.java due to
incompatible encodings of special character &apos;§&apos;!
(see bug 214085 comment 4).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1349262</commentid>
    <comment_count>19</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-10-14 10:02:22 -0400</bug_when>
    <thetext>(In reply to comment #18)
Unfortunately you cannot add a new method to an interface that is intended to be implemented by clients. If you show API Problems in the Problems view, you get the following error:

Description	Resource	Path	Location	Type
The method org.eclipse.jdt.core.search.IJavaSearchScope.enclosesTypeOfEnclosedResource(IType) in an interface that is intended to be implemented has been added	IJavaSearchScope.java	org.eclipse.jdt.core/search/org/eclipse/jdt/core/search	line 79	Compatibility Problem
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1349788</commentid>
    <comment_count>20</comment_count>
      <attachid>115095</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-10-14 18:44:21 -0400</bug_when>
    <thetext>Created attachment 115095
patch without change in IJavaSearchScope

(In reply to comment #19)
&gt; Unfortunately you cannot add a new method to an interface that is intended to
&gt; be implemented by clients.

Indeed unfortunate. I updated the patch to use some of those tricks I keep
telling my students to avoid (static, instanceof, cast) ;-P

&gt; If you show API Problems in the Problems view, you
&gt; get the following error: [...]

I didn&apos;t succeed to see this error. Probably, because I don&apos;t have a
proper API baseline (tried the SDK I&apos;m running, but then it is 
probably missing the necessary API meta data, right?).

Is there a FAQ somewhere that tells me how to setup the API tooling
for HEAD development? Or can API-baselines be shared as files??</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1376670</commentid>
    <comment_count>21</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-11-22 15:23:55 -0500</bug_when>
    <thetext>ping :)

anything else I could/should improve here?
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1377256</commentid>
    <comment_count>22</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2008-11-24 11:55:19 -0500</bug_when>
    <thetext>(In reply to comment #20)
&gt; &gt; If you show API Problems in the Problems view, you
&gt; &gt; get the following error: [...]
&gt; 
&gt; I didn&apos;t succeed to see this error. Probably, because I don&apos;t have a
&gt; proper API baseline (tried the SDK I&apos;m running, but then it is 
&gt; probably missing the necessary API meta data, right?).
&gt; 
Sorry, it looks like I missed your last comment. To setup an API baseline, simply follow Help &gt; Contents &gt; Plug-in Development Environment Guide &gt; Tasks &gt; API Tooling &gt; Setting up an API baseline
and point at a 3.4 Eclipse SDK.

Otherwise, for the patch itself:
- I don&apos;t understand &quot;The Java elements resulting from a search with this scope will be types in this hierarchy.&quot; Does it mean that it won&apos;t work if I search for method declarations using this scope? What about if I search for references?
- Why using 2 fields:
	private boolean onlySubtypes= false;
	private HashSet subTypes; // only set when onlySubtypes==true
  when only one (&apos;subTypes&apos;) would be needed
- Why do you need HierarchyScope.enclosesTypeOfEnclosedResource ? Ie. why HierarchyScope.encloses(IJavaElement) is not sufficient?
- We try to only have 1 assert per test (even if some of our tests have several asserts).
- Also please follow the FAQ at http://wiki.eclipse.org/JDT_Core_Committer_FAQ#How_should_I_format_my_code.3F
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1385285</commentid>
    <comment_count>23</comment_count>
      <attachid>119647</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2008-12-05 13:24:52 -0500</bug_when>
    <thetext>Created attachment 119647
updated patch

&gt; Sorry, it looks like I missed your last comment.
No problem ;-)


New patch containing the following significant changes:

1. Split the large test into smaller tests. 
   This revealed a problem with encloses() on an uninitialized scope 
   (wrongly included focus type).
   Fixed.

2. Added more tests regarding member/enclosing types and reg. a method.
   This revealed more inconsistencies a la bug 215196.

   Added more analysis to encloses() to also find members types and
   enclosing types (unless &apos;noMemberTypes=true&apos; was requested).

   Note, that this breaks existing tests (here: testMethodDeclaration04).
   But if consistency should be achieved, I&apos;m afraid this change cannot
   be avoided (see bug 215196 for details).
   Leaving the broken test for you to accept or reject the new outcome.

   Bug 215196 suggests to expect nested but _not_ enclosing types.
   Instead, my patch adjusts HierarchyScope to mimic the existing 
   behavior of searchAllTypeNames(), so we have to accept enclosing
   types, too.

More answers:

&gt; - I don&apos;t understand &quot;The Java elements resulting from a search with this
&gt; scope will be types in this hierarchy.&quot; Does it mean that it won&apos;t work if
&gt; I search for method declarations using this scope? What about if I search
&gt; for references?

I see. I was trying to say, that member *types* are not considered. 
I revert to the original wording
  The Java elements resulting from a search with this scope will
  be types in this hierarchy, or members of the types in this hierarchy.
and leave the detail to the paragraph describing the effect of &apos;noMemberTypes&apos;.


&gt; - Why using 2 fields:
&gt;         private boolean onlySubtypes= false;
&gt;         private HashSet subTypes; // only set when onlySubtypes==true
&gt;   when only one (&apos;subTypes&apos;) would be needed

Just matters of taste: I tend to trust an explicit boolean flag more
than checking a reference for null (which could mean very different things).
New patch follows your suggestion.

&gt; - Why do you need HierarchyScope.enclosesTypeOfEnclosedResource ? Ie. why
&gt; HierarchyScope.encloses(IJavaElement) is not sufficient?

Well, after the changes for item (2) above this method is indeed obsolete,
leaving only one instanceof check in TypeNameMatchRequestorWrapper#accept.

&gt; - Also please follow the FAQ at
&gt; http://wiki.eclipse.org/JDT_Core_Committer_FAQ#How_should_I_format_my_code.

I&apos;m not 100% sure what you mean (I&apos;ve seen the FAQ before) but I tried to
stay closer to the formatting found in those files (although my monitor is 
not wide enough to display a 180 character method signature on one line :( )
(oops, &quot;var= val;&quot;  was JDT/UI style ;-)


Lastly regarding API tooling:

&gt; To setup an API baseline,
&gt; simply follow Help &gt; Contents &gt; Plug-in Development Environment Guide &gt;
&gt; Tasks &gt; API Tooling &gt; Setting up an API baseline
&gt; and point at a 3.4 Eclipse SDK.

I did exactly what is described there, but it doesn&apos;t let me see the 
error message. I repeated the procedure today on a different machine,
and this time API tools complain:
  The major version should be incremented in version 3.5.0.qualifier,
  since API breakage occurred since version 3.4.2.v_883_R34x
In the quickfix details it complains that tens or hundrets of classes
have been removed (which are not).
And still I&apos;m not seeing the expected error if I add a method to 
IJavaSearchScope plus implementing classes.
Does any of this sound like I should file a bug against API tooling?
Or am I doing something really stupid?
(I&apos;m running SDK 3.4.1 with source projects from HEAD).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1410628</commentid>
    <comment_count>24</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-01-20 10:51:25 -0500</bug_when>
    <thetext>ping ;-)

Is it already too late for M5?
Should we try to get this into M6?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1410668</commentid>
    <comment_count>25</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2009-01-20 11:33:11 -0500</bug_when>
    <thetext>Sorry, it is getting harder and harder for me to find time to review patches. Anyway I&apos;ll try to find some time this week and post comments here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1413219</commentid>
    <comment_count>26</comment_count>
    <who name="Jerome Lanneluc">jerome_lanneluc</who>
    <bug_when>2009-01-22 12:20:54 -0500</bug_when>
    <thetext>1. Two errors in Problems view:
Description	Resource	Path	Location	Type
Missing @since tag on createHierarchyScope(IJavaProject, IType, boolean, boolean, WorkingCopyOwner)	SearchEngine.java	org.eclipse.jdt.core/search/org/eclipse/jdt/core/search	line 194	@since tag problem
The import org.eclipse.jdt.core.search.IJavaSearchScope is never used	HierarchyScope.java	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search	line 21	Java Problem

2. HierarchyScope.buildResourceVector()
   Changed type.resource() to type.getResource(). Why?

3. TypeNameMatchRequestorWrapper.acceptType(int, char[], char[], char[][], String, AccessRestriction)
   a. Why the special check for HierarchyScope? 
   b. Test looks bogus: the type is accepted if it is not included in the scope
   c. What are the performance implication? (e.g. in the Open Type dialog case)


</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1413464</commentid>
    <comment_count>27</comment_count>
      <attachid>123432</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-01-22 16:28:15 -0500</bug_when>
    <thetext>Created attachment 123432
updated patch

Jerome, thanks for your comments.
I appreciate your taking the time.

&gt; 1. Two errors in Problems view:

Fixed.

(the @since tag problem I didn&apos;t see, since I never got 
API tooling to work correctly :( )

&gt; 2. HierarchyScope.buildResourceVector()
&gt;    Changed type.resource() to type.getResource(). Why?

Just to get rid of the cast to JavaElement. I see now that this
trades a cast for one more method call. Behavior is the same.
Please feel free to change back, if you prefer so.

&gt; 3. TypeNameMatchRequestorWrapper.acceptType(int, char[], char[], char[][],
&gt; String, AccessRestriction)
&gt;    a. Why the special check for HierarchyScope? 

To limit the change to the use case at hand. Should other kinds of
scope be affected, too? I have no indications for that.

&gt;    b. Test looks bogus: the type is accepted if it is not included in the scope

Test is saying:
  if (isHierarchScope implies encloses) ...
encoding (a =&gt; b) as (!a || b).

(Not does not apply to encloses).

&gt;    c. What are the performance implication? (e.g. in the Open Type dialog case)

I&apos;m not sure how to measure this, indeed.
However, Open Type dialog shouldn&apos;t be affected, because non-hierarchy
scope only eval the &apos;instanceof&apos;, not the &apos;encloses&apos; part.

I&apos;ve fixed the two errors (1) and updated to head.
Regarding (2) you may choose, regarding (3) I see no need for action,
which is also backed by the tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1430215</commentid>
    <comment_count>28</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-02-13 15:27:09 -0500</bug_when>
    <thetext>Please let&apos;s not again miss the deadline for API freeze?
My latest patch should to the best of my knowledge satisfy all your comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1533829</commentid>
    <comment_count>29</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2009-06-28 17:37:15 -0400</bug_when>
    <thetext>Jérôme, could you please give your comments on the last patch from Stephan and then reassign to Srikanth?
Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1560647</commentid>
    <comment_count>30</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2009-07-29 09:05:12 -0400</bug_when>
    <thetext>Frédéric,

Since this concerns search, could you please review the patch?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1562429</commentid>
    <comment_count>31</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-07-31 11:04:21 -0400</bug_when>
    <thetext>(In reply to comment #30)
&gt; Frédéric,
&gt; 
&gt; Since this concerns search, could you please review the patch?
&gt; 
I&apos;m still seeing several issues with the last patch:

1) There&apos;s one failure in search tests: 
   JavaSearchTests.testMethodDeclaration04()

2) Point 2) of comment 26: IMO, there&apos;s more than that as the getResource() 
   returns null for an external resources although resource() does not.
   Hence, I would prefer this change to be reverted...

3) Point 3.a) of comment 26 is definitely annoying: I ran the added tests and 
   see that the additional call to encloses() method was added to make 
   testSearchScope15() working. But the search all type names should only uses 
   scopes to figure out what indexes have to be looked up. Adding a call to ask
   the scope if it encloses the accepted type would break this behavior and
   is not acceptable for performances potential issues as noticed Jerome - and 
   I fully agree with this argument. So, IMO this change should also be 
   reverted.

I&apos;m definitely sorry but my opinion is that this patch cannot be accepted like this for these reasons.

Please fix the failing test and revert changes 2) and 3) and I&apos;ll be happy to review the next patch.
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1562509</commentid>
    <comment_count>32</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-07-31 12:51:53 -0400</bug_when>
    <thetext>Frédéric,
thanks for your comments. I will answer one item at a time.

(In reply to comment #31)
&gt; I&apos;m still seeing several issues with the last patch:
&gt; 
&gt; 1) There&apos;s one failure in search tests: 
&gt;    JavaSearchTests.testMethodDeclaration04()

Yes, this breakage is intrinsic as mentioned in comment 23 (item 2).
It hold that the new outcome (with my patch applied) is actually the
CORRECT outcome wrt the spec of SearchEngine#createHierarchyScope(IType):

  &quot; ... The Java elements resulting from a search with this scope will
  be types in this hierarchy, or members of the types in this hierarchy.&quot;

The crux is: this portion &quot;or members of&quot; is implemented inconsistently
as reported in bug 215196. I.e., depending on cache state the 
hierarchy scope can currently produce either outcome!! 
The said test happens to test the variant that is against the spec.

With my patch in place the decision no longer depends on cache state
but on an explicit flag.

To see the old test result simply change from
  SearchEngine.createHierarchyScope(type)
to
  SearchEngine.createHierarchyScope(null, type, false, true, null)

I recognize that this makes the proposed change a sensitive issue, 
but how to procede with the current inconsistency/bug ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1562516</commentid>
    <comment_count>33</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-07-31 12:55:03 -0400</bug_when>
    <thetext>(In reply to comment #31)
&gt; 2) Point 2) of comment 26: IMO, there&apos;s more than that as the getResource() 
&gt;    returns null for an external resources although resource() does not.
&gt;    Hence, I would prefer this change to be reverted...

Sorry, I missed that difference. So I agree to revert this part.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1562574</commentid>
    <comment_count>34</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-07-31 14:14:29 -0400</bug_when>
    <thetext>(In reply to comment #31)
&gt; 3) Point 3.a) of comment 26 is definitely annoying: I ran the added tests and 
&gt;    see that the additional call to encloses() method was added to make 
&gt;    testSearchScope15() working. But the search all type names should only uses 
&gt;    scopes to figure out what indexes have to be looked up. Adding a call to ask
&gt;    the scope if it encloses the accepted type would break this behavior and
&gt;    is not acceptable for performances potential issues as noticed Jerome - and 
&gt;    I fully agree with this argument. So, IMO this change should also be 
&gt;    reverted.

OK, this is the most difficult to answer.

If I get you right, you&apos;re saying that for performance reasons, 
searchAllTypeNames() must not use scope.encloses(). From the current
implementation this seems to lead to the conclusion that an index based
search for types of a hierarchy without members and enclosings is
impossible to implement. :(

The problem is that the resource vector of a hierarchy scope (&quot;resourcePaths&quot;)
covers more types than the set of contained types (&quot;types&quot; as retrieved
from the type hierarchy).
If search is based on resources only, we MUST admit ALL types in the 
given resources.

The check that I inserted sits exactly at the only location that
I could find that has all required information at hand to filter out
unwanted types that are contained in resources of the hierarchy.

At the point where HierarchyScope.encloses(IJavaElement) detects a false
positive the stack looks like this (parameters omitted for readability):

9. HierarchyScope.encloses() line: 336
8. TypeNameMatchRequestorWrapper.acceptType() line: 112
7. BasicSearchEngine$4.acceptIndexMatch() line: 1364
6. MultiTypeDeclarationPattern(SearchPattern).acceptMatch() line: 299
5. MultiTypeDeclarationPattern(SearchPattern).findIndexMatches() line: 2124
4. MatchLocator.findIndexMatches() line: 264
3. PatternSearchJob.search() line: 97
2. PatternSearchJob.execute() line: 63
1. IndexManager(JobManager).performConcurrentJob() line: 276
0. BasicSearchEngine.searchAllTypeNames() line: 1374

Here frame 5 iterates over all index matches.
Frame 6 checks for each match whether the containing resource
is contained in the hierarchy (ignoring that actual type):
  scope.encloses(documentPath)
So we invoke frame 7 once for each type in a matching document.
Only in frame 8 we retrieve the corresponding IType, but this 
contains false positives, as mentioned.

The best attempt I could imagine is guarding the call to 
this.scope.encloses(type) with a check whether filtering of
members/enclosing is desired. If not, skip the test.
If you don&apos;t indicate differently, I will prepare an updated patch
with this additional guard plus the revert promised in comment 33.

If, OTOH, I would revert this change, my patch would further aggrevate
the existing inconsistency of bug 215196.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1564053</commentid>
    <comment_count>35</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-08-04 10:46:47 -0400</bug_when>
    <thetext>(In reply to comment #32)
It&apos;s OK for me to change the test expected result

(In reply to comment #33)
OK

(In reply to comment #34)
&gt; (In reply to comment #31)
&gt; 
&gt; If I get you right, you&apos;re saying that for performance reasons, 
&gt; searchAllTypeNames() must not use scope.encloses(). From the current
&gt; implementation this seems to lead to the conclusion that an index based
&gt; search for types of a hierarchy without members and enclosings is
&gt; impossible to implement. :(
&gt; 
Not impossible, but surely would have worst performance than current implementation. The search all type names functionality design is entirely focused on performance aspect. The main reason for that is that it&apos;s mainly used by the Open Type dialog and Code Assist and both should perform as fast as possible even with a huge number of types in the workspace...

&gt; The problem is that the resource vector of a hierarchy scope (&quot;resourcePaths&quot;)
&gt; covers more types than the set of contained types (&quot;types&quot; as retrieved
&gt; from the type hierarchy).
&gt; If search is based on resources only, we MUST admit ALL types in the 
&gt; given resources.
&gt; 
Yes, you must admit all types, but your requestor can filter member types after. The will only slow your specific functionality and not the basic ones...

&gt; The check that I inserted sits exactly at the only location that
&gt; I could find that has all required information at hand to filter out
&gt; unwanted types that are contained in resources of the hierarchy.
&gt; 
&gt; At the point where HierarchyScope.encloses(IJavaElement) detects a false
&gt; positive the stack looks like this (parameters omitted for readability):
&gt; 
&gt; 9. HierarchyScope.encloses() line: 336
&gt; 8. TypeNameMatchRequestorWrapper.acceptType() line: 112
&gt; 7. BasicSearchEngine$4.acceptIndexMatch() line: 1364
&gt; 6. MultiTypeDeclarationPattern(SearchPattern).acceptMatch() line: 299
&gt; 5. MultiTypeDeclarationPattern(SearchPattern).findIndexMatches() line: 2124
&gt; 4. MatchLocator.findIndexMatches() line: 264
&gt; 3. PatternSearchJob.search() line: 97
&gt; 2. PatternSearchJob.execute() line: 63
&gt; 1. IndexManager(JobManager).performConcurrentJob() line: 276
&gt; 0. BasicSearchEngine.searchAllTypeNames() line: 1374
&gt; 
&gt; Here frame 5 iterates over all index matches.
&gt; Frame 6 checks for each match whether the containing resource
&gt; is contained in the hierarchy (ignoring that actual type):
&gt;   scope.encloses(documentPath)
&gt; So we invoke frame 7 once for each type in a matching document.
&gt; Only in frame 8 we retrieve the corresponding IType, but this 
&gt; contains false positives, as mentioned.
&gt; 
&gt; The best attempt I could imagine is guarding the call to 
&gt; this.scope.encloses(type) with a check whether filtering of
&gt; members/enclosing is desired. If not, skip the test.
&gt; If you don&apos;t indicate differently, I will prepare an updated patch
&gt; with this additional guard plus the revert promised in comment 33.
&gt; 
&gt; If, OTOH, I would revert this change, my patch would further aggrevate
&gt; the existing inconsistency of bug 215196.
&gt; 
So, my proposal would be to revert the change done in TypeNameMatchRequestorWrapper and change the requestor of the added test testSearchScope15() which will fail without this change as follow:

TypeNameMatchCollector collector = new TypeNameMatchCollector() {
	public void acceptTypeNameMatch(TypeNameMatch match) {
		if (scope.encloses(match.getType())) {
			super.acceptTypeNameMatch(match);
		}
	}
	public String toString(){
		return toFullyQualifiedNamesString();
	}
};

</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1580989</commentid>
    <comment_count>36</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-08-27 14:07:25 -0400</bug_when>
    <thetext>Hi Frederic,

(In reply to comment #35)
&gt; [...] The search all type names functionality design is entirely
&gt; focused on performance aspect. The main reason for that is that it&apos;s mainly
&gt; used by the Open Type dialog and Code Assist and both should perform as fast as
&gt; possible even with a huge number of types in the workspace...

So is performance the reason why the spec contains &quot;or members of the types in
this hierarchy&quot;? See, e.g., comment 2 for puzzlement about why this is there.

That&apos;s good to know.
 
&gt; So, my proposal would be to revert the change done in
&gt; TypeNameMatchRequestorWrapper and change the requestor of the added test
&gt; testSearchScope15() which will fail without this change as follow:
&gt; 
&gt; TypeNameMatchCollector collector = new TypeNameMatchCollector() {
&gt;         public void acceptTypeNameMatch(TypeNameMatch match) {
&gt;                 if (scope.encloses(match.getType())) {
&gt;                         super.acceptTypeNameMatch(match);
&gt;                 }
&gt;         }
&gt;         public String toString(){
&gt;                 return toFullyQualifiedNamesString();
&gt;         }
&gt; };

If we follow this road, the original use case would also need a small
change in the JDT/UI, because that&apos;s where the requestor sits.
(Original use case == open type dialog filtered to true sub-types
of a given root type).

I will attach the required changes re JDT/UI in a minute. It would
be great if you could help convince them of this solution.


On the other road I&apos;m not yet convinced that my current patch 
(from comment 27 - with changes as described in comment 34)
actually does cause a performance penalty for any mass operation:
 1. Unless a hierarchy scope is used only one instanceof check is performed
    (the performance critical calls to searchAllTypeNames use a
    workspace scope, right?)
 2. Even if a hierarchy scope is used the additional check is only invoked 
    for those types that already passed the index search,
    which shouldn&apos;t be a huge number unless you ask for the hierarchy of 
    Object or Serializable or the like.
    Note that in bug 61185 we already had to disable searching for the
    hierarchy of j.l.Object to pretect against OOME,
    and that was without the patch of this bug.
Apart from this handwaving I&apos;d be happy to learn how to use the
performance tests to gather useful numbers.


Going either road would be fine with me, although I&apos;m still leaning
towards implementing this solely in the core to improve consistency
(bug 215196).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1581002</commentid>
    <comment_count>37</comment_count>
      <attachid>145834</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-08-27 14:17:38 -0400</bug_when>
    <thetext>Created attachment 145834
corresponding jdt/ui patch

This patch would change the requestor that is used in the filtered type
selection dialog. Note, that the direct requestor (TypeSearchRequestor) 
doesn&apos;t have the scope to check, but TypeItemsFilter can easily do so 
(and already does in other situations).

With this patch accepted by JDT/UI the change to TypeNameMatchRequestorWrapper
would be obsolete.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1591413</commentid>
    <comment_count>38</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-09-07 18:43:44 -0400</bug_when>
    <thetext>Adding dependency to the corresponding JDT/UI issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1591814</commentid>
    <comment_count>39</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2009-09-08 13:54:43 -0400</bug_when>
    <thetext>The chosen approach looks like it&apos;s the &quot;right&quot; fix. I have not checked every single change in HierarchyScope for correctness, though.

The current behavior of hierarchy scope is inconsistent, and adding the necessary checks in the client code would not be more performant than doing it correctly in jdt.core. Since the change will only affect hierarchy scopes, this won&apos;t be an issue for the performance-critical calls to searchAllTypeNames(..).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1598645</commentid>
    <comment_count>40</comment_count>
      <attachid>147723</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-09-21 14:31:40 -0400</bug_when>
    <thetext>Created attachment 147723
once more updated patch

This patch reflects my thinking with a few updates:

 * reverted type.getResource() back to ((IJavaElement)type).resource()
   as requested in comment 31 point 2)

 * split testMethodDeclaration04 into two cases:
   - new call explicitly requesting the old behavior
   - original call with new expected result
   See discussion in comment 32

 * added additional wrapper method HierarchyScope.enclosesFineGrained,
   so that calls from TypeNameMatchRequestorWrapper will skip tests
   if no specific tests have been requested. This implements what I
   proposed in comment 34 bottom part. I believe this is the best we 
   can do to reconcile performance with consistency.

 * improved javadoc and inline comments

Given that Markus doesn&apos;t seem overly happy about having the UI work around
an inconsistency in the Core, my vote goes for the solution in this patch.

If Core and UI agree on moving that one check from the Core to the
clients, go ahead, but please let&apos;s get this issue off the table, no?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1602854</commentid>
    <comment_count>41</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-09-29 07:35:53 -0400</bug_when>
    <thetext>(In reply to comment #40)
&gt; Created an attachment (id=147723) [details]
&gt; once more updated patch
&gt; ...

I&apos;ll run performance tests with this patch and if no regression is noticeable then I think we could release it...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1603040</commentid>
    <comment_count>42</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2009-09-29 12:12:29 -0400</bug_when>
    <thetext>If Markus is fine with this patch, please proceed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1605636</commentid>
    <comment_count>43</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-10-05 04:09:20 -0400</bug_when>
    <thetext>I&apos;ve run JDT/Core Search performance tests with this patch and did not see any noticeable regression. So, as my concern about performance was not justified, I&apos;m fine with this last patch...

Markus, if you give a +1 on this patch, I would be happy to release it in HEAD and then close this bug long story (Stephan should have a medal for his patience!)...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1605976</commentid>
    <comment_count>44</comment_count>
    <who name="Markus Keller">markus_keller</who>
    <bug_when>2009-10-05 13:19:19 -0400</bug_when>
    <thetext>Looks good and works fine for me.

I tested it with PDEJavaHelperUI.selectType(IResource, int, String, String) updated to use
    searchScope = SearchEngine.createHierarchyScope(javaProject, superType, true, true, null);

Just the Javadoc of the new SearchEngine.createHierarchyScope(IJavaProject, ...) needs a bit of polish:
- Paragraphs should be separated with &lt;p&gt; (check it in the Javadoc hover)
- Could we also allow &lt;code&gt;null&lt;/code&gt; for &apos;project&apos; (meaning a hierarchy for the whole workspace)? It worked fine for me and I think it could be useful.
- description of &apos;owner&apos; needs &quot;, or &lt;code&gt;null&lt;/code&gt; if the primary working copy owner should be used&quot;

We typically have the overloaded method with the most parameters at the end, so I would move the new one after #createHierarchyScope(IType, WorkingCopyOwner)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1605981</commentid>
    <comment_count>45</comment_count>
    <who name="Chris Aniszczyk">caniszczyk</who>
    <bug_when>2009-10-05 13:25:05 -0400</bug_when>
    <thetext>Great stuff guys!

Is this targeted for Eclipse 3.5 M3?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1605994</commentid>
    <comment_count>46</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2009-10-05 13:41:51 -0400</bug_when>
    <thetext>(In reply to comment #44)
&gt; I tested it with PDEJavaHelperUI.selectType(IResource, int, String, String)
&gt; updated to use
&gt;     searchScope = SearchEngine.createHierarchyScope(javaProject, superType,
&gt; true, true, null);
&gt; Just the Javadoc of the new SearchEngine.createHierarchyScope(IJavaProject,
&gt; ...) needs a bit of polish:
&gt; - Paragraphs should be separated with &lt;p&gt; (check it in the Javadoc hover)
&gt; - Could we also allow &lt;code&gt;null&lt;/code&gt; for &apos;project&apos; (meaning a hierarchy for
&gt; the whole workspace)? It worked fine for me and I think it could be useful.
&gt; - description of &apos;owner&apos; needs &quot;, or &lt;code&gt;null&lt;/code&gt; if the primary working
&gt; copy owner should be used&quot;
&gt; 
&gt; We typically have the overloaded method with the most parameters at the end, so
&gt; I would move the new one after #createHierarchyScope(IType, WorkingCopyOwner)
Frédéric, please polish the documentation as suggested by Markus and release the code.
Thanks to everyone involved in this bug report!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1606000</commentid>
    <comment_count>47</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-10-05 13:51:00 -0400</bug_when>
    <thetext>Many thanks also from me :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1606009</commentid>
    <comment_count>48</comment_count>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-10-05 14:00:10 -0400</bug_when>
    <thetext>(In reply to comment #44)

&gt; - Could we also allow &lt;code&gt;null&lt;/code&gt; for &apos;project&apos; (meaning a hierarchy for
&gt; the whole workspace)? It worked fine for me and I think it could be useful.

Yes, null is OK here, the HierarchyScope explicitly checks for null
and uses a workspace type hierarchy if no project is given.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1606273</commentid>
    <comment_count>49</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-10-06 02:47:09 -0400</bug_when>
    <thetext>(In reply to comment #46)
&gt; Frédéric, please polish the documentation as suggested by Markus and release
&gt; the code.
&gt; Thanks to everyone involved in this bug report!

As I definitely do not want steal the great work that Stephan did here, I think it would be better that he writes the Markus&apos; proposed polishing and posts the final patch...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1606352</commentid>
    <comment_count>50</comment_count>
      <attachid>148863</attachid>
    <who name="Stephan Herrmann">stephan.herrmann</who>
    <bug_when>2009-10-06 06:33:04 -0400</bug_when>
    <thetext>Created attachment 148863
polished patch

&gt; As I definitely do not want steal the great work that Stephan did here,

I hadn&apos;t looked at it that way ;-) but speaking of credits: I added my name
to the license headers (style copied from other files), d&apos;accord?

&gt; I think it would be better that he writes the Markus&apos; proposed polishing and
&gt; posts the final patch...

Sure. Here it is - I also applied his suggestions to BasicSearchEngine 
(method order) and HierarchyScope (param doc).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1607233</commentid>
    <comment_count>51</comment_count>
      <attachid>148863</attachid>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-10-07 11:05:02 -0400</bug_when>
    <thetext>Comment on attachment 148863
polished patch

Adding your name into the headers was the right thing to do!

Hence setting the iplog and review flag on this patch.

I&apos;ll release it in a few minutes...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1607236</commentid>
    <comment_count>52</comment_count>
    <who name="Frederic Fusier">frederic_fusier</who>
    <bug_when>2009-10-07 11:09:12 -0400</bug_when>
    <thetext>Released for 3.6M3 in HEAD stream.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1617567</commentid>
    <comment_count>53</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2009-10-27 14:52:08 -0400</bug_when>
    <thetext>Verified for 3.6M3 using I20091027-0100</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>86773</attachid>
            <date>2008-01-13 07:33:00 -0500</date>
            <delta_ts>2008-02-09 09:47:55 -0500</delta_ts>
            <desc>proposed patch against HEAD (v_831)</desc>
            <filename>hierarchy-enhancements.diff</filename>
            <type>text/plain</type>
            <size>4899</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">SW5kZXg6IG9yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVu
Z2luZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlw
c2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9C
YXNpY1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjUxCmRpZmYgLXUg
LXIxLjUxIEJhc2ljU2VhcmNoRW5naW5lLmphdmEKLS0tIG9yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZhCTIgRGVjIDIwMDcgMTI6MjQ6MzUg
LTAwMDAJMS41MQorKysgb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2lj
U2VhcmNoRW5naW5lLmphdmEJMTMgSmFuIDIwMDggMTI6MDg6MzYgLTAwMDAKQEAgLTk5LDYgKzk5
LDEzIEBACiAJcHVibGljIHN0YXRpYyBJSmF2YVNlYXJjaFNjb3BlIGNyZWF0ZUhpZXJhcmNoeVNj
b3BlKElUeXBlIHR5cGUpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlyZXR1cm4gY3Jl
YXRlSGllcmFyY2h5U2NvcGUodHlwZSwgRGVmYXVsdFdvcmtpbmdDb3B5T3duZXIuUFJJTUFSWSk7
CiAJfQorCisJLyoqCisJICogQHNlZSBTZWFyY2hFbmdpbmUjY3JlYXRlSGllcmFyY2h5U2NvcGUo
SUphdmFQcm9qZWN0LElUeXBlLGJvb2xlYW4pIGZvciBkZXRhaWxlZCBjb21tZW50LgorCSAqLwor
CXB1YmxpYyBzdGF0aWMgSUphdmFTZWFyY2hTY29wZSBjcmVhdGVIaWVyYXJjaHlTY29wZShJSmF2
YVByb2plY3QgcHJvamVjdCwgSVR5cGUgdHlwZSwgYm9vbGVhbiBvbmx5U3VidHlwZXMpIHRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlyZXR1cm4gbmV3IEhpZXJhcmNoeVNjb3BlKHByb2pl
Y3QsIHR5cGUsIERlZmF1bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlksIG9ubHlTdWJ0eXBlcyk7
CisJfQogCQogCS8qKgogCSAqIEBzZWUgU2VhcmNoRW5naW5lI2NyZWF0ZUhpZXJhcmNoeVNjb3Bl
KElUeXBlLFdvcmtpbmdDb3B5T3duZXIpIGZvciBkZXRhaWxlZCBjb21tZW50LgpJbmRleDogb3Jn
L2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9z
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3Bl
LmphdmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDMKZGlmZiAtdSAtcjEuNDMgSGllcmFyY2h5
U2NvcGUuamF2YQotLS0gb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJh
cmNoeVNjb3BlLmphdmEJMjcgU2VwIDIwMDcgMTY6MzM6NTIgLTAwMDAJMS40MworKysgb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJMTMgSmFu
IDIwMDggMTI6MDg6MzYgLTAwMDAKQEAgLTQ0LDYgKzQ0LDkgQEAKIAkKIAlwdWJsaWMgYm9vbGVh
biBuZWVkc1JlZnJlc2g7CiAKKwlwcml2YXRlIGJvb2xlYW4gb25seVN1YnR5cGVzPSBmYWxzZTsK
Kwlwcml2YXRlIElKYXZhUHJvamVjdCBqYXZhUHJvamVjdD0gbnVsbDsKKwogCS8qIChub24tSmF2
YWRvYykKIAkgKiBBZGRzIHRoZSBnaXZlbiByZXNvdXJjZSB0byB0aGlzIHNlYXJjaCBzY29wZS4K
IAkgKi8KQEAgLTU5LDYgKzYyLDIxIEBACiAJCWVsZW1lbnRzW2VsZW1lbnRDb3VudCsrXSA9IGVs
ZW1lbnQ7CiAJfQogCQorCS8qKgorCSAqIENyZWF0ZXMgYSBuZXcgaGllcmFyY2h5IHNjb3BlIGZv
ciB0aGUgZ2l2ZW4gdHlwZS4KKwkgKiBAcGFyYW0gcHJvamVjdCAgICAgIGNvbnN0cmFpbiB0aGUg
c2VhcmNoIHJlc3VsdCB0byB0aGlzIHByb2plY3QKKwkgKiBAcGFyYW0gdHlwZSAgICAgICAgIHRo
ZSByb290IG9mIHRoZSBoaWVyYXJjaHkKKwkgKiBAcGFyYW0gb3duZXIgCisJICogQHBhcmFtIG9u
bHlTdWJ0eXBlcyBpZiB0cnVlIHNlYXJjaCBvbmx5IHN1YnR5cGVzIG9mICd0eXBlJworCSAqLwor
CXB1YmxpYyBIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QgcHJvamVjdCwgSVR5cGUgdHlwZSwg
V29ya2luZ0NvcHlPd25lciBvd25lciwgYm9vbGVhbiBvbmx5U3VidHlwZXMpIAorCQkJdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiAKKwl7CisJCXRoaXModHlwZSwgb3duZXIpOworCQl0aGlzLmph
dmFQcm9qZWN0PSBwcm9qZWN0OworCQl0aGlzLm9ubHlTdWJ0eXBlcz0gb25seVN1YnR5cGVzOwor
CX0KKwogCS8qIChub24tSmF2YWRvYykKIAkgKiBDcmVhdGVzIGEgbmV3IGhpZWFyY2h5IHNjb3Bl
IGZvciB0aGUgZ2l2ZW4gdHlwZS4KIAkgKi8KQEAgLTEwMCw3ICsxMTgsMTAgQEAKIAlwcml2YXRl
IHZvaWQgYnVpbGRSZXNvdXJjZVZlY3RvcigpIHsKIAkJSGFzaE1hcCByZXNvdXJjZXMgPSBuZXcg
SGFzaE1hcCgpOwogCQlIYXNoTWFwIHBhdGhzID0gbmV3IEhhc2hNYXAoKTsKLQkJdGhpcy50eXBl
cyA9IHRoaXMuaGllcmFyY2h5LmdldEFsbFR5cGVzKCk7CisJCWlmICh0aGlzLm9ubHlTdWJ0eXBl
cykKKwkJCXRoaXMudHlwZXM9IHRoaXMuaGllcmFyY2h5LmdldEFsbFN1YnR5cGVzKHRoaXMuZm9j
dXNUeXBlKTsKKwkJZWxzZQorCQkJdGhpcy50eXBlcyA9IHRoaXMuaGllcmFyY2h5LmdldEFsbFR5
cGVzKCk7CiAJCUlXb3Jrc3BhY2VSb290IHdvcmtzcGFjZVJvb3QgPSBSZXNvdXJjZXNQbHVnaW4u
Z2V0V29ya3NwYWNlKCkuZ2V0Um9vdCgpOwogCQlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMudHlw
ZXMubGVuZ3RoOyBpKyspIHsKIAkJCUlUeXBlIHR5cGUgPSB0aGlzLnR5cGVzW2ldOwpAQCAtMzI1
LDcgKzM0NiwxMCBAQAogCQl0aGlzLmVsZW1lbnRDb3VudCA9IDA7CiAJCXRoaXMubmVlZHNSZWZy
ZXNoID0gZmFsc2U7CiAJCWlmICh0aGlzLmhpZXJhcmNoeSA9PSBudWxsKSB7Ci0JCQl0aGlzLmhp
ZXJhcmNoeSA9IHRoaXMuZm9jdXNUeXBlLm5ld1R5cGVIaWVyYXJjaHkodGhpcy5vd25lciwgbnVs
bCk7CisJCQlpZiAodGhpcy5qYXZhUHJvamVjdCAhPSBudWxsKQorCQkJCXRoaXMuaGllcmFyY2h5
ID0gdGhpcy5mb2N1c1R5cGUubmV3VHlwZUhpZXJhcmNoeSh0aGlzLmphdmFQcm9qZWN0LCB0aGlz
Lm93bmVyLCBudWxsKTsKKwkJCWVsc2UKKwkJCQl0aGlzLmhpZXJhcmNoeSA9IHRoaXMuZm9jdXNU
eXBlLm5ld1R5cGVIaWVyYXJjaHkodGhpcy5vd25lciwgbnVsbCk7CiAJCX0gZWxzZSB7CiAJCQl0
aGlzLmhpZXJhcmNoeS5yZWZyZXNoKG51bGwpOwogCQl9CkluZGV4OiBvcmcvZWNsaXBzZS9qZHQv
Y29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jv
b3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjE0NApk
aWZmIC11IC1yMS4xNDQgU2VhcmNoRW5naW5lLmphdmEKLS0tIG9yZy9lY2xpcHNlL2pkdC9jb3Jl
L3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YQkyIE9jdCAyMDA3IDE3OjEyOjAxIC0wMDAwCTEuMTQ0
CisrKyBvcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEJMTMgSmFu
IDIwMDggMTI6MDg6MzQgLTAwMDAKQEAgLTE2OCw2ICsxNjgsMjEgQEAKIAlwdWJsaWMgc3RhdGlj
IElKYXZhU2VhcmNoU2NvcGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSVR5cGUgdHlwZSkgdGhyb3dz
IEphdmFNb2RlbEV4Y2VwdGlvbiB7CiAJCXJldHVybiBCYXNpY1NlYXJjaEVuZ2luZS5jcmVhdGVI
aWVyYXJjaHlTY29wZSh0eXBlKTsKIAl9CisKKwkvKioKKwkgKiBSZXR1cm5zIGEgSmF2YSBzZWFy
Y2ggc2NvcGUgbGltaXRlZCB0byB0aGUgaGllcmFyY2h5IG9mIHRoZSBnaXZlbiB0eXBlIGFuZCB0
byBhIGdpdmVuIHByb2plY3QuCisJICogVGhlIEphdmEgZWxlbWVudHMgcmVzdWx0aW5nIGZyb20g
YSBzZWFyY2ggd2l0aCB0aGlzIHNjb3BlIHdpbGwKKwkgKiBiZSB0eXBlcyBpbiB0aGlzIGhpZXJh
cmNoeSwgb3IgbWVtYmVycyBvZiB0aGUgdHlwZXMgaW4gdGhpcyBoaWVyYXJjaHkuCisJICoKKwkg
KiBAcGFyYW0gcHJvamVjdCB0aGUgcHJvamVjdCB0byB3aGljaCB0byBjb25zdHJhaW4gdGhlIHNl
YXJjaAorCSAqIEBwYXJhbSB0eXBlIHRoZSBmb2N1cyBvZiB0aGUgaGllcmFyY2h5IHNjb3BlCisJ
ICogQHBhcmFtIG9ubHlTdWJ0eXBlcyBpZiB0cnVlIG9ubHkgc3VidHlwZXMgb2YgJ3R5cGUnIGFy
ZSBjb25zaWRlcmVkCisJICogQHJldHVybiBhIG5ldyBoaWVyYXJjaHkgc2NvcGUKKwkgKiBAZXhj
ZXB0aW9uIEphdmFNb2RlbEV4Y2VwdGlvbiBpZiB0aGUgaGllcmFyY2h5IGNvdWxkIG5vdCBiZSBj
b21wdXRlZCBvbiB0aGUgZ2l2ZW4gdHlwZQorCSAqLworCXB1YmxpYyBzdGF0aWMgSUphdmFTZWFy
Y2hTY29wZSBjcmVhdGVIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QgcHJvamVjdCwgSVR5cGUg
dHlwZSwgYm9vbGVhbiBvbmx5U3VidHlwZXMpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewor
CQlyZXR1cm4gQmFzaWNTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUocHJvamVjdCwg
dHlwZSwgb25seVN1YnR5cGVzKTsKKwl9CiAJCiAJLyoqCiAJICogUmV0dXJucyBhIEphdmEgc2Vh
cmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0aGUgZ2l2ZW4gdHlwZS4K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>89335</attachid>
            <date>2008-02-09 09:47:00 -0500</date>
            <delta_ts>2008-08-31 12:50:03 -0400</delta_ts>
            <desc>updated patch with initial test</desc>
            <filename>bug_215139_patch2.txt</filename>
            <type>text/plain</type>
            <size>10795</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpJ
bmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9IaWVyYXJj
aHlTY29wZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9IaWVyYXJjaHlTY29wZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjQzCmRpZmYgLXUg
LXIxLjQzIEhpZXJhcmNoeVNjb3BlLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFyY2h5U2NvcGUuamF2YQkyNyBTZXAgMjAwNyAxNjozMzo1
MiAtMDAwMAkxLjQzCisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJOSBGZWIgMjAwOCAxNDo0Mzo0OCAtMDAwMApAQCAtNDQs
NiArNDQsMTAgQEAKIAkKIAlwdWJsaWMgYm9vbGVhbiBuZWVkc1JlZnJlc2g7CiAKKwlwcml2YXRl
IGJvb2xlYW4gb25seVN1YnR5cGVzPSBmYWxzZTsKKwlwcml2YXRlIEhhc2hTZXQgc3ViVHlwZXM7
IC8vIG9ubHkgc2V0IHdoZW4gb25seVN1YnR5cGVzPT10cnVlCisJcHJpdmF0ZSBJSmF2YVByb2pl
Y3QgamF2YVByb2plY3Q9IG51bGw7CisKIAkvKiAobm9uLUphdmFkb2MpCiAJICogQWRkcyB0aGUg
Z2l2ZW4gcmVzb3VyY2UgdG8gdGhpcyBzZWFyY2ggc2NvcGUuCiAJICovCkBAIC01OSw2ICs2Mywy
MSBAQAogCQllbGVtZW50c1tlbGVtZW50Q291bnQrK10gPSBlbGVtZW50OwogCX0KIAkKKwkvKioK
KwkgKiBDcmVhdGVzIGEgbmV3IGhpZXJhcmNoeSBzY29wZSBmb3IgdGhlIGdpdmVuIHR5cGUuCisJ
ICogQHBhcmFtIHByb2plY3QgICAgICBjb25zdHJhaW4gdGhlIHNlYXJjaCByZXN1bHQgdG8gdGhp
cyBwcm9qZWN0CisJICogQHBhcmFtIHR5cGUgICAgICAgICB0aGUgcm9vdCBvZiB0aGUgaGllcmFy
Y2h5CisJICogQHBhcmFtIG93bmVyIAorCSAqIEBwYXJhbSBvbmx5U3VidHlwZXMgaWYgdHJ1ZSBz
ZWFyY2ggb25seSBzdWJ0eXBlcyBvZiAndHlwZScgKG5vdCBpbmNsdWRpbmcgJ3R5cGUnKQorCSAq
LworCXB1YmxpYyBIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QgcHJvamVjdCwgSVR5cGUgdHlw
ZSwgV29ya2luZ0NvcHlPd25lciBvd25lciwgYm9vbGVhbiBvbmx5U3VidHlwZXMpIAorCQkJdGhy
b3dzIEphdmFNb2RlbEV4Y2VwdGlvbiAKKwl7CisJCXRoaXModHlwZSwgb3duZXIpOworCQl0aGlz
LmphdmFQcm9qZWN0PSBwcm9qZWN0OworCQl0aGlzLm9ubHlTdWJ0eXBlcz0gb25seVN1YnR5cGVz
OworCX0KKwogCS8qIChub24tSmF2YWRvYykKIAkgKiBDcmVhdGVzIGEgbmV3IGhpZWFyY2h5IHNj
b3BlIGZvciB0aGUgZ2l2ZW4gdHlwZS4KIAkgKi8KQEAgLTEwMCwxMCArMTE5LDE3IEBACiAJcHJp
dmF0ZSB2b2lkIGJ1aWxkUmVzb3VyY2VWZWN0b3IoKSB7CiAJCUhhc2hNYXAgcmVzb3VyY2VzID0g
bmV3IEhhc2hNYXAoKTsKIAkJSGFzaE1hcCBwYXRocyA9IG5ldyBIYXNoTWFwKCk7Ci0JCXRoaXMu
dHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRBbGxUeXBlcygpOworCQlpZiAodGhpcy5vbmx5U3Vi
dHlwZXMpIHsKKwkJCXRoaXMudHlwZXM9IHRoaXMuaGllcmFyY2h5LmdldEFsbFN1YnR5cGVzKHRo
aXMuZm9jdXNUeXBlKTsKKwkJCXRoaXMuc3ViVHlwZXM9IG5ldyBIYXNoU2V0KHRoaXMudHlwZXMu
bGVuZ3RoKTsKKwkJfSBlbHNlIHsKKwkJCXRoaXMudHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRB
bGxUeXBlcygpOworCQl9CiAJCUlXb3Jrc3BhY2VSb290IHdvcmtzcGFjZVJvb3QgPSBSZXNvdXJj
ZXNQbHVnaW4uZ2V0V29ya3NwYWNlKCkuZ2V0Um9vdCgpOwogCQlmb3IgKGludCBpID0gMDsgaSA8
IHRoaXMudHlwZXMubGVuZ3RoOyBpKyspIHsKIAkJCUlUeXBlIHR5cGUgPSB0aGlzLnR5cGVzW2ld
OworCQkJaWYgKHRoaXMub25seVN1YnR5cGVzKQorCQkJCXRoaXMuc3ViVHlwZXMuYWRkKHR5cGUp
OwogCQkJSVJlc291cmNlIHJlc291cmNlID0gdHlwZS5nZXRSZXNvdXJjZSgpOwogCQkJaWYgKHJl
c291cmNlICE9IG51bGwgJiYgcmVzb3VyY2VzLmdldChyZXNvdXJjZSkgPT0gbnVsbCkgewogCQkJ
CXJlc291cmNlcy5wdXQocmVzb3VyY2UsIHJlc291cmNlKTsKQEAgLTI4OCw2ICszMTQsMTYgQEAK
IAkJSVR5cGUgdHlwZSA9IG51bGw7CiAJCWlmIChlbGVtZW50IGluc3RhbmNlb2YgSVR5cGUpIHsK
IAkJCXR5cGUgPSAoSVR5cGUpIGVsZW1lbnQ7CisgICAgICAgICAgICBpZiAodGhpcy5vbmx5U3Vi
dHlwZXMpIHsKKyAgICAgICAgICAgIAkvLyBzZWFyY2hpbmcgc3VidHlwZXMgYW5kIGhhdmUgYSB0
eXBlOiBvbmx5IGNoZWNrIGluIHRoaXMuc3ViVHlwZXM6CisgICAgICAgICAgICAJaWYgKHRoaXMu
c3ViVHlwZXMuY29udGFpbnModHlwZSkpCisgICAgICAgICAgICAJCXJldHVybiB0cnVlOworICAg
ICAgICAgICAgCS8vIGJlIGZsZXhpYmxlOiBsb29rIGF0IG9yaWdpbmFsIGVsZW1lbnQgKHNlZSBi
dWcgMTQxMDYgYW5kIGJlbG93KQorICAgICAgICAgICAgICAgIElUeXBlIG9yaWdpbmFsID0gdHlw
ZS5pc0JpbmFyeSgpID8gbnVsbCA6IChJVHlwZSl0eXBlLmdldFByaW1hcnlFbGVtZW50KCk7Cisg
ICAgICAgICAgICAgICAgaWYgKG9yaWdpbmFsICE9IHR5cGUgJiYgdGhpcy5zdWJUeXBlcy5jb250
YWlucyhvcmlnaW5hbCkpIAorICAgICAgICAgICAgICAgIAlyZXR1cm4gdHJ1ZTsKKyAgICAgICAg
ICAgICAgICByZXR1cm4gZmFsc2U7CisgICAgICAgICAgICB9CiAJCX0gZWxzZSBpZiAoZWxlbWVu
dCBpbnN0YW5jZW9mIElNZW1iZXIpIHsKIAkJCXR5cGUgPSAoKElNZW1iZXIpIGVsZW1lbnQpLmdl
dERlY2xhcmluZ1R5cGUoKTsKIAkJfQpAQCAtMzI1LDcgKzM2MSwxMCBAQAogCQl0aGlzLmVsZW1l
bnRDb3VudCA9IDA7CiAJCXRoaXMubmVlZHNSZWZyZXNoID0gZmFsc2U7CiAJCWlmICh0aGlzLmhp
ZXJhcmNoeSA9PSBudWxsKSB7Ci0JCQl0aGlzLmhpZXJhcmNoeSA9IHRoaXMuZm9jdXNUeXBlLm5l
d1R5cGVIaWVyYXJjaHkodGhpcy5vd25lciwgbnVsbCk7CisJCQlpZiAodGhpcy5qYXZhUHJvamVj
dCAhPSBudWxsKQorCQkJCXRoaXMuaGllcmFyY2h5ID0gdGhpcy5mb2N1c1R5cGUubmV3VHlwZUhp
ZXJhcmNoeSh0aGlzLmphdmFQcm9qZWN0LCB0aGlzLm93bmVyLCBudWxsKTsKKwkJCWVsc2UKKwkJ
CQl0aGlzLmhpZXJhcmNoeSA9IHRoaXMuZm9jdXNUeXBlLm5ld1R5cGVIaWVyYXJjaHkodGhpcy5v
d25lciwgbnVsbCk7CiAJCX0gZWxzZSB7CiAJCQl0aGlzLmhpZXJhcmNoeS5yZWZyZXNoKG51bGwp
OwogCQl9CkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNo
L0Jhc2ljU2VhcmNoRW5naW5lLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L2NvcmUvc2VhcmNoL0Jhc2ljU2VhcmNoRW5naW5lLmphdmEsdgpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuNTIKZGlmZiAtdSAtcjEuNTIgQmFzaWNTZWFyY2hFbmdpbmUuamF2YQotLS0gc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZh
CTE1IEphbiAyMDA4IDEwOjAwOjUxIC0wMDAwCTEuNTIKKysrIHNlYXJjaC9vcmcvZWNsaXBzZS9q
ZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvQmFzaWNTZWFyY2hFbmdpbmUuamF2YQk5IEZlYiAyMDA4
IDE0OjQzOjQ3IC0wMDAwCkBAIC05OSw2ICs5OSwxMyBAQAogCXB1YmxpYyBzdGF0aWMgSUphdmFT
ZWFyY2hTY29wZSBjcmVhdGVIaWVyYXJjaHlTY29wZShJVHlwZSB0eXBlKSB0aHJvd3MgSmF2YU1v
ZGVsRXhjZXB0aW9uIHsKIAkJcmV0dXJuIGNyZWF0ZUhpZXJhcmNoeVNjb3BlKHR5cGUsIERlZmF1
bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlkpOwogCX0KKworCS8qKgorCSAqIEBzZWUgU2VhcmNo
RW5naW5lI2NyZWF0ZUhpZXJhcmNoeVNjb3BlKElKYXZhUHJvamVjdCxJVHlwZSxib29sZWFuKSBm
b3IgZGV0YWlsZWQgY29tbWVudC4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIElKYXZhU2VhcmNoU2Nv
cGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0IHByb2plY3QsIElUeXBlIHR5cGUs
IGJvb2xlYW4gb25seVN1YnR5cGVzKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJcmV0
dXJuIG5ldyBIaWVyYXJjaHlTY29wZShwcm9qZWN0LCB0eXBlLCBEZWZhdWx0V29ya2luZ0NvcHlP
d25lci5QUklNQVJZLCBvbmx5U3VidHlwZXMpOworCX0KIAkKIAkvKioKIAkgKiBAc2VlIFNlYXJj
aEVuZ2luZSNjcmVhdGVIaWVyYXJjaHlTY29wZShJVHlwZSxXb3JraW5nQ29weU93bmVyKSBmb3Ig
ZGV0YWlsZWQgY29tbWVudC4KSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFy
Y2gvU2VhcmNoRW5naW5lLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNo
L1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjE0NApkaWZmIC11IC1y
MS4xNDQgU2VhcmNoRW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9z
ZWFyY2gvU2VhcmNoRW5naW5lLmphdmEJMiBPY3QgMjAwNyAxNzoxMjowMSAtMDAwMAkxLjE0NAor
Kysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YQk5
IEZlYiAyMDA4IDE0OjQzOjQ1IC0wMDAwCkBAIC0xNjgsNiArMTY4LDIxIEBACiAJcHVibGljIHN0
YXRpYyBJSmF2YVNlYXJjaFNjb3BlIGNyZWF0ZUhpZXJhcmNoeVNjb3BlKElUeXBlIHR5cGUpIHRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24gewogCQlyZXR1cm4gQmFzaWNTZWFyY2hFbmdpbmUuY3Jl
YXRlSGllcmFyY2h5U2NvcGUodHlwZSk7CiAJfQorCisJLyoqCisJICogUmV0dXJucyBhIEphdmEg
c2VhcmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0aGUgZ2l2ZW4gdHlwZSBh
bmQgdG8gYSBnaXZlbiBwcm9qZWN0LgorCSAqIFRoZSBKYXZhIGVsZW1lbnRzIHJlc3VsdGluZyBm
cm9tIGEgc2VhcmNoIHdpdGggdGhpcyBzY29wZSB3aWxsCisJICogYmUgdHlwZXMgaW4gdGhpcyBo
aWVyYXJjaHksIG9yIG1lbWJlcnMgb2YgdGhlIHR5cGVzIGluIHRoaXMgaGllcmFyY2h5LgorCSAq
CisJICogQHBhcmFtIHByb2plY3QgdGhlIHByb2plY3QgdG8gd2hpY2ggdG8gY29uc3RyYWluIHRo
ZSBzZWFyY2gKKwkgKiBAcGFyYW0gdHlwZSB0aGUgZm9jdXMgb2YgdGhlIGhpZXJhcmNoeSBzY29w
ZQorCSAqIEBwYXJhbSBvbmx5U3VidHlwZXMgaWYgdHJ1ZSBvbmx5IHN1YnR5cGVzIG9mICd0eXBl
JyBhcmUgY29uc2lkZXJlZAorCSAqIEByZXR1cm4gYSBuZXcgaGllcmFyY2h5IHNjb3BlCisJICog
QGV4Y2VwdGlvbiBKYXZhTW9kZWxFeGNlcHRpb24gaWYgdGhlIGhpZXJhcmNoeSBjb3VsZCBub3Qg
YmUgY29tcHV0ZWQgb24gdGhlIGdpdmVuIHR5cGUKKwkgKi8KKwlwdWJsaWMgc3RhdGljIElKYXZh
U2VhcmNoU2NvcGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0IHByb2plY3QsIElU
eXBlIHR5cGUsIGJvb2xlYW4gb25seVN1YnR5cGVzKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9u
IHsKKwkJcmV0dXJuIEJhc2ljU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKHByb2pl
Y3QsIHR5cGUsIG9ubHlTdWJ0eXBlcyk7CisJfQogCQogCS8qKgogCSAqIFJldHVybnMgYSBKYXZh
IHNlYXJjaCBzY29wZSBsaW1pdGVkIHRvIHRoZSBoaWVyYXJjaHkgb2YgdGhlIGdpdmVuIHR5cGUu
CiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsCkluZGV4OiBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3RzLmphdmEKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpS
Q1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2Rl
bC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3RzLmph
dmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTY5CmRpZmYgLXUgLXIxLjE2OSBKYXZhU2VhcmNo
VGVzdHMuamF2YQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFT
ZWFyY2hUZXN0cy5qYXZhCTI3IE5vdiAyMDA3IDA4OjQyOjA2IC0wMDAwCTEuMTY5CisrKyBzcmMv
b3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3RzLmphdmEJOSBG
ZWIgMjAwOCAxNDo0Mzo1NiAtMDAwMApAQCAtMjIzOCw2ICsyMjM4LDQxIEBACiAJCiB9CiAvKioK
KyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAy
MTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0
U2VhcmNoU2NvcGUwNigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9u
VW5pdCBjdUIgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwg
ImExMCIsICJCLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBn
ZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsK
KyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUQgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQo
IkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJELmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0
aW9uVW5pdCBjdUUgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3Jj
IiwgImExMCIsICJFLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJD
Iik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRl
SGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSk7CisgICAgICAgIAorICAgICAgICAvLyBk
b24ndCBpbmNsdWRlIHN1cGVyLWNsYXNzZXM6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQSBz
aG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2Vz
KGN1Qi5nZXRUeXBlKCJBIikpKTsKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5CIHNob3VsZCBu
b3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VCLmdl
dFR5cGUoIkIiKSkpOworICAgICAgICBhc3NlcnRGYWxzZSgiYTEwL0IuamF2YSBzaG91bGQgbm90
IGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qi5nZXRV
bmRlcmx5aW5nUmVzb3VyY2UoKS5nZXRGdWxsUGF0aCgpLnRvU3RyaW5nKCkpKTsKKyAgICAgICAg
CisgICAgICAgIC8vIGRvbid0IGluY2x1ZGUgZm9jdXMgdHlwZToKKyAgICAgICAgYXNzZXJ0RmFs
c2UoImExMC5DIHNob3VsZCBiZSBub3QgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2Nv
cGUuZW5jbG9zZXModHlwZSkpOworICAgICAgICBhc3NlcnRGYWxzZSgiYTEwL0MuamF2YSBzaG91
bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VDLmdl
dFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1bGxQYXRoKCkudG9TdHJpbmcoKSkpOworICAgICAg
ICAKKyAgICAgICAgLy8gcmVndWxhciBzdWItdHlwZXM6CisgICAgICAgIGFzc2VydFRydWUoImEx
MC5EIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3Nl
cyhjdUQuZ2V0VHlwZSgiRCIpKSk7CisgICAgICAgIGFzc2VydFRydWUoImExMC9ELmphdmEgc2hv
dWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RC5n
ZXRVbmRlcmx5aW5nUmVzb3VyY2UoKS5nZXRGdWxsUGF0aCgpLnRvU3RyaW5nKCkpKTsKKyAgICAg
ICAgCisgICAgICAgIGFzc2VydFRydWUoImExMC5FIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVy
YXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRSIpKSk7CisgICAgICAg
IGFzc2VydFRydWUoImExMC5GIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUi
LCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRiIpKSk7CisgICAgICAgIGFzc2VydFRydWUo
ImExMC5JIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNs
b3NlcyhjdUUuZ2V0VHlwZSgiSCIpLmdldFR5cGUoIkkiKSkpOworICAgICAgICAvLyBtZW1iZXIg
b2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5HIHNob3VsZCBub3QgYmUg
aW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUo
IkYiKS5nZXRUeXBlKCJHIikpKTsKKyAgICAgICAgLy8gZW5jbG9zaW5nIG9mIGEgc3ViLXR5cGU6
CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuSCBzaG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhp
ZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBlKCJIIikpKTsKKyAgICAg
ICAgYXNzZXJ0VHJ1ZSgiYTEwL0UuamF2YSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5
IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1
bGxQYXRoKCkudG9TdHJpbmcoKSkpOworfQorCisvKioKICAqIFNpbXBsZSB0eXBlIGRlY2xhcmF0
aW9uIHRlc3QuCiAgKi8KIHB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbGFyYXRpb24wMSgpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsgLy8gd2FzIHRlc3RTaW1wbGVUeXBlRGVjbGFyYXRpb24KSW5kZXg6
IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZhCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6
IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZhCmRpZmYgLU4gd29ya3NwYWNlL0ph
dmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAw
IC0wMDAwCisrKyB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQkxIEphbiAxOTcw
IDAwOjAwOjAwIC0wMDAwCkBAIC0wLDAgKzEsMyBAQAorcGFja2FnZSBhMTA7CisKK3B1YmxpYyBj
bGFzcyBEIGV4dGVuZHMgQyB7fQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9D
LmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9D
LmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2YQotLS0gL2Rl
di9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2VhcmNo
L3NyYy9hMTAvQy5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwzIEBA
CitwYWNrYWdlIGExMDsKKworcHVibGljIGNsYXNzIEMgZXh0ZW5kcyBCIHt9CkluZGV4OiB3b3Jr
c3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jr
c3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2Vh
cmNoL3NyYy9hMTAvRS5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAw
MAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9FLmphdmEJMSBKYW4gMTk3MCAwMDow
MDowMCAtMDAwMApAQCAtMCwwICsxLDExIEBACitwYWNrYWdlIGExMDsKKworcHVibGljIGNsYXNz
IEUgZXh0ZW5kcyBEIHt9CisKK2NsYXNzIEYgZXh0ZW5kcyBDIHsKKwljbGFzcyBHIHt9Cit9CisK
K2NsYXNzIEggeyAKKwljbGFzcyBJIGV4dGVuZHMgRSB7fQorfQpJbmRleDogd29ya3NwYWNlL0ph
dmFTZWFyY2gvc3JjL2ExMC9CLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0ph
dmFTZWFyY2gvc3JjL2ExMC9CLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMv
YTEwL0IuamF2YQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdv
cmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAw
MDAKQEAgLTAsMCArMSw1IEBACitwYWNrYWdlIGExMDsKKworY2xhc3MgQSB7IH0KKworcHVibGlj
IGNsYXNzIEIgZXh0ZW5kcyBBIHt9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>111360</attachid>
            <date>2008-08-31 12:50:00 -0400</date>
            <delta_ts>2008-10-08 16:51:57 -0400</delta_ts>
            <desc>patch updated to HEAD</desc>
            <filename>bug_215139_patch3.txt</filename>
            <type>text/plain</type>
            <size>7643</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKZGlm
ZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQotLS0gL2Rldi9udWxsCTEg
SmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAv
RC5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwzIEBACitwYWNrYWdl
IGExMDsKKworcHVibGljIGNsYXNzIEQgZXh0ZW5kcyBDIHt9CkluZGV4OiB3b3Jrc3BhY2UvSmF2
YVNlYXJjaC9zcmMvYTEwL0MuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2
YVNlYXJjaC9zcmMvYTEwL0MuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9h
MTAvQy5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAorKysgd29y
a3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9DLmphdmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAw
MApAQCAtMCwwICsxLDMgQEAKK3BhY2thZ2UgYTEwOworCitwdWJsaWMgY2xhc3MgQyBleHRlbmRz
IEIge30KSW5kZXg6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRS5qYXZhCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRS5qYXZhCmRpZmYgLU4g
d29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9FLmphdmEKLS0tIC9kZXYvbnVsbAkxIEphbiAx
OTcwIDAwOjAwOjAwIC0wMDAwCisrKyB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2
YQkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCkBAIC0wLDAgKzEsMTEgQEAKK3BhY2thZ2UgYTEw
OworCitwdWJsaWMgY2xhc3MgRSBleHRlbmRzIEQge30KKworY2xhc3MgRiBleHRlbmRzIEMgewor
CWNsYXNzIEcge30KK30KKworY2xhc3MgSCB7IAorCWNsYXNzIEkgZXh0ZW5kcyBFIHt9Cit9Cklu
ZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0IuamF2YQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0IuamF2YQpkaWZmIC1OIHdvcmtzcGFj
ZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDow
MDowMCAtMDAwMAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9CLmphdmEJMSBKYW4g
MTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCwwICsxLDUgQEAKK3BhY2thZ2UgYTEwOworCitjbGFz
cyBBIHsgfQorCitwdWJsaWMgY2xhc3MgQiBleHRlbmRzIEEge30KI1Agb3JnLmVjbGlwc2UuamR0
LmNvcmUKSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
SGllcmFyY2h5U2NvcGUuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvSGllcmFyY2h5U2NvcGUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40Ngpk
aWZmIC11IC1yMS40NiBIaWVyYXJjaHlTY29wZS5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJMjcgSnVuIDIwMDgg
MTY6MDQ6MDkgLTAwMDAJMS40NgorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3NlYXJjaC9IaWVyYXJjaHlTY29wZS5qYXZhCTMxIEF1ZyAyMDA4IDE2OjQ0OjM0IC0wMDAw
CkBAIC00NCw2ICs0NCwxMCBAQAogCiAJcHVibGljIGJvb2xlYW4gbmVlZHNSZWZyZXNoOwogCisJ
cHJpdmF0ZSBib29sZWFuIG9ubHlTdWJ0eXBlcz0gZmFsc2U7CisJcHJpdmF0ZSBIYXNoU2V0IHN1
YlR5cGVzOyAvLyBvbmx5IHNldCB3aGVuIG9ubHlTdWJ0eXBlcz09dHJ1ZQorCXByaXZhdGUgSUph
dmFQcm9qZWN0IGphdmFQcm9qZWN0PSBudWxsOworCiAJLyogKG5vbi1KYXZhZG9jKQogCSAqIEFk
ZHMgdGhlIGdpdmVuIHJlc291cmNlIHRvIHRoaXMgc2VhcmNoIHNjb3BlLgogCSAqLwpAQCAtNTks
NiArNjMsMjEgQEAKIAkJdGhpcy5lbGVtZW50c1t0aGlzLmVsZW1lbnRDb3VudCsrXSA9IGVsZW1l
bnQ7CiAJfQogCisJLyoqCisJICogQ3JlYXRlcyBhIG5ldyBoaWVyYXJjaHkgc2NvcGUgZm9yIHRo
ZSBnaXZlbiB0eXBlLgorCSAqIEBwYXJhbSBwcm9qZWN0ICAgICAgY29uc3RyYWluIHRoZSBzZWFy
Y2ggcmVzdWx0IHRvIHRoaXMgcHJvamVjdAorCSAqIEBwYXJhbSB0eXBlICAgICAgICAgdGhlIHJv
b3Qgb2YgdGhlIGhpZXJhcmNoeQorCSAqIEBwYXJhbSBvd25lciAKKwkgKiBAcGFyYW0gb25seVN1
YnR5cGVzIGlmIHRydWUgc2VhcmNoIG9ubHkgc3VidHlwZXMgb2YgJ3R5cGUnIChub3QgaW5jbHVk
aW5nICd0eXBlJykKKwkgKi8KKwlwdWJsaWMgSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0IHBy
b2plY3QsIElUeXBlIHR5cGUsIFdvcmtpbmdDb3B5T3duZXIgb3duZXIsIGJvb2xlYW4gb25seVN1
YnR5cGVzKSAKKwkJCXRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gCisJeworCQl0aGlzKHR5cGUs
IG93bmVyKTsKKwkJdGhpcy5qYXZhUHJvamVjdD0gcHJvamVjdDsKKwkJdGhpcy5vbmx5U3VidHlw
ZXM9IG9ubHlTdWJ0eXBlczsKKwl9CisKIAkvKiAobm9uLUphdmFkb2MpCiAJICogQ3JlYXRlcyBh
IG5ldyBoaWVhcmNoeSBzY29wZSBmb3IgdGhlIGdpdmVuIHR5cGUuCiAJICovCkBAIC0xMDAsMTAg
KzExOSwxNyBAQAogCXByaXZhdGUgdm9pZCBidWlsZFJlc291cmNlVmVjdG9yKCkgewogCQlIYXNo
TWFwIHJlc291cmNlcyA9IG5ldyBIYXNoTWFwKCk7CiAJCUhhc2hNYXAgcGF0aHMgPSBuZXcgSGFz
aE1hcCgpOwotCQl0aGlzLnR5cGVzID0gdGhpcy5oaWVyYXJjaHkuZ2V0QWxsVHlwZXMoKTsKKwkJ
aWYgKHRoaXMub25seVN1YnR5cGVzKSB7CisJCQl0aGlzLnR5cGVzPSB0aGlzLmhpZXJhcmNoeS5n
ZXRBbGxTdWJ0eXBlcyh0aGlzLmZvY3VzVHlwZSk7CisJCQl0aGlzLnN1YlR5cGVzPSBuZXcgSGFz
aFNldCh0aGlzLnR5cGVzLmxlbmd0aCk7CisJCX0gZWxzZSB7CisJCQl0aGlzLnR5cGVzID0gdGhp
cy5oaWVyYXJjaHkuZ2V0QWxsVHlwZXMoKTsKKwkJfQogCQlmb3IgKGludCBpID0gMDsgaSA8IHRo
aXMudHlwZXMubGVuZ3RoOyBpKyspIHsKIAkJCUlUeXBlIHR5cGUgPSB0aGlzLnR5cGVzW2ldOwot
CQkJSVJlc291cmNlIHJlc291cmNlID0gKChKYXZhRWxlbWVudCkgdHlwZSkucmVzb3VyY2UoKTsK
KwkJCWlmICh0aGlzLm9ubHlTdWJ0eXBlcykKKwkJCQl0aGlzLnN1YlR5cGVzLmFkZCh0eXBlKTsK
KwkJCUlSZXNvdXJjZSByZXNvdXJjZSA9IHR5cGUuZ2V0UmVzb3VyY2UoKTsKIAkJCWlmIChyZXNv
dXJjZSAhPSBudWxsICYmIHJlc291cmNlcy5nZXQocmVzb3VyY2UpID09IG51bGwpIHsKIAkJCQly
ZXNvdXJjZXMucHV0KHJlc291cmNlLCByZXNvdXJjZSk7CiAJCQkJYWRkKHJlc291cmNlKTsKQEAg
LTI4Nyw2ICszMTMsMTYgQEAKIAkJSVR5cGUgdHlwZSA9IG51bGw7CiAJCWlmIChlbGVtZW50IGlu
c3RhbmNlb2YgSVR5cGUpIHsKIAkJCXR5cGUgPSAoSVR5cGUpIGVsZW1lbnQ7CisgICAgICAgICAg
ICBpZiAodGhpcy5vbmx5U3VidHlwZXMpIHsKKyAgICAgICAgICAgIAkvLyBzZWFyY2hpbmcgc3Vi
dHlwZXMgYW5kIGhhdmUgYSB0eXBlOiBvbmx5IGNoZWNrIGluIHRoaXMuc3ViVHlwZXM6CisgICAg
ICAgICAgICAJaWYgKHRoaXMuc3ViVHlwZXMuY29udGFpbnModHlwZSkpCisgICAgICAgICAgICAJ
CXJldHVybiB0cnVlOworICAgICAgICAgICAgCS8vIGJlIGZsZXhpYmxlOiBsb29rIGF0IG9yaWdp
bmFsIGVsZW1lbnQgKHNlZSBidWcgMTQxMDYgYW5kIGJlbG93KQorICAgICAgICAgICAgICAgIElU
eXBlIG9yaWdpbmFsID0gdHlwZS5pc0JpbmFyeSgpID8gbnVsbCA6IChJVHlwZSl0eXBlLmdldFBy
aW1hcnlFbGVtZW50KCk7CisgICAgICAgICAgICAgICAgaWYgKG9yaWdpbmFsICE9IHR5cGUgJiYg
dGhpcy5zdWJUeXBlcy5jb250YWlucyhvcmlnaW5hbCkpIAorICAgICAgICAgICAgICAgIAlyZXR1
cm4gdHJ1ZTsKKyAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CisgICAgICAgICAgICB9CiAJ
CX0gZWxzZSBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIElNZW1iZXIpIHsKIAkJCXR5cGUgPSAoKElN
ZW1iZXIpIGVsZW1lbnQpLmdldERlY2xhcmluZ1R5cGUoKTsKIAkJfQpAQCAtMzI0LDcgKzM2MCwx
MCBAQAogCQl0aGlzLmVsZW1lbnRDb3VudCA9IDA7CiAJCXRoaXMubmVlZHNSZWZyZXNoID0gZmFs
c2U7CiAJCWlmICh0aGlzLmhpZXJhcmNoeSA9PSBudWxsKSB7Ci0JCQl0aGlzLmhpZXJhcmNoeSA9
IHRoaXMuZm9jdXNUeXBlLm5ld1R5cGVIaWVyYXJjaHkodGhpcy5vd25lciwgbnVsbCk7CisJCQlp
ZiAodGhpcy5qYXZhUHJvamVjdCAhPSBudWxsKQorCQkJCXRoaXMuaGllcmFyY2h5ID0gdGhpcy5m
b2N1c1R5cGUubmV3VHlwZUhpZXJhcmNoeSh0aGlzLmphdmFQcm9qZWN0LCB0aGlzLm93bmVyLCBu
dWxsKTsKKwkJCWVsc2UKKwkJCQl0aGlzLmhpZXJhcmNoeSA9IHRoaXMuZm9jdXNUeXBlLm5ld1R5
cGVIaWVyYXJjaHkodGhpcy5vd25lciwgbnVsbCk7CiAJCX0gZWxzZSB7CiAJCQl0aGlzLmhpZXJh
cmNoeS5yZWZyZXNoKG51bGwpOwogCQl9CkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2VhcmNoRW5naW5lLmphdmEKPT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1Mg
ZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2VhcmNoRW5naW5lLmphdmEsdgpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuNTYKZGlmZiAtdSAtcjEuNTYgQmFzaWNTZWFyY2hFbmdpbmUu
amF2YQotLS0gc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNp
Y1NlYXJjaEVuZ2luZS5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjA5IC0wMDAwCTEuNTYKKysrIHNl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvQmFzaWNTZWFyY2hFbmdp
bmUuamF2YQkzMSBBdWcgMjAwOCAxNjo0NDozNCAtMDAwMApAQCAtMTAwLDYgKzEwMCwxNCBAQAog
CQlyZXR1cm4gY3JlYXRlSGllcmFyY2h5U2NvcGUodHlwZSwgRGVmYXVsdFdvcmtpbmdDb3B5T3du
ZXIuUFJJTUFSWSk7CiAJfQogCisKKwkvKioKKwkgKiBAc2VlIFNlYXJjaEVuZ2luZSNjcmVhdGVI
aWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QsSVR5cGUsYm9vbGVhbikgZm9yIGRldGFpbGVkIGNv
bW1lbnQuCisJICovCisJcHVibGljIHN0YXRpYyBJSmF2YVNlYXJjaFNjb3BlIGNyZWF0ZUhpZXJh
cmNoeVNjb3BlKElKYXZhUHJvamVjdCBwcm9qZWN0LCBJVHlwZSB0eXBlLCBib29sZWFuIG9ubHlT
dWJ0eXBlcykgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXJldHVybiBuZXcgSGllcmFy
Y2h5U2NvcGUocHJvamVjdCwgdHlwZSwgRGVmYXVsdFdvcmtpbmdDb3B5T3duZXIuUFJJTUFSWSwg
b25seVN1YnR5cGVzKTsKKwl9CisJCiAJLyoqCiAJICogQHNlZSBTZWFyY2hFbmdpbmUjY3JlYXRl
SGllcmFyY2h5U2NvcGUoSVR5cGUsV29ya2luZ0NvcHlPd25lcikgZm9yIGRldGFpbGVkIGNvbW1l
bnQuCiAJICovCkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJj
aEVuZ2luZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hF
bmdpbmUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNDcKZGlmZiAtdSAtcjEuMTQ3IFNl
YXJjaEVuZ2luZS5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1Nl
YXJjaEVuZ2luZS5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjA4IC0wMDAwCTEuMTQ3CisrKyBzZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhCTMxIEF1ZyAy
MDA4IDE2OjQ0OjMxIC0wMDAwCkBAIC0xNzEsNiArMTcxLDIxIEBACiAJfQogCiAJLyoqCisJICog
UmV0dXJucyBhIEphdmEgc2VhcmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0
aGUgZ2l2ZW4gdHlwZSBhbmQgdG8gYSBnaXZlbiBwcm9qZWN0LgorCSAqIFRoZSBKYXZhIGVsZW1l
bnRzIHJlc3VsdGluZyBmcm9tIGEgc2VhcmNoIHdpdGggdGhpcyBzY29wZSB3aWxsCisJICogYmUg
dHlwZXMgaW4gdGhpcyBoaWVyYXJjaHksIG9yIG1lbWJlcnMgb2YgdGhlIHR5cGVzIGluIHRoaXMg
aGllcmFyY2h5LgorCSAqCisJICogQHBhcmFtIHByb2plY3QgdGhlIHByb2plY3QgdG8gd2hpY2gg
dG8gY29uc3RyYWluIHRoZSBzZWFyY2gKKwkgKiBAcGFyYW0gdHlwZSB0aGUgZm9jdXMgb2YgdGhl
IGhpZXJhcmNoeSBzY29wZQorCSAqIEBwYXJhbSBvbmx5U3VidHlwZXMgaWYgdHJ1ZSBvbmx5IHN1
YnR5cGVzIG9mICd0eXBlJyBhcmUgY29uc2lkZXJlZAorCSAqIEByZXR1cm4gYSBuZXcgaGllcmFy
Y2h5IHNjb3BlCisJICogQGV4Y2VwdGlvbiBKYXZhTW9kZWxFeGNlcHRpb24gaWYgdGhlIGhpZXJh
cmNoeSBjb3VsZCBub3QgYmUgY29tcHV0ZWQgb24gdGhlIGdpdmVuIHR5cGUKKwkgKi8KKwlwdWJs
aWMgc3RhdGljIElKYXZhU2VhcmNoU2NvcGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9q
ZWN0IHByb2plY3QsIElUeXBlIHR5cGUsIGJvb2xlYW4gb25seVN1YnR5cGVzKSB0aHJvd3MgSmF2
YU1vZGVsRXhjZXB0aW9uIHsKKwkJcmV0dXJuIEJhc2ljU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJh
cmNoeVNjb3BlKHByb2plY3QsIHR5cGUsIG9ubHlTdWJ0eXBlcyk7CisJfQorCQorCS8qKgogCSAq
IFJldHVybnMgYSBKYXZhIHNlYXJjaCBzY29wZSBsaW1pdGVkIHRvIHRoZSBoaWVyYXJjaHkgb2Yg
dGhlIGdpdmVuIHR5cGUuCiAJICogV2hlbiB0aGUgaGllcmFyY2h5IGlzIGNvbXB1dGVkLCB0aGUg
dHlwZXMgZGVmaW5lZCBpbiB0aGUgd29ya2luZyBjb3BpZXMgb3duZWQKIAkgKiBieSB0aGUgZ2l2
ZW4gb3duZXIgdGFrZSBwcmVjZWRlbmNlIG92ZXIgdGhlIG9yaWdpbmFsIGNvbXBpbGF0aW9uIHVu
aXRzLgo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>114603</attachid>
            <date>2008-10-08 16:51:00 -0400</date>
            <delta_ts>2008-10-14 18:44:21 -0400</delta_ts>
            <desc>Improved patch</desc>
            <filename>bug_215139_patch4.txt</filename>
            <type>text/plain</type>
            <size>19094</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpJ
bmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9JSmF2YVNlYXJjaFNjb3Bl
LmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL0lKYXZhU2VhcmNoU2Nv
cGUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNgpkaWZmIC11IC1yMS4yNiBJSmF2YVNl
YXJjaFNjb3BlLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvSUph
dmFTZWFyY2hTY29wZS5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjA4IC0wMDAwCTEuMjYKKysrIHNl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvSUphdmFTZWFyY2hTY29wZS5qYXZhCTgg
T2N0IDIwMDggMTk6NDk6MjggLTAwMDAKQEAgLTEyLDYgKzEyLDcgQEAKIAogaW1wb3J0IG9yZy5l
Y2xpcHNlLmNvcmUucnVudGltZS5JUGF0aDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS5J
SmF2YUVsZW1lbnQ7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuSVR5cGU7CiAKIC8qKgog
ICogQW4gPGNvZGU+SUphdmFTZWFyY2hTY29wZTwvY29kZT4gZGVmaW5lcyB3aGVyZSBzZWFyY2gg
cmVzdWx0IHNob3VsZCBiZSBmb3VuZCBieSBhCkBAIC02OCw2ICs2OSwxNiBAQAogICovCiBwdWJs
aWMgYm9vbGVhbiBlbmNsb3NlcyhJSmF2YUVsZW1lbnQgZWxlbWVudCk7CiAvKioKKyAqIEV4dHJh
IGNoZWNrIHdoZXRoZXIgYSBnaXZlbiB0eXBlIGlzIGVuY2xvc2VkLCBhZnRlciB0aGUKKyAqIGNv
bnRhaW5pbmcgcmVzb3VyY2UgaGFzIGFscmVhZHkgYmVlbiBmb3VuZCB0byBiZSBlbmNsb3NlZC4K
KyAqIAorICogQHBhcmFtIHR5cGUgdGhlIGdpdmVuIHR5cGUuCisgKiBAcmV0dXJuIDxjb2RlPnRy
dWU8L2NvZGU+IGlmIHRoZSB0eXBlIGlzIGluIHRoaXMgc2NvcGUgb3IgaWYgbm8KKyAqICAJYWRk
aXRpb25hbCBjaGVjayBpcyByZXF1aXJlZCBhZnRlciBjaGVja2luZyB0aGUgcmVzb3VyY2UuCisg
KiBAc2luY2UgMy41CisgKi8KK3B1YmxpYyBib29sZWFuIGVuY2xvc2VzVHlwZU9mRW5jbG9zZWRS
ZXNvdXJjZShJVHlwZSB0eXBlKTsKKy8qKgogICogUmV0dXJucyB0aGUgcGF0aHMgdG8gdGhlIGVu
Y2xvc2luZyBwcm9qZWN0cyBhbmQgSkFScyBmb3IgdGhpcyBzZWFyY2ggc2NvcGUuCiAgKiA8dWw+
CiAgKiA8bGk+IElmIHRoZSBwYXRoIGlzIGEgcHJvamVjdCBwYXRoLCB0aGlzIGlzIHRoZSBmdWxs
IHBhdGggb2YgdGhlIHByb2plY3QKSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9z
ZWFyY2gvU2VhcmNoRW5naW5lLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNs
aXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2Vh
cmNoL1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjE0NwpkaWZmIC11
IC1yMS4xNDcgU2VhcmNoRW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6MDggLTAwMDAJMS4x
NDcKKysrIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmph
dmEJOCBPY3QgMjAwOCAxOTo0OTozMSAtMDAwMApAQCAtMTcxLDYgKzE3MSwzNyBAQAogCX0KIAog
CS8qKgorCSAqIFJldHVybnMgYSBKYXZhIHNlYXJjaCBzY29wZSBsaW1pdGVkIHRvIHRoZSBoaWVy
YXJjaHkgb2YgdGhlIGdpdmVuIHR5cGUgYW5kIHRvIGEgZ2l2ZW4gcHJvamVjdC4KKwkgKiBUaGUg
SmF2YSBlbGVtZW50cyByZXN1bHRpbmcgZnJvbSBhIHNlYXJjaCB3aXRoIHRoaXMgc2NvcGUgd2ls
bCBiZSB0eXBlcyBpbiB0aGlzIGhpZXJhcmNoeS4KKwkgKiAKKwkgKiBCeSBkZWZhdWx0LCBoaWVy
YXJjaHkgc2NvcGVzIGluY2x1ZGUgYWxsIGRpcmVjdCBhbmQgaW5kaXJlY3Qgc3VwZXJ0eXBlcyBh
bmQgc3VidHlwZXMgb2YgdGhlCisJICogZm9jdXMgdHlwZS4gVGhpcyBtZXRob2QsIGhvd2V2ZXIs
IGFsbG93cyB0byByZXN0cmljdCB0aGUgaGllcmFyY2h5IHRvIHRydWUgc3VidHlwZXMsCisJICog
bmVpdGhlciBpbmNsdWRpbmcgc3VwZXJ0eXBlcyBub3IgdGhlIGZvY3VzIHR5cGUgaXRzZWxmLgor
CSAqIAorCSAqIEJ5IGRlZmF1bHQsIGhpZXJhcmNoeSBzY29wZXMgaW5jbHVkZSBhbHNvIG1lbWJl
ciB0eXBlcyBhbmQgZW5jbG9zaW5nIHR5cGVzIG9mIHRob3NlIHR5cGVzCisJICogdGhhdCBhY3R1
YWxseSBzcGFuIHRoZSBoaWVyYXJjaHkuIFRoaXMgbWV0aG9kLCBob3dldmVyLCBhbGxvd3MgdG8g
aW5oaWJpdCB0aGlzIGJlaGF2aW9yLAorCSAqIGJ5IHBhc3NpbmcgPGNvZGU+ZmFsc2U8L2NvZGU+
IHRvIHRoZSBwYXJhbWV0ZXIgPGNvZGU+bm9NZW1iZXJUeXBlczwvY29kZT4uCisJICoKKwkgKiBA
cGFyYW0gcHJvamVjdCB0aGUgcHJvamVjdCB0byB3aGljaCB0byBjb25zdHJhaW4gdGhlIHNlYXJj
aAorCSAqIEBwYXJhbSB0eXBlIHRoZSBmb2N1cyBvZiB0aGUgaGllcmFyY2h5IHNjb3BlCisJICog
QHBhcmFtIG9ubHlTdWJ0eXBlcyBpZiB0cnVlIG9ubHkgc3VidHlwZXMgb2YgPGNvZGU+dHlwZTwv
Y29kZT4gYXJlIGNvbnNpZGVyZWQuCisJICogQHBhcmFtIG5vTWVtYmVyVHlwZXMgaWYgdHJ1ZSBk
byBub3QgY29uc2lkZXIgbWVtYmVyIG9yIGVuY2xvc2luZyB0eXBlcyBvZiB0eXBlcyBpbiB0aGUg
Z2l2ZW4gdHlwZSBoaWVhcmNoeS4KKwkgKiBAcGFyYW0gb3duZXIgdGhlIG93bmVyIG9mIHdvcmtp
bmcgY29waWVzIHRoYXQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgb3JpZ2luYWwgY29tcGlsYXRpb24g
dW5pdHMKKwkgKiBAcmV0dXJuIGEgbmV3IGhpZXJhcmNoeSBzY29wZQorCSAqIEBleGNlcHRpb24g
SmF2YU1vZGVsRXhjZXB0aW9uIGlmIHRoZSBoaWVyYXJjaHkgY291bGQgbm90IGJlIGNvbXB1dGVk
IG9uIHRoZSBnaXZlbiB0eXBlCisJICovCisJcHVibGljIHN0YXRpYyBJSmF2YVNlYXJjaFNjb3Bl
IGNyZWF0ZUhpZXJhcmNoeVNjb3BlKAorCQkJCQkJCQkJSUphdmFQcm9qZWN0IHByb2plY3QsIAor
CQkJCQkJCQkJSVR5cGUgdHlwZSwgCisJCQkJCQkJCQlib29sZWFuIG9ubHlTdWJ0eXBlcywgCisJ
CQkJCQkJCQlib29sZWFuIG5vTWVtYmVyVHlwZXMsIAorCQkJCQkJCQkJV29ya2luZ0NvcHlPd25l
ciBvd25lcikgCisJCQl0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIAorCXsKKwkJcmV0dXJuIEJh
c2ljU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKHByb2plY3QsIHR5cGUsIG9ubHlT
dWJ0eXBlcywgbm9NZW1iZXJUeXBlcywgb3duZXIpOworCX0KKwkKKwkvKioKIAkgKiBSZXR1cm5z
IGEgSmF2YSBzZWFyY2ggc2NvcGUgbGltaXRlZCB0byB0aGUgaGllcmFyY2h5IG9mIHRoZSBnaXZl
biB0eXBlLgogCSAqIFdoZW4gdGhlIGhpZXJhcmNoeSBpcyBjb21wdXRlZCwgdGhlIHR5cGVzIGRl
ZmluZWQgaW4gdGhlIHdvcmtpbmcgY29waWVzIG93bmVkCiAJICogYnkgdGhlIGdpdmVuIG93bmVy
IHRha2UgcHJlY2VkZW5jZSBvdmVyIHRoZSBvcmlnaW5hbCBjb21waWxhdGlvbiB1bml0cy4KSW5k
ZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFyY2h5
U2NvcGUuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xp
cHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
SGllcmFyY2h5U2NvcGUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40NgpkaWZmIC11IC1y
MS40NiBIaWVyYXJjaHlTY29wZS5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVy
bmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6MDkg
LTAwMDAJMS40NgorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9IaWVyYXJjaHlTY29wZS5qYXZhCTggT2N0IDIwMDggMTk6NDk6MzQgLTAwMDAKQEAgLTIwLDkg
KzIwLDYgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4qOwogaW1wb3J0IG9yZy5lY2xp
cHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlN1ZmZpeENvbnN0YW50czsKIGltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb3JlLkphclBhY2thZ2VGcmFnbWVudFJvb3Q7Ci1pbXBvcnQgb3JnLmVjbGlwc2Uu
amR0LmludGVybmFsLmNvcmUuSmF2YUVsZW1lbnQ7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0Lmlu
dGVybmFsLmNvcmUuSmF2YU1vZGVsOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5j
b3JlLmhpZXJhcmNoeS5UeXBlSGllcmFyY2h5OwogCiAvKioKQEAgLTM1LDcgKzMyLDYgQEAKIAlw
cml2YXRlIFdvcmtpbmdDb3B5T3duZXIgb3duZXI7CiAKIAlwcml2YXRlIElUeXBlSGllcmFyY2h5
IGhpZXJhcmNoeTsKLQlwcml2YXRlIElUeXBlW10gdHlwZXM7CiAJcHJpdmF0ZSBIYXNoU2V0IHJl
c291cmNlUGF0aHM7CiAJcHJpdmF0ZSBJUGF0aFtdIGVuY2xvc2luZ1Byb2plY3RzQW5kSmFyczsK
IApAQCAtNDQsNiArNDAsMTEgQEAKIAogCXB1YmxpYyBib29sZWFuIG5lZWRzUmVmcmVzaDsKIAor
CXByaXZhdGUgYm9vbGVhbiBvbmx5U3VidHlwZXM9IGZhbHNlOworCXByaXZhdGUgSGFzaFNldCBz
dWJUeXBlczsgLy8gb25seSBzZXQgd2hlbiBvbmx5U3VidHlwZXM9PXRydWUKKwlwcml2YXRlIElK
YXZhUHJvamVjdCBqYXZhUHJvamVjdD0gbnVsbDsKKwlwcml2YXRlIGJvb2xlYW4gbm9NZW1iZXJU
eXBlcz0gZmFsc2U7CisKIAkvKiAobm9uLUphdmFkb2MpCiAJICogQWRkcyB0aGUgZ2l2ZW4gcmVz
b3VyY2UgdG8gdGhpcyBzZWFyY2ggc2NvcGUuCiAJICovCkBAIC01OSw2ICs2MCwyMyBAQAogCQl0
aGlzLmVsZW1lbnRzW3RoaXMuZWxlbWVudENvdW50KytdID0gZWxlbWVudDsKIAl9CiAKKwkvKioK
KwkgKiBDcmVhdGVzIGEgbmV3IGhpZXJhcmNoeSBzY29wZSBmb3IgdGhlIGdpdmVuIHR5cGUuCisJ
ICogQHBhcmFtIHByb2plY3QgICAgICBjb25zdHJhaW4gdGhlIHNlYXJjaCByZXN1bHQgdG8gdGhp
cyBwcm9qZWN0CisJICogQHBhcmFtIHR5cGUgICAgICAgICB0aGUgZm9jdXMgdHlwZSBvZiB0aGUg
aGllcmFyY2h5CisJICogQHBhcmFtIG93bmVyIAkgICB0aGUgb3duZXIgb2Ygd29ya2luZyBjb3Bp
ZXMgdGhhdCB0YWtlIHByZWNlZGVuY2Ugb3ZlciBvcmlnaW5hbCBjb21waWxhdGlvbiB1bml0cwor
CSAqIEBwYXJhbSBvbmx5U3VidHlwZXMgaWYgdHJ1ZSBzZWFyY2ggb25seSBzdWJ0eXBlcyBvZiAn
dHlwZScgKG5vdCBpbmNsdWRpbmcgJ3R5cGUnKQorCSAqIEBwYXJhbSBub01lbWJlclR5cGVzIGlm
IHRydWUgZG8gbm90IGNvbnNpZGVyIG1lbWJlciBvciBlbmNsb3NpbmcgdHlwZXMgb2YgdHlwZXMg
aW4gdGhlIGdpdmVuIHR5cGUgaGllYXJjaHkuCisJICovCisJcHVibGljIEhpZXJhcmNoeVNjb3Bl
KElKYXZhUHJvamVjdCBwcm9qZWN0LCBJVHlwZSB0eXBlLCBXb3JraW5nQ29weU93bmVyIG93bmVy
LCBib29sZWFuIG9ubHlTdWJ0eXBlcywgYm9vbGVhbiBub01lbWJlclR5cGVzKSAKKwkJCXRocm93
cyBKYXZhTW9kZWxFeGNlcHRpb24gCisJeworCQl0aGlzKHR5cGUsIG93bmVyKTsKKwkJdGhpcy5q
YXZhUHJvamVjdD0gcHJvamVjdDsKKwkJdGhpcy5vbmx5U3VidHlwZXM9IG9ubHlTdWJ0eXBlczsK
KwkJdGhpcy5ub01lbWJlclR5cGVzPSBub01lbWJlclR5cGVzOworCX0KKwogCS8qIChub24tSmF2
YWRvYykKIAkgKiBDcmVhdGVzIGEgbmV3IGhpZWFyY2h5IHNjb3BlIGZvciB0aGUgZ2l2ZW4gdHlw
ZS4KIAkgKi8KQEAgLTEwMCwxMCArMTE4LDE4IEBACiAJcHJpdmF0ZSB2b2lkIGJ1aWxkUmVzb3Vy
Y2VWZWN0b3IoKSB7CiAJCUhhc2hNYXAgcmVzb3VyY2VzID0gbmV3IEhhc2hNYXAoKTsKIAkJSGFz
aE1hcCBwYXRocyA9IG5ldyBIYXNoTWFwKCk7Ci0JCXRoaXMudHlwZXMgPSB0aGlzLmhpZXJhcmNo
eS5nZXRBbGxUeXBlcygpOwotCQlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMudHlwZXMubGVuZ3Ro
OyBpKyspIHsKLQkJCUlUeXBlIHR5cGUgPSB0aGlzLnR5cGVzW2ldOwotCQkJSVJlc291cmNlIHJl
c291cmNlID0gKChKYXZhRWxlbWVudCkgdHlwZSkucmVzb3VyY2UoKTsKKwkJSVR5cGVbXSB0eXBl
cyA9IG51bGw7CisJCWlmICh0aGlzLm9ubHlTdWJ0eXBlcykgeworCQkJdHlwZXM9IHRoaXMuaGll
cmFyY2h5LmdldEFsbFN1YnR5cGVzKHRoaXMuZm9jdXNUeXBlKTsKKwkJCXRoaXMuc3ViVHlwZXM9
IG5ldyBIYXNoU2V0KHR5cGVzLmxlbmd0aCk7CisJCX0gZWxzZSB7CisJCQl0eXBlcyA9IHRoaXMu
aGllcmFyY2h5LmdldEFsbFR5cGVzKCk7CisJCX0KKwkJZm9yIChpbnQgaSA9IDA7IGkgPCB0eXBl
cy5sZW5ndGg7IGkrKykgeworCQkJSVR5cGUgdHlwZSA9IHR5cGVzW2ldOworCQkJaWYgKHRoaXMu
b25seVN1YnR5cGVzKQorCQkJCXRoaXMuc3ViVHlwZXMuYWRkKHR5cGUpOworCQkJSVJlc291cmNl
IHJlc291cmNlID0gdHlwZS5nZXRSZXNvdXJjZSgpOwogCQkJaWYgKHJlc291cmNlICE9IG51bGwg
JiYgcmVzb3VyY2VzLmdldChyZXNvdXJjZSkgPT0gbnVsbCkgewogCQkJCXJlc291cmNlcy5wdXQo
cmVzb3VyY2UsIHJlc291cmNlKTsKIAkJCQlhZGQocmVzb3VyY2UpOwpAQCAtMjg3LDYgKzMxMywx
NiBAQAogCQlJVHlwZSB0eXBlID0gbnVsbDsKIAkJaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBJVHlw
ZSkgewogCQkJdHlwZSA9IChJVHlwZSkgZWxlbWVudDsKKyAgICAgICAgICAgIGlmICh0aGlzLm9u
bHlTdWJ0eXBlcykgeworICAgICAgICAgICAgCS8vIHNlYXJjaGluZyBzdWJ0eXBlcyBhbmQgaGF2
ZSBhIHR5cGU6IG9ubHkgY2hlY2sgaW4gdGhpcy5zdWJUeXBlczoKKyAgICAgICAgICAgIAlpZiAo
dGhpcy5zdWJUeXBlcy5jb250YWlucyh0eXBlKSkKKyAgICAgICAgICAgIAkJcmV0dXJuIHRydWU7
CisgICAgICAgICAgICAJLy8gYmUgZmxleGlibGU6IGxvb2sgYXQgb3JpZ2luYWwgZWxlbWVudCAo
c2VlIGJ1ZyAxNDEwNiBhbmQgYmVsb3cpCisgICAgICAgICAgICAgICAgSVR5cGUgb3JpZ2luYWwg
PSB0eXBlLmlzQmluYXJ5KCkgPyBudWxsIDogKElUeXBlKXR5cGUuZ2V0UHJpbWFyeUVsZW1lbnQo
KTsKKyAgICAgICAgICAgICAgICBpZiAob3JpZ2luYWwgIT0gdHlwZSAmJiB0aGlzLnN1YlR5cGVz
LmNvbnRhaW5zKG9yaWdpbmFsKSkgCisgICAgICAgICAgICAgICAgCXJldHVybiB0cnVlOworICAg
ICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKKyAgICAgICAgICAgIH0KIAkJfSBlbHNlIGlmIChl
bGVtZW50IGluc3RhbmNlb2YgSU1lbWJlcikgewogCQkJdHlwZSA9ICgoSU1lbWJlcikgZWxlbWVu
dCkuZ2V0RGVjbGFyaW5nVHlwZSgpOwogCQl9CkBAIC0zMDUsNiArMzQxLDE1IEBACiAJCXJldHVy
biBmYWxzZTsKIAl9CiAJLyogKG5vbi1KYXZhZG9jKQorCSAqIEBzZWUgSUphdmFTZWFyY2hTY29w
ZSNlbmNsb3Nlc0VsZW1lbnRPZkVuY2xvc2VkUmVzb3VyY2UoSUphdmFFbGVtZW50KQorCSAqLwor
CXB1YmxpYyBib29sZWFuIGVuY2xvc2VzVHlwZU9mRW5jbG9zZWRSZXNvdXJjZShJVHlwZSB0eXBl
KSB7CisJCWlmICh0aGlzLm5vTWVtYmVyVHlwZXMpIHsKKwkJCXJldHVybiB0aGlzLmVuY2xvc2Vz
KHR5cGUpOworCQl9CisJCXJldHVybiB0cnVlOyAvLyBubyBmdXJ0aGVyIGNoZWNrIHJlcXVlc3Rl
ZAorCX0KKwkvKiAobm9uLUphdmFkb2MpCiAJICogQHNlZSBJSmF2YVNlYXJjaFNjb3BlI2VuY2xv
c2luZ1Byb2plY3RzQW5kSmFycygpCiAJICogQGRlcHJlY2F0ZWQKIAkgKi8KQEAgLTMyNCw3ICsz
NjksMTAgQEAKIAkJdGhpcy5lbGVtZW50Q291bnQgPSAwOwogCQl0aGlzLm5lZWRzUmVmcmVzaCA9
IGZhbHNlOwogCQlpZiAodGhpcy5oaWVyYXJjaHkgPT0gbnVsbCkgewotCQkJdGhpcy5oaWVyYXJj
aHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOwor
CQkJaWYgKHRoaXMuamF2YVByb2plY3QgIT0gbnVsbCkKKwkJCQl0aGlzLmhpZXJhcmNoeSA9IHRo
aXMuZm9jdXNUeXBlLm5ld1R5cGVIaWVyYXJjaHkodGhpcy5qYXZhUHJvamVjdCwgdGhpcy5vd25l
ciwgbnVsbCk7CisJCQllbHNlCisJCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5u
ZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOwogCQl9IGVsc2UgewogCQkJdGhpcy5o
aWVyYXJjaHkucmVmcmVzaChudWxsKTsKIAkJfQpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29y
Zy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZh
LHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjU2CmRpZmYgLXUgLXIxLjU2IEJhc2ljU2VhcmNoRW5n
aW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gv
QmFzaWNTZWFyY2hFbmdpbmUuamF2YQkyNyBKdW4gMjAwOCAxNjowNDowOSAtMDAwMAkxLjU2Cisr
KyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2VhcmNo
RW5naW5lLmphdmEJOCBPY3QgMjAwOCAxOTo0OTozMyAtMDAwMApAQCAtMTAwLDYgKzEwMCwyMCBA
QAogCQlyZXR1cm4gY3JlYXRlSGllcmFyY2h5U2NvcGUodHlwZSwgRGVmYXVsdFdvcmtpbmdDb3B5
T3duZXIuUFJJTUFSWSk7CiAJfQogCisKKwkvKioKKwkgKiBAc2VlIFNlYXJjaEVuZ2luZSNjcmVh
dGVIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QsSVR5cGUsYm9vbGVhbixib29sZWFuLFdvcmtp
bmdDb3B5T3duZXIpIGZvciBkZXRhaWxlZCBjb21tZW50LgorCSAqLworCXB1YmxpYyBzdGF0aWMg
SUphdmFTZWFyY2hTY29wZSBjcmVhdGVIaWVyYXJjaHlTY29wZSgKKwkJCQkJCQkJCQlJSmF2YVBy
b2plY3QgcHJvamVjdCwgCisJCQkJCQkJCQkJSVR5cGUgdHlwZSwgCisJCQkJCQkJCQkJYm9vbGVh
biBvbmx5U3VidHlwZXMsIAorCQkJCQkJCQkJCWJvb2xlYW4gbm9NZW1iZXJUeXBlcywgCisJCQkJ
CQkJCQkJV29ya2luZ0NvcHlPd25lciBvd25lcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiAK
Kwl7CisJCXJldHVybiBuZXcgSGllcmFyY2h5U2NvcGUocHJvamVjdCwgdHlwZSwgb3duZXIsIG9u
bHlTdWJ0eXBlcywgbm9NZW1iZXJUeXBlcyk7CisJfQorCQogCS8qKgogCSAqIEBzZWUgU2VhcmNo
RW5naW5lI2NyZWF0ZUhpZXJhcmNoeVNjb3BlKElUeXBlLFdvcmtpbmdDb3B5T3duZXIpIGZvciBk
ZXRhaWxlZCBjb21tZW50LgogCSAqLwpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRl
cm5hbC9jb3JlL3NlYXJjaC9UeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBlci5qYXZhCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9UeXBlTmFtZU1hdGNoUmVx
dWVzdG9yV3JhcHBlci5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjEyCmRpZmYgLXUgLXIx
LjEyIFR5cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFwcGVyLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBw
ZXIuamF2YQkyNyBKdW4gMjAwOCAxNjowNDowOSAtMDAwMAkxLjEyCisrKyBzZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL1R5cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFw
cGVyLmphdmEJOCBPY3QgMjAwOCAxOTo0OTozNCAtMDAwMApAQCAtMTA3LDcgKzEwNyw3IEBACiAJ
CQkJPyBjcmVhdGVUeXBlRnJvbVBhdGgocGF0aCwgbmV3IFN0cmluZyhzaW1wbGVUeXBlTmFtZSks
IGVuY2xvc2luZ1R5cGVOYW1lcykKIAkJCQk6IGNyZWF0ZVR5cGVGcm9tSmFyKHBhdGgsIHNlcGFy
YXRvckluZGV4KTsKIAkJfQotCQlpZiAodHlwZSAhPSBudWxsKSB7CisJCWlmICh0eXBlICE9IG51
bGwgJiYgdGhpcy5zY29wZS5lbmNsb3Nlc1R5cGVPZkVuY2xvc2VkUmVzb3VyY2UodHlwZSkpIHsK
IAkJCXRoaXMucmVxdWVzdG9yLmFjY2VwdFR5cGVOYW1lTWF0Y2gobmV3IEphdmFTZWFyY2hUeXBl
TmFtZU1hdGNoKHR5cGUsIG1vZGlmaWVycykpOwogCQl9CiAJfSBjYXRjaCAoSmF2YU1vZGVsRXhj
ZXB0aW9uIGUpIHsKSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9z
ZWFyY2gvQWJzdHJhY3RTZWFyY2hTY29wZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9p
bnRlcm5hbC9jb3JlL3NlYXJjaC9BYnN0cmFjdFNlYXJjaFNjb3BlLmphdmEsdgpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuMTUKZGlmZiAtdSAtcjEuMTUgQWJzdHJhY3RTZWFyY2hTY29wZS5qYXZhCi0t
LSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Fic3RyYWN0U2Vh
cmNoU2NvcGUuamF2YQkyNyBNYXkgMjAwOCAyMzo0Njo0MyAtMDAwMAkxLjE1CisrKyBzZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Fic3RyYWN0U2VhcmNoU2NvcGUu
amF2YQk4IE9jdCAyMDA4IDE5OjQ5OjMxIC0wMDAwCkBAIC0xMSwxMSArMTEsMTkgQEAKIHBhY2th
Z2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2VhcmNoOwogCiBpbXBvcnQgb3JnLmVj
bGlwc2UuamR0LmNvcmUuSUphdmFFbGVtZW50RGVsdGE7CitpbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmNvcmUuSVR5cGU7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoLklKYXZhU2Vh
cmNoU2NvcGU7CiAKIHB1YmxpYyBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFNlYXJjaFNjb3BlIGlt
cGxlbWVudHMgSUphdmFTZWFyY2hTY29wZSB7CiAKIC8qKgorICogQHNlZSBJSmF2YVNlYXJjaFNj
b3BlI2VuY2xvc2VzVHlwZU9mRW5jbG9zZWRSZXNvdXJjZShJVHlwZSkKKyAqIEBzaW5jZSAzLjUK
KyAqLworcHVibGljIGJvb2xlYW4gZW5jbG9zZXNUeXBlT2ZFbmNsb3NlZFJlc291cmNlKElUeXBl
IHR5cGUpIHsKKwlyZXR1cm4gdHJ1ZTsgLy8gZGVmYXVsdDogbm8gYWRkaXRpb25hbCBjaGVja2lu
ZworfQorLyoqCiAgKiBAc2VlIElKYXZhU2VhcmNoU2NvcGUjaW5jbHVkZXNCaW5hcmllcygpCiAg
KiBAZGVwcmVjYXRlZAogICovCiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsCklu
ZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3Rz
LmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5q
ZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwv
SmF2YVNlYXJjaFRlc3RzLmphdmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTc5CmRpZmYgLXUg
LXIxLjE3OSBKYXZhU2VhcmNoVGVzdHMuamF2YQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhCTkgU2VwIDIwMDggMTI6NDM6MzcgLTAw
MDAJMS4xNzkKKysrIHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2Vh
cmNoVGVzdHMuamF2YQk4IE9jdCAyMDA4IDE5OjQ5OjQyIC0wMDAwCkBAIC0yNDIyLDYgKzI0MjIs
MTA3IEBACiAKIH0KIC8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3Ig
ZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBzZWFyY2g6IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8K
K3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTA2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
ICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QiA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2
YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkIuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25V
bml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAi
YTEwIiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RCA9IHRoaXMuIGdl
dENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkQuamF2YSIpOwor
ICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgi
SmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBl
ID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNl
YXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBu
dWxsKTsKKyAgICAgICAgCisgICAgICAgIC8vIGRvbid0IGluY2x1ZGUgc3VwZXItY2xhc3NlczoK
KyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5BIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGll
cmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VCLmdldFR5cGUoIkEiKSkpOworICAgICAg
ICBhc3NlcnRGYWxzZSgiYTEwLkIgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkg
c2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUIuZ2V0VHlwZSgiQiIpKSk7CisgICAgICAgIGFzc2Vy
dEZhbHNlKCJhMTAvQi5qYXZhIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNj
b3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VCLmdldFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1bGxQ
YXRoKCkudG9TdHJpbmcoKSkpOworICAgICAgICAKKyAgICAgICAgLy8gZG9uJ3QgaW5jbHVkZSBm
b2N1cyB0eXBlOgorICAgICAgICBhc3NlcnRGYWxzZSgiYTEwLkMgc2hvdWxkIGJlIG5vdCBpbmNs
dWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3Nlcyh0eXBlKSk7CisgICAgICAg
IGFzc2VydEZhbHNlKCJhMTAvQy5qYXZhIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkg
c2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUMuZ2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0RnVs
bFBhdGgoKS50b1N0cmluZygpKSk7CisgICAgICAgIAorICAgICAgICAvLyByZWd1bGFyIHN1Yi10
eXBlczoKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkQgc2hvdWxkIGJlIGluY2x1ZGVkIGluIGhp
ZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RC5nZXRUeXBlKCJEIikpKTsKKyAgICAg
ICAgYXNzZXJ0VHJ1ZSgiYTEwL0QuamF2YSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5
IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VELmdldFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1
bGxQYXRoKCkudG9TdHJpbmcoKSkpOworICAgICAgICAKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEw
LkUgc2hvdWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2Vz
KGN1RS5nZXRUeXBlKCJFIikpKTsKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkYgc2hvdWxkIGJl
IGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBl
KCJGIikpKTsKKyAgICAgICAgLy8gc3ViLXR5cGUgaXMgYSBuZXN0ZWQgdHlwZToKKyAgICAgICAg
YXNzZXJ0VHJ1ZSgiYTEwLkgkSSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3Bl
Iiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkgiKS5nZXRUeXBlKCJJIikpKTsKKyAgICAg
ICAgLy8gbWVtYmVyIG9mIGEgc3ViLXR5cGU6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuRiRH
IHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VFLmdldFR5cGUoIkYiKS5nZXRUeXBlKCJHIikpKTsKKyAgICAgICAgLy8gZW5jbG9zaW5n
IG9mIGEgc3ViLXR5cGU6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuSCBzaG91bGQgbm90IGJl
IGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBl
KCJIIikpKTsKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwL0UuamF2YSBzaG91bGQgYmUgaW5jbHVk
ZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFVuZGVybHlpbmdS
ZXNvdXJjZSgpLmdldEZ1bGxQYXRoKCkudG9TdHJpbmcoKSkpOworfQorLyoqCisgKiBIaWVyYXJj
aHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IHNlYXJj
aDogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3Bl
MDcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VD
ID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAi
Qy5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAg
ICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNj
b3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgc2Vh
cmNoKCIqKiIsIFRZUEUsIERFQ0xBUkFUSU9OUywgc2NvcGUpOworICAgICAgICBhc3NlcnRTZWFy
Y2hSZXN1bHRzKAorICAgICAgICAJCSJzcmMvYTEwL0QuamF2YSBhMTAuRCBbRF1cbiIgKyAKKyAg
ICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkUgW0VdXG4iICsgCisgICAgICAgIAkJInNyYy9h
MTAvRS5qYXZhIGExMC5GIFtGXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAu
SCRJIFtJXSIKKyAgICAgICAgCQkpOworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4K
KyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IHNlYXJjaDogZmluZCBvbmx5IHN1
YnR5cGVzIC0gZGlzYWJsZWQpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUwOCgp
IHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0
aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmph
dmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElK
YXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUo
bnVsbCwgdHlwZSwgLypvbmx5U3ViVHlwZXMqL2ZhbHNlLCB0cnVlLCBudWxsKTsKKyAgICAgICAg
CisgICAgICAgIHNlYXJjaCgiKioiLCBUWVBFLCBERUNMQVJBVElPTlMsIHNjb3BlKTsKKyAgICAg
ICAgYXNzZXJ0U2VhcmNoUmVzdWx0cygKKyAgICAgICAgCQkic3JjL2ExMC9CLmphdmEgYTEwLkEg
W0FdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvQi5qYXZhIGExMC5CIFtCXVxuIiArIAorICAg
ICAgICAJCSJzcmMvYTEwL0MuamF2YSBhMTAuQyBbQ11cbiIgKyAKKyAgICAgICAgCQkic3JjL2Ex
MC9ELmphdmEgYTEwLkQgW0RdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRS5qYXZhIGExMC5F
IFtFXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuRiBbRl1cbiIgKyAKKyAg
ICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkgkSSBbSV1cbiIgKyAKKyAgICAgICAgCQlnZXRF
eHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICIgamF2YS5sYW5nLk9iamVjdCIKKyAgICAgICAgCQkp
OworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNl
bWVudCBidWcgMjE1MTM5IHNlYXJjaDogZmluZCBvbmx5IHN1YnR5cGVzIC0gZGlmZmVyZW50IGNh
bGwgY2hhaW4pLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUwOSgpIHRocm93cyBD
b3JlRXhjZXB0aW9uIHsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRD
b21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAg
ICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNo
U2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlw
ZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgCVR5cGVOYW1lTWF0Y2hDb2xsZWN0b3IgY29sbGVj
dG9yID0gbmV3IFR5cGVOYW1lTWF0Y2hDb2xsZWN0b3IoKSB7CisgICAgCQlwdWJsaWMgU3RyaW5n
IHRvU3RyaW5nKCl7CisgICAgCQkJcmV0dXJuIHRvRnVsbHlRdWFsaWZpZWROYW1lc1N0cmluZygp
OworICAgIAkJfQorICAgIAl9OworICAgIAluZXcgU2VhcmNoRW5naW5lKCkuc2VhcmNoQWxsVHlw
ZU5hbWVzKAorICAgIAkJbnVsbCwKKyAgICAJCW51bGwsCisgICAgCQlzY29wZSwKKyAgICAJCWNv
bGxlY3RvciwKKyAgICAJCUlKYXZhU2VhcmNoQ29uc3RhbnRzLldBSVRfVU5USUxfUkVBRFlfVE9f
U0VBUkNILAorICAgIAkJbnVsbCk7CisgICAgCVN0cmluZyBleHBlY3RlZCA9IAorICAgIAkJCSJh
MTAuRFxuIiArCisgICAgCQkJImExMC5FXG4iICsKKyAgICAJCQkiYTEwLkZcbiIgKworICAgIAkJ
CSJhMTAuSCRJIjsKKyAgICAJYXNzZXJ0VHJ1ZSgiV2Ugc2hvdWxkIGdldCBzb21lIHR5cGVzISIs
IGNvbGxlY3Rvci5zaXplKCkgPiAwKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJGb3VuZCB0eXBlcyBz
b3VuZHMgbm90IHRvIGJlIGNvcnJlY3QiLCBleHBlY3RlZCwgY29sbGVjdG9yLnRvU3RyaW5nKCkp
OworfQorLyoqCiAgKiBTaW1wbGUgdHlwZSBkZWNsYXJhdGlvbiB0ZXN0LgogICovCiBwdWJsaWMg
dm9pZCB0ZXN0VHlwZURlY2xhcmF0aW9uMDEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7IC8vIHdh
cyB0ZXN0U2ltcGxlVHlwZURlY2xhcmF0aW9uCkluZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9z
cmMvYTEwL0QuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9z
cmMvYTEwL0QuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZh
Ci0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAorKysgd29ya3NwYWNlL0ph
dmFTZWFyY2gvc3JjL2ExMC9ELmphdmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCww
ICsxLDMgQEAKK3BhY2thZ2UgYTEwOworCitwdWJsaWMgY2xhc3MgRCBleHRlbmRzIEMge30KSW5k
ZXg6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQy5qYXZhCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZp
bGU6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQy5qYXZhCmRpZmYgLU4gd29ya3NwYWNl
L0phdmFTZWFyY2gvc3JjL2ExMC9DLmphdmEKLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAw
OjAwIC0wMDAwCisrKyB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2YQkxIEphbiAx
OTcwIDAwOjAwOjAwIC0wMDAwCkBAIC0wLDAgKzEsMyBAQAorcGFja2FnZSBhMTA7CisKK3B1Ymxp
YyBjbGFzcyBDIGV4dGVuZHMgQiB7fQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9FLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9FLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQotLS0g
L2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2Vh
cmNoL3NyYy9hMTAvRS5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwx
MSBAQAorcGFja2FnZSBhMTA7CisKK3B1YmxpYyBjbGFzcyBFIGV4dGVuZHMgRCB7fQorCitjbGFz
cyBGIGV4dGVuZHMgQyB7CisJY2xhc3MgRyB7fQorfQorCitjbGFzcyBIIHsgCisJY2xhc3MgSSBl
eHRlbmRzIEUge30KK30KSW5kZXg6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZh
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KUkNTIGZpbGU6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZh
CmRpZmYgLU4gd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9CLmphdmEKLS0tIC9kZXYvbnVs
bAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCisrKyB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMv
YTEwL0IuamF2YQkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCkBAIC0wLDAgKzEsNSBAQAorcGFj
a2FnZSBhMTA7CisKK2NsYXNzIEEgeyB9CisKK3B1YmxpYyBjbGFzcyBCIGV4dGVuZHMgQSB7fQo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>115095</attachid>
            <date>2008-10-14 18:44:00 -0400</date>
            <delta_ts>2008-12-05 13:24:52 -0500</delta_ts>
            <desc>patch without change in IJavaSearchScope</desc>
            <filename>bug_215139_patch5.txt</filename>
            <type>text/plain</type>
            <size>17254</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFTZWFyY2hUZXN0cy5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjE3OQpkaWZmIC11IC1yMS4xNzkgSmF2YVNlYXJjaFRlc3RzLmphdmEKLS0tIHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoVGVzdHMuamF2YQk5IFNlcCAyMDA4
IDEyOjQzOjM3IC0wMDAwCTEuMTc5CisrKyBzcmMvb3JnL2VjbGlwc2UvamR0L2NvcmUvdGVzdHMv
bW9kZWwvSmF2YVNlYXJjaFRlc3RzLmphdmEJMTQgT2N0IDIwMDggMjI6MTc6NDcgLTAwMDAKQEAg
LTI0MjIsNiArMjQyMiwxMDcgQEAKIAogfQogLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4K
KyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IHNlYXJjaDogZmluZCBvbmx5IHN1
YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMDYoKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VCID0gdGhpcy4gZ2V0Q29tcGls
YXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQi5qYXZhIik7CisgICAgICAg
IElDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2Vh
cmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQg
Y3VEID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAi
LCAiRC5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0Q29t
cGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7CisgICAg
ICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNj
b3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUs
IHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gZG9uJ3QgaW5jbHVkZSBz
dXBlci1jbGFzc2VzOgorICAgICAgICBhc3NlcnRGYWxzZSgiYTEwLkEgc2hvdWxkIG5vdCBiZSBp
bmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUIuZ2V0VHlwZSgi
QSIpKSk7CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQiBzaG91bGQgbm90IGJlIGluY2x1ZGVk
IGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qi5nZXRUeXBlKCJCIikpKTsK
KyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC9CLmphdmEgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBp
biBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUIuZ2V0VW5kZXJseWluZ1Jlc291
cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7CisgICAgICAgIAorICAgICAgICAvLyBk
b24ndCBpbmNsdWRlIGZvY3VzIHR5cGU6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQyBzaG91
bGQgYmUgbm90IGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKHR5
cGUpKTsKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC9DLmphdmEgc2hvdWxkIGJlIGluY2x1ZGVk
IGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qy5nZXRVbmRlcmx5aW5nUmVz
b3VyY2UoKS5nZXRGdWxsUGF0aCgpLnRvU3RyaW5nKCkpKTsKKyAgICAgICAgCisgICAgICAgIC8v
IHJlZ3VsYXIgc3ViLXR5cGVzOgorICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRCBzaG91bGQgYmUg
aW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VELmdldFR5cGUo
IkQiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJhMTAvRC5qYXZhIHNob3VsZCBiZSBpbmNsdWRl
ZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUQuZ2V0VW5kZXJseWluZ1Jl
c291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7CisgICAgICAgIAorICAgICAgICBh
c3NlcnRUcnVlKCJhMTAuRSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwg
c2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkUiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJh
MTAuRiBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VFLmdldFR5cGUoIkYiKSkpOworICAgICAgICAvLyBzdWItdHlwZSBpcyBhIG5lc3RlZCB0
eXBlOgorICAgICAgICBhc3NlcnRUcnVlKCJhMTAuSCRJIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBo
aWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiSCIpLmdldFR5cGUo
IkkiKSkpOworICAgICAgICAvLyBtZW1iZXIgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0
RmFsc2UoImExMC5GJEcgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUi
LCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRiIpLmdldFR5cGUoIkciKSkpOworICAgICAg
ICAvLyBlbmNsb3Npbmcgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5I
IHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VFLmdldFR5cGUoIkgiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJhMTAvRS5qYXZhIHNo
b3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUu
Z2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7Cit9Cisv
KioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1
ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0
ZXN0U2VhcmNoU2NvcGUwNygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAgICAgSUNvbXBp
bGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAi
c3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBl
KCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3Jl
YXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAg
IAorICAgICAgICBzZWFyY2goIioqIiwgVFlQRSwgREVDTEFSQVRJT05TLCBzY29wZSk7CisgICAg
ICAgIGFzc2VydFNlYXJjaFJlc3VsdHMoCisgICAgICAgIAkJInNyYy9hMTAvRC5qYXZhIGExMC5E
IFtEXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuRSBbRV1cbiIgKyAKKyAg
ICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkYgW0ZdXG4iICsgCisgICAgICAgIAkJInNyYy9h
MTAvRS5qYXZhIGExMC5IJEkgW0ldIgorICAgICAgICAJCSk7Cit9CisvKioKKyAqIEhpZXJhcmNo
eSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNo
OiBmaW5kIG9ubHkgc3VidHlwZXMgLSBkaXNhYmxlZCkuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RT
ZWFyY2hTY29wZTA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRp
b25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMi
LCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMi
KTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVI
aWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCAvKm9ubHlTdWJUeXBlcyovZmFsc2UsIHRydWUsIG51
bGwpOworICAgICAgICAKKyAgICAgICAgc2VhcmNoKCIqKiIsIFRZUEUsIERFQ0xBUkFUSU9OUywg
c2NvcGUpOworICAgICAgICBhc3NlcnRTZWFyY2hSZXN1bHRzKAorICAgICAgICAJCSJzcmMvYTEw
L0IuamF2YSBhMTAuQSBbQV1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9CLmphdmEgYTEwLkIg
W0JdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvQy5qYXZhIGExMC5DIFtDXVxuIiArIAorICAg
ICAgICAJCSJzcmMvYTEwL0QuamF2YSBhMTAuRCBbRF1cbiIgKyAKKyAgICAgICAgCQkic3JjL2Ex
MC9FLmphdmEgYTEwLkUgW0VdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRS5qYXZhIGExMC5G
IFtGXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuSCRJIFtJXVxuIiArIAor
ICAgICAgICAJCWdldEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIiBqYXZhLmxhbmcuT2JqZWN0
IgorICAgICAgICAJCSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRl
c3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkgc3VidHlwZXMg
LSBkaWZmZXJlbnQgY2FsbCBjaGFpbikuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29w
ZTA5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1
QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwg
IkMuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAg
ICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlT
Y29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAJVHlwZU5hbWVNYXRjaENv
bGxlY3RvciBjb2xsZWN0b3IgPSBuZXcgVHlwZU5hbWVNYXRjaENvbGxlY3RvcigpIHsKKyAgICAJ
CXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKXsKKyAgICAJCQlyZXR1cm4gdG9GdWxseVF1YWxpZmll
ZE5hbWVzU3RyaW5nKCk7CisgICAgCQl9CisgICAgCX07CisgICAgCW5ldyBTZWFyY2hFbmdpbmUo
KS5zZWFyY2hBbGxUeXBlTmFtZXMoCisgICAgCQludWxsLAorICAgIAkJbnVsbCwKKyAgICAJCXNj
b3BlLAorICAgIAkJY29sbGVjdG9yLAorICAgIAkJSUphdmFTZWFyY2hDb25zdGFudHMuV0FJVF9V
TlRJTF9SRUFEWV9UT19TRUFSQ0gsCisgICAgCQludWxsKTsKKyAgICAJU3RyaW5nIGV4cGVjdGVk
ID0gCisgICAgCQkJImExMC5EXG4iICsKKyAgICAJCQkiYTEwLkVcbiIgKworICAgIAkJCSJhMTAu
RlxuIiArCisgICAgCQkJImExMC5IJEkiOworICAgIAlhc3NlcnRUcnVlKCJXZSBzaG91bGQgZ2V0
IHNvbWUgdHlwZXMhIiwgY29sbGVjdG9yLnNpemUoKSA+IDApOworICAgIAlhc3NlcnRFcXVhbHMo
IkZvdW5kIHR5cGVzIHNvdW5kcyBub3QgdG8gYmUgY29ycmVjdCIsIGV4cGVjdGVkLCBjb2xsZWN0
b3IudG9TdHJpbmcoKSk7Cit9CisvKioKICAqIFNpbXBsZSB0eXBlIGRlY2xhcmF0aW9uIHRlc3Qu
CiAgKi8KIHB1YmxpYyB2b2lkIHRlc3RUeXBlRGVjbGFyYXRpb24wMSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsgLy8gd2FzIHRlc3RTaW1wbGVUeXBlRGVjbGFyYXRpb24KSW5kZXg6IHdvcmtzcGFj
ZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IHdvcmtzcGFj
ZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZhCmRpZmYgLU4gd29ya3NwYWNlL0phdmFTZWFyY2gv
c3JjL2ExMC9ELmphdmEKLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCisr
KyB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQkxIEphbiAxOTcwIDAwOjAwOjAw
IC0wMDAwCkBAIC0wLDAgKzEsMyBAQAorcGFja2FnZSBhMTA7CisKK3B1YmxpYyBjbGFzcyBEIGV4
dGVuZHMgQyB7fQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9DLmphdmEKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9DLmphdmEKZGlm
ZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2YQotLS0gL2Rldi9udWxsCTEg
SmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAv
Qy5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwzIEBACitwYWNrYWdl
IGExMDsKKworcHVibGljIGNsYXNzIEMgZXh0ZW5kcyBCIHt9CkluZGV4OiB3b3Jrc3BhY2UvSmF2
YVNlYXJjaC9zcmMvYTEwL0UuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2
YVNlYXJjaC9zcmMvYTEwL0UuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9h
MTAvRS5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAorKysgd29y
a3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9FLmphdmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAw
MApAQCAtMCwwICsxLDExIEBACitwYWNrYWdlIGExMDsKKworcHVibGljIGNsYXNzIEUgZXh0ZW5k
cyBEIHt9CisKK2NsYXNzIEYgZXh0ZW5kcyBDIHsKKwljbGFzcyBHIHt9Cit9CisKK2NsYXNzIEgg
eyAKKwljbGFzcyBJIGV4dGVuZHMgRSB7fQorfQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gv
c3JjL2ExMC9CLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gv
c3JjL2ExMC9CLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0IuamF2
YQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9K
YXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAs
MCArMSw1IEBACitwYWNrYWdlIGExMDsKKworY2xhc3MgQSB7IH0KKworcHVibGljIGNsYXNzIEIg
ZXh0ZW5kcyBBIHt9CiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlCkluZGV4OiBzZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmph
dmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDYKZGlmZiAtdSAtcjEuNDYgSGllcmFyY2h5U2Nv
cGUuamF2YQotLS0gc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9I
aWVyYXJjaHlTY29wZS5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjA5IC0wMDAwCTEuNDYKKysrIHNl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFyY2h5U2NvcGUu
amF2YQkxNCBPY3QgMjAwOCAyMjoxNzo1NCAtMDAwMApAQCAtMTgsMTEgKzE4LDkgQEAKIGltcG9y
dCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUu
cnVudGltZS5JUGF0aDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29yZS4qOworaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5JSmF2YVNlYXJjaFNjb3BlOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlN1ZmZpeENvbnN0YW50czsKIGltcG9y
dCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOwotaW1wb3J0IG9yZy5lY2xpcHNlLmpk
dC5pbnRlcm5hbC5jb3JlLkphclBhY2thZ2VGcmFnbWVudFJvb3Q7Ci1pbXBvcnQgb3JnLmVjbGlw
c2UuamR0LmludGVybmFsLmNvcmUuSmF2YUVsZW1lbnQ7Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0
LmludGVybmFsLmNvcmUuSmF2YU1vZGVsOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLmhpZXJhcmNoeS5UeXBlSGllcmFyY2h5OwogCiAvKioKQEAgLTM1LDcgKzMzLDYgQEAK
IAlwcml2YXRlIFdvcmtpbmdDb3B5T3duZXIgb3duZXI7CiAKIAlwcml2YXRlIElUeXBlSGllcmFy
Y2h5IGhpZXJhcmNoeTsKLQlwcml2YXRlIElUeXBlW10gdHlwZXM7CiAJcHJpdmF0ZSBIYXNoU2V0
IHJlc291cmNlUGF0aHM7CiAJcHJpdmF0ZSBJUGF0aFtdIGVuY2xvc2luZ1Byb2plY3RzQW5kSmFy
czsKIApAQCAtNDQsNiArNDEsMTEgQEAKIAogCXB1YmxpYyBib29sZWFuIG5lZWRzUmVmcmVzaDsK
IAorCXByaXZhdGUgYm9vbGVhbiBvbmx5U3VidHlwZXM9IGZhbHNlOworCXByaXZhdGUgSGFzaFNl
dCBzdWJUeXBlczsgLy8gb25seSBzZXQgd2hlbiBvbmx5U3VidHlwZXM9PXRydWUKKwlwcml2YXRl
IElKYXZhUHJvamVjdCBqYXZhUHJvamVjdD0gbnVsbDsKKwlwcml2YXRlIGJvb2xlYW4gbm9NZW1i
ZXJUeXBlcz0gZmFsc2U7CisKIAkvKiAobm9uLUphdmFkb2MpCiAJICogQWRkcyB0aGUgZ2l2ZW4g
cmVzb3VyY2UgdG8gdGhpcyBzZWFyY2ggc2NvcGUuCiAJICovCkBAIC01OSw2ICs2MSwyMyBAQAog
CQl0aGlzLmVsZW1lbnRzW3RoaXMuZWxlbWVudENvdW50KytdID0gZWxlbWVudDsKIAl9CiAKKwkv
KioKKwkgKiBDcmVhdGVzIGEgbmV3IGhpZXJhcmNoeSBzY29wZSBmb3IgdGhlIGdpdmVuIHR5cGUu
CisJICogQHBhcmFtIHByb2plY3QgICAgICBjb25zdHJhaW4gdGhlIHNlYXJjaCByZXN1bHQgdG8g
dGhpcyBwcm9qZWN0CisJICogQHBhcmFtIHR5cGUgICAgICAgICB0aGUgZm9jdXMgdHlwZSBvZiB0
aGUgaGllcmFyY2h5CisJICogQHBhcmFtIG93bmVyIAkgICB0aGUgb3duZXIgb2Ygd29ya2luZyBj
b3BpZXMgdGhhdCB0YWtlIHByZWNlZGVuY2Ugb3ZlciBvcmlnaW5hbCBjb21waWxhdGlvbiB1bml0
cworCSAqIEBwYXJhbSBvbmx5U3VidHlwZXMgaWYgdHJ1ZSBzZWFyY2ggb25seSBzdWJ0eXBlcyBv
ZiAndHlwZScgKG5vdCBpbmNsdWRpbmcgJ3R5cGUnKQorCSAqIEBwYXJhbSBub01lbWJlclR5cGVz
IGlmIHRydWUgZG8gbm90IGNvbnNpZGVyIG1lbWJlciBvciBlbmNsb3NpbmcgdHlwZXMgb2YgdHlw
ZXMgaW4gdGhlIGdpdmVuIHR5cGUgaGllYXJjaHkuCisJICovCisJcHVibGljIEhpZXJhcmNoeVNj
b3BlKElKYXZhUHJvamVjdCBwcm9qZWN0LCBJVHlwZSB0eXBlLCBXb3JraW5nQ29weU93bmVyIG93
bmVyLCBib29sZWFuIG9ubHlTdWJ0eXBlcywgYm9vbGVhbiBub01lbWJlclR5cGVzKSAKKwkJCXRo
cm93cyBKYXZhTW9kZWxFeGNlcHRpb24gCisJeworCQl0aGlzKHR5cGUsIG93bmVyKTsKKwkJdGhp
cy5qYXZhUHJvamVjdD0gcHJvamVjdDsKKwkJdGhpcy5vbmx5U3VidHlwZXM9IG9ubHlTdWJ0eXBl
czsKKwkJdGhpcy5ub01lbWJlclR5cGVzPSBub01lbWJlclR5cGVzOworCX0KKwogCS8qIChub24t
SmF2YWRvYykKIAkgKiBDcmVhdGVzIGEgbmV3IGhpZWFyY2h5IHNjb3BlIGZvciB0aGUgZ2l2ZW4g
dHlwZS4KIAkgKi8KQEAgLTEwMCwxMCArMTE5LDE4IEBACiAJcHJpdmF0ZSB2b2lkIGJ1aWxkUmVz
b3VyY2VWZWN0b3IoKSB7CiAJCUhhc2hNYXAgcmVzb3VyY2VzID0gbmV3IEhhc2hNYXAoKTsKIAkJ
SGFzaE1hcCBwYXRocyA9IG5ldyBIYXNoTWFwKCk7Ci0JCXRoaXMudHlwZXMgPSB0aGlzLmhpZXJh
cmNoeS5nZXRBbGxUeXBlcygpOwotCQlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMudHlwZXMubGVu
Z3RoOyBpKyspIHsKLQkJCUlUeXBlIHR5cGUgPSB0aGlzLnR5cGVzW2ldOwotCQkJSVJlc291cmNl
IHJlc291cmNlID0gKChKYXZhRWxlbWVudCkgdHlwZSkucmVzb3VyY2UoKTsKKwkJSVR5cGVbXSB0
eXBlcyA9IG51bGw7CisJCWlmICh0aGlzLm9ubHlTdWJ0eXBlcykgeworCQkJdHlwZXM9IHRoaXMu
aGllcmFyY2h5LmdldEFsbFN1YnR5cGVzKHRoaXMuZm9jdXNUeXBlKTsKKwkJCXRoaXMuc3ViVHlw
ZXM9IG5ldyBIYXNoU2V0KHR5cGVzLmxlbmd0aCk7CisJCX0gZWxzZSB7CisJCQl0eXBlcyA9IHRo
aXMuaGllcmFyY2h5LmdldEFsbFR5cGVzKCk7CisJCX0KKwkJZm9yIChpbnQgaSA9IDA7IGkgPCB0
eXBlcy5sZW5ndGg7IGkrKykgeworCQkJSVR5cGUgdHlwZSA9IHR5cGVzW2ldOworCQkJaWYgKHRo
aXMub25seVN1YnR5cGVzKQorCQkJCXRoaXMuc3ViVHlwZXMuYWRkKHR5cGUpOworCQkJSVJlc291
cmNlIHJlc291cmNlID0gdHlwZS5nZXRSZXNvdXJjZSgpOwogCQkJaWYgKHJlc291cmNlICE9IG51
bGwgJiYgcmVzb3VyY2VzLmdldChyZXNvdXJjZSkgPT0gbnVsbCkgewogCQkJCXJlc291cmNlcy5w
dXQocmVzb3VyY2UsIHJlc291cmNlKTsKIAkJCQlhZGQocmVzb3VyY2UpOwpAQCAtMjg3LDYgKzMx
NCwxNiBAQAogCQlJVHlwZSB0eXBlID0gbnVsbDsKIAkJaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBJ
VHlwZSkgewogCQkJdHlwZSA9IChJVHlwZSkgZWxlbWVudDsKKyAgICAgICAgICAgIGlmICh0aGlz
Lm9ubHlTdWJ0eXBlcykgeworICAgICAgICAgICAgCS8vIHNlYXJjaGluZyBzdWJ0eXBlcyBhbmQg
aGF2ZSBhIHR5cGU6IG9ubHkgY2hlY2sgaW4gdGhpcy5zdWJUeXBlczoKKyAgICAgICAgICAgIAlp
ZiAodGhpcy5zdWJUeXBlcy5jb250YWlucyh0eXBlKSkKKyAgICAgICAgICAgIAkJcmV0dXJuIHRy
dWU7CisgICAgICAgICAgICAJLy8gYmUgZmxleGlibGU6IGxvb2sgYXQgb3JpZ2luYWwgZWxlbWVu
dCAoc2VlIGJ1ZyAxNDEwNiBhbmQgYmVsb3cpCisgICAgICAgICAgICAgICAgSVR5cGUgb3JpZ2lu
YWwgPSB0eXBlLmlzQmluYXJ5KCkgPyBudWxsIDogKElUeXBlKXR5cGUuZ2V0UHJpbWFyeUVsZW1l
bnQoKTsKKyAgICAgICAgICAgICAgICBpZiAob3JpZ2luYWwgIT0gdHlwZSAmJiB0aGlzLnN1YlR5
cGVzLmNvbnRhaW5zKG9yaWdpbmFsKSkgCisgICAgICAgICAgICAgICAgCXJldHVybiB0cnVlOwor
ICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKKyAgICAgICAgICAgIH0KIAkJfSBlbHNlIGlm
IChlbGVtZW50IGluc3RhbmNlb2YgSU1lbWJlcikgewogCQkJdHlwZSA9ICgoSU1lbWJlcikgZWxl
bWVudCkuZ2V0RGVjbGFyaW5nVHlwZSgpOwogCQl9CkBAIC0zMDQsNiArMzQxLDI1IEBACiAJCX0K
IAkJcmV0dXJuIGZhbHNlOwogCX0KKwkvKioKKwkgKiBFeHRyYSBjaGVjayB3aGV0aGVyIGEgZ2l2
ZW4gdHlwZSBpcyBlbmNsb3NlZCBpbiBhIHNjb3BlLCAKKwkgKiBhZnRlciB0aGUgY29udGFpbmlu
ZyByZXNvdXJjZSBoYXMgYWxyZWFkeSBiZWVuIGZvdW5kIHRvIGJlIGVuY2xvc2VkLgorCSAqIAor
CSAqIEBwYXJhbSBzY29wZSB0aGUgc2NvcGUgdG8gYXNrCisJICogQHBhcmFtIHR5cGUgdGhlIGdp
dmVuIHR5cGUuCisJICogQHJldHVybiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgdHlwZSBpcyBp
biB0aGUgc2NvcGUgb3IgaWYgbm8KKwkgKiAgCWFkZGl0aW9uYWwgY2hlY2sgaXMgcmVxdWlyZWQg
YWZ0ZXIgY2hlY2tpbmcgdGhlIHJlc291cmNlLgorCSAqIEBzaW5jZSAzLjUKKwkgKi8KKwlwdWJs
aWMgc3RhdGljIGJvb2xlYW4gZW5jbG9zZXNUeXBlT2ZFbmNsb3NlZFJlc291cmNlKElKYXZhU2Vh
cmNoU2NvcGUgc2NvcGUsIElUeXBlIHR5cGUpIHsKKwkJaWYgKHNjb3BlIGluc3RhbmNlb2YgSGll
cmFyY2h5U2NvcGUpIHsKKwkJCUhpZXJhcmNoeVNjb3BlIGhpZXJhcmNoeVNjb3BlID0gKEhpZXJh
cmNoeVNjb3BlKSBzY29wZTsKKwkJCWlmIChoaWVyYXJjaHlTY29wZS5ub01lbWJlclR5cGVzKQor
CQkJCXJldHVybiBoaWVyYXJjaHlTY29wZS5lbmNsb3Nlcyh0eXBlKTsKKwkJfQorCQlyZXR1cm4g
dHJ1ZTsgLy8gZGVmYXVsdDogbm8gYWRkaXRpb25hbCBjaGVjay4KKwl9CisKIAkvKiAobm9uLUph
dmFkb2MpCiAJICogQHNlZSBJSmF2YVNlYXJjaFNjb3BlI2VuY2xvc2luZ1Byb2plY3RzQW5kSmFy
cygpCiAJICogQGRlcHJlY2F0ZWQKQEAgLTMyNCw3ICszODAsMTAgQEAKIAkJdGhpcy5lbGVtZW50
Q291bnQgPSAwOwogCQl0aGlzLm5lZWRzUmVmcmVzaCA9IGZhbHNlOwogCQlpZiAodGhpcy5oaWVy
YXJjaHkgPT0gbnVsbCkgewotCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdU
eXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOworCQkJaWYgKHRoaXMuamF2YVByb2plY3Qg
IT0gbnVsbCkKKwkJCQl0aGlzLmhpZXJhcmNoeSA9IHRoaXMuZm9jdXNUeXBlLm5ld1R5cGVIaWVy
YXJjaHkodGhpcy5qYXZhUHJvamVjdCwgdGhpcy5vd25lciwgbnVsbCk7CisJCQllbHNlCisJCQkJ
dGhpcy5oaWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3du
ZXIsIG51bGwpOwogCQl9IGVsc2UgewogCQkJdGhpcy5oaWVyYXJjaHkucmVmcmVzaChudWxsKTsK
IAkJfQpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9C
YXNpY1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjU2CmRpZmYgLXUgLXIxLjU2IEJhc2ljU2VhcmNoRW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvQmFzaWNTZWFyY2hFbmdpbmUuamF2YQky
NyBKdW4gMjAwOCAxNjowNDowOSAtMDAwMAkxLjU2CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2VhcmNoRW5naW5lLmphdmEJMTQgT2N0IDIwMDgg
MjI6MTc6NTMgLTAwMDAKQEAgLTEwMCw2ICsxMDAsMjAgQEAKIAkJcmV0dXJuIGNyZWF0ZUhpZXJh
cmNoeVNjb3BlKHR5cGUsIERlZmF1bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlkpOwogCX0KIAor
CisJLyoqCisJICogQHNlZSBTZWFyY2hFbmdpbmUjY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQ
cm9qZWN0LElUeXBlLGJvb2xlYW4sYm9vbGVhbixXb3JraW5nQ29weU93bmVyKSBmb3IgZGV0YWls
ZWQgY29tbWVudC4KKwkgKi8KKwlwdWJsaWMgc3RhdGljIElKYXZhU2VhcmNoU2NvcGUgY3JlYXRl
SGllcmFyY2h5U2NvcGUoCisJCQkJCQkJCQkJSUphdmFQcm9qZWN0IHByb2plY3QsIAorCQkJCQkJ
CQkJCUlUeXBlIHR5cGUsIAorCQkJCQkJCQkJCWJvb2xlYW4gb25seVN1YnR5cGVzLCAKKwkJCQkJ
CQkJCQlib29sZWFuIG5vTWVtYmVyVHlwZXMsIAorCQkJCQkJCQkJCVdvcmtpbmdDb3B5T3duZXIg
b3duZXIpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24gCisJeworCQlyZXR1cm4gbmV3IEhpZXJh
cmNoeVNjb3BlKHByb2plY3QsIHR5cGUsIG93bmVyLCBvbmx5U3VidHlwZXMsIG5vTWVtYmVyVHlw
ZXMpOworCX0KKwkKIAkvKioKIAkgKiBAc2VlIFNlYXJjaEVuZ2luZSNjcmVhdGVIaWVyYXJjaHlT
Y29wZShJVHlwZSxXb3JraW5nQ29weU93bmVyKSBmb3IgZGV0YWlsZWQgY29tbWVudC4KIAkgKi8K
SW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5h
bWVNYXRjaFJlcXVlc3RvcldyYXBwZXIuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9v
dC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBwZXIuamF2YSx2CnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4xMgpkaWZmIC11IC1yMS4xMiBUeXBlTmFtZU1hdGNoUmVxdWVz
dG9yV3JhcHBlci5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL1R5cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFwcGVyLmphdmEJMjcgSnVuIDIwMDggMTY6
MDQ6MDkgLTAwMDAJMS4xMgorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3Jl
L3NlYXJjaC9UeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBlci5qYXZhCTE0IE9jdCAyMDA4IDIy
OjE3OjU0IC0wMDAwCkBAIC0xMDcsNyArMTA3LDcgQEAKIAkJCQk/IGNyZWF0ZVR5cGVGcm9tUGF0
aChwYXRoLCBuZXcgU3RyaW5nKHNpbXBsZVR5cGVOYW1lKSwgZW5jbG9zaW5nVHlwZU5hbWVzKQog
CQkJCTogY3JlYXRlVHlwZUZyb21KYXIocGF0aCwgc2VwYXJhdG9ySW5kZXgpOwogCQl9Ci0JCWlm
ICh0eXBlICE9IG51bGwpIHsKKwkJaWYgKHR5cGUgIT0gbnVsbCAmJiBIaWVyYXJjaHlTY29wZS5l
bmNsb3Nlc1R5cGVPZkVuY2xvc2VkUmVzb3VyY2UodGhpcy5zY29wZSwgdHlwZSkpIHsKIAkJCXRo
aXMucmVxdWVzdG9yLmFjY2VwdFR5cGVOYW1lTWF0Y2gobmV3IEphdmFTZWFyY2hUeXBlTmFtZU1h
dGNoKHR5cGUsIG1vZGlmaWVycykpOwogCQl9CiAJfSBjYXRjaCAoSmF2YU1vZGVsRXhjZXB0aW9u
IGUpIHsKSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5n
aW5lLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBz
ZS5qZHQuY29yZS9zZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2lu
ZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjE0NwpkaWZmIC11IC1yMS4xNDcgU2VhcmNo
RW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNo
RW5naW5lLmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6MDggLTAwMDAJMS4xNDcKKysrIHNlYXJjaC9v
cmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEJMTQgT2N0IDIwMDgg
MjI6MTc6NTEgLTAwMDAKQEAgLTE3MSw2ICsxNzEsMzcgQEAKIAl9CiAKIAkvKioKKwkgKiBSZXR1
cm5zIGEgSmF2YSBzZWFyY2ggc2NvcGUgbGltaXRlZCB0byB0aGUgaGllcmFyY2h5IG9mIHRoZSBn
aXZlbiB0eXBlIGFuZCB0byBhIGdpdmVuIHByb2plY3QuCisJICogVGhlIEphdmEgZWxlbWVudHMg
cmVzdWx0aW5nIGZyb20gYSBzZWFyY2ggd2l0aCB0aGlzIHNjb3BlIHdpbGwgYmUgdHlwZXMgaW4g
dGhpcyBoaWVyYXJjaHkuCisJICogCisJICogQnkgZGVmYXVsdCwgaGllcmFyY2h5IHNjb3BlcyBp
bmNsdWRlIGFsbCBkaXJlY3QgYW5kIGluZGlyZWN0IHN1cGVydHlwZXMgYW5kIHN1YnR5cGVzIG9m
IHRoZQorCSAqIGZvY3VzIHR5cGUuIFRoaXMgbWV0aG9kLCBob3dldmVyLCBhbGxvd3MgdG8gcmVz
dHJpY3QgdGhlIGhpZXJhcmNoeSB0byB0cnVlIHN1YnR5cGVzLAorCSAqIG5laXRoZXIgaW5jbHVk
aW5nIHN1cGVydHlwZXMgbm9yIHRoZSBmb2N1cyB0eXBlIGl0c2VsZi4KKwkgKiAKKwkgKiBCeSBk
ZWZhdWx0LCBoaWVyYXJjaHkgc2NvcGVzIGluY2x1ZGUgYWxzbyBtZW1iZXIgdHlwZXMgYW5kIGVu
Y2xvc2luZyB0eXBlcyBvZiB0aG9zZSB0eXBlcworCSAqIHRoYXQgYWN0dWFsbHkgc3BhbiB0aGUg
aGllcmFyY2h5LiBUaGlzIG1ldGhvZCwgaG93ZXZlciwgYWxsb3dzIHRvIGluaGliaXQgdGhpcyBi
ZWhhdmlvciwKKwkgKiBieSBwYXNzaW5nIDxjb2RlPmZhbHNlPC9jb2RlPiB0byB0aGUgcGFyYW1l
dGVyIDxjb2RlPm5vTWVtYmVyVHlwZXM8L2NvZGU+LgorCSAqCisJICogQHBhcmFtIHByb2plY3Qg
dGhlIHByb2plY3QgdG8gd2hpY2ggdG8gY29uc3RyYWluIHRoZSBzZWFyY2gKKwkgKiBAcGFyYW0g
dHlwZSB0aGUgZm9jdXMgb2YgdGhlIGhpZXJhcmNoeSBzY29wZQorCSAqIEBwYXJhbSBvbmx5U3Vi
dHlwZXMgaWYgdHJ1ZSBvbmx5IHN1YnR5cGVzIG9mIDxjb2RlPnR5cGU8L2NvZGU+IGFyZSBjb25z
aWRlcmVkLgorCSAqIEBwYXJhbSBub01lbWJlclR5cGVzIGlmIHRydWUgZG8gbm90IGNvbnNpZGVy
IG1lbWJlciBvciBlbmNsb3NpbmcgdHlwZXMgb2YgdHlwZXMgaW4gdGhlIGdpdmVuIHR5cGUgaGll
YXJjaHkuCisJICogQHBhcmFtIG93bmVyIHRoZSBvd25lciBvZiB3b3JraW5nIGNvcGllcyB0aGF0
IHRha2UgcHJlY2VkZW5jZSBvdmVyIG9yaWdpbmFsIGNvbXBpbGF0aW9uIHVuaXRzCisJICogQHJl
dHVybiBhIG5ldyBoaWVyYXJjaHkgc2NvcGUKKwkgKiBAZXhjZXB0aW9uIEphdmFNb2RlbEV4Y2Vw
dGlvbiBpZiB0aGUgaGllcmFyY2h5IGNvdWxkIG5vdCBiZSBjb21wdXRlZCBvbiB0aGUgZ2l2ZW4g
dHlwZQorCSAqLworCXB1YmxpYyBzdGF0aWMgSUphdmFTZWFyY2hTY29wZSBjcmVhdGVIaWVyYXJj
aHlTY29wZSgKKwkJCQkJCQkJCUlKYXZhUHJvamVjdCBwcm9qZWN0LCAKKwkJCQkJCQkJCUlUeXBl
IHR5cGUsIAorCQkJCQkJCQkJYm9vbGVhbiBvbmx5U3VidHlwZXMsIAorCQkJCQkJCQkJYm9vbGVh
biBub01lbWJlclR5cGVzLCAKKwkJCQkJCQkJCVdvcmtpbmdDb3B5T3duZXIgb3duZXIpIAorCQkJ
dGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiAKKwl7CisJCXJldHVybiBCYXNpY1NlYXJjaEVuZ2lu
ZS5jcmVhdGVIaWVyYXJjaHlTY29wZShwcm9qZWN0LCB0eXBlLCBvbmx5U3VidHlwZXMsIG5vTWVt
YmVyVHlwZXMsIG93bmVyKTsKKwl9CisJCisJLyoqCiAJICogUmV0dXJucyBhIEphdmEgc2VhcmNo
IHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0aGUgZ2l2ZW4gdHlwZS4KIAkgKiBX
aGVuIHRoZSBoaWVyYXJjaHkgaXMgY29tcHV0ZWQsIHRoZSB0eXBlcyBkZWZpbmVkIGluIHRoZSB3
b3JraW5nIGNvcGllcyBvd25lZAogCSAqIGJ5IHRoZSBnaXZlbiBvd25lciB0YWtlIHByZWNlZGVu
Y2Ugb3ZlciB0aGUgb3JpZ2luYWwgY29tcGlsYXRpb24gdW5pdHMuCg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>119647</attachid>
            <date>2008-12-05 13:24:00 -0500</date>
            <delta_ts>2009-01-22 16:28:15 -0500</delta_ts>
            <desc>updated patch</desc>
            <filename>bug_215139_patch6.txt</filename>
            <type>text/plain</type>
            <size>23191</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpJ
bmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9IaWVyYXJj
aHlTY29wZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9IaWVyYXJjaHlTY29wZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjQ2CmRpZmYgLXUg
LXIxLjQ2IEhpZXJhcmNoeVNjb3BlLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFyY2h5U2NvcGUuamF2YQkyNyBKdW4gMjAwOCAxNjowNDow
OSAtMDAwMAkxLjQ2CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJNSBEZWMgMjAwOCAxODoxMzowMiAtMDAwMApAQCAtMTgs
MTEgKzE4LDkgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJlc291cmNlcy4qOwogaW1wb3J0
IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JUGF0aDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
Y29yZS4qOworaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5jb3JlLnNlYXJjaC5JSmF2YVNlYXJjaFNj
b3BlOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlN1ZmZp
eENvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOwotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphclBhY2thZ2VGcmFnbWVudFJvb3Q7
Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YUVsZW1lbnQ7Ci1pbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmhpZXJhcmNoeS5UeXBlSGllcmFyY2h5OwogCiAvKioK
QEAgLTM1LDcgKzMzLDYgQEAKIAlwcml2YXRlIFdvcmtpbmdDb3B5T3duZXIgb3duZXI7CiAKIAlw
cml2YXRlIElUeXBlSGllcmFyY2h5IGhpZXJhcmNoeTsKLQlwcml2YXRlIElUeXBlW10gdHlwZXM7
CiAJcHJpdmF0ZSBIYXNoU2V0IHJlc291cmNlUGF0aHM7CiAJcHJpdmF0ZSBJUGF0aFtdIGVuY2xv
c2luZ1Byb2plY3RzQW5kSmFyczsKIApAQCAtNDQsNiArNDEsMTAgQEAKIAogCXB1YmxpYyBib29s
ZWFuIG5lZWRzUmVmcmVzaDsKIAorCXByaXZhdGUgSGFzaFNldCBzdWJUeXBlcyA9IG51bGw7IC8v
IG51bGwgbWVhbnM6IGRvbid0IGZpbHRlciBmb3Igc3ViVHlwZXMKKwlwcml2YXRlIElKYXZhUHJv
amVjdCBqYXZhUHJvamVjdCA9IG51bGw7CisJcHJpdmF0ZSBib29sZWFuIGFsbG93TWVtYmVyVHlw
ZXMgPSB0cnVlOworCiAJLyogKG5vbi1KYXZhZG9jKQogCSAqIEFkZHMgdGhlIGdpdmVuIHJlc291
cmNlIHRvIHRoaXMgc2VhcmNoIHNjb3BlLgogCSAqLwpAQCAtNTksNiArNjAsMjQgQEAKIAkJdGhp
cy5lbGVtZW50c1t0aGlzLmVsZW1lbnRDb3VudCsrXSA9IGVsZW1lbnQ7CiAJfQogCisJLyoqCisJ
ICogQ3JlYXRlcyBhIG5ldyBoaWVyYXJjaHkgc2NvcGUgZm9yIHRoZSBnaXZlbiB0eXBlLgorCSAq
IEBwYXJhbSBwcm9qZWN0ICAgICAgY29uc3RyYWluIHRoZSBzZWFyY2ggcmVzdWx0IHRvIHRoaXMg
cHJvamVjdAorCSAqIEBwYXJhbSB0eXBlICAgICAgICAgdGhlIGZvY3VzIHR5cGUgb2YgdGhlIGhp
ZXJhcmNoeQorCSAqIEBwYXJhbSBvd25lciAJICAgdGhlIG93bmVyIG9mIHdvcmtpbmcgY29waWVz
IHRoYXQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgb3JpZ2luYWwgY29tcGlsYXRpb24gdW5pdHMKKwkg
KiBAcGFyYW0gb25seVN1YnR5cGVzIGlmIHRydWUgc2VhcmNoIG9ubHkgc3VidHlwZXMgb2YgJ3R5
cGUnIChub3QgaW5jbHVkaW5nICd0eXBlJykKKwkgKiBAcGFyYW0gbm9NZW1iZXJUeXBlcyBpZiB0
cnVlIGRvIG5vdCBjb25zaWRlciBtZW1iZXIgb3IgZW5jbG9zaW5nIHR5cGVzIG9mIHR5cGVzIGlu
IHRoZSBnaXZlbiB0eXBlIGhpZWFyY2h5LgorCSAqLworCXB1YmxpYyBIaWVyYXJjaHlTY29wZShJ
SmF2YVByb2plY3QgcHJvamVjdCwgSVR5cGUgdHlwZSwgV29ya2luZ0NvcHlPd25lciBvd25lciwg
Ym9vbGVhbiBvbmx5U3VidHlwZXMsCisJCQlib29sZWFuIG5vTWVtYmVyVHlwZXMpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzKHR5cGUsIG93bmVyKTsKKwkJdGhpcy5qYXZhUHJv
amVjdCA9IHByb2plY3Q7CisJCWlmIChvbmx5U3VidHlwZXMpIHsKKwkJCXRoaXMuc3ViVHlwZXMg
PSBuZXcgSGFzaFNldCgpOworCQl9CisJCXRoaXMuYWxsb3dNZW1iZXJUeXBlcyA9ICFub01lbWJl
clR5cGVzOworCX0KKwogCS8qIChub24tSmF2YWRvYykKIAkgKiBDcmVhdGVzIGEgbmV3IGhpZWFy
Y2h5IHNjb3BlIGZvciB0aGUgZ2l2ZW4gdHlwZS4KIAkgKi8KQEAgLTEwMCwxMCArMTE5LDE4IEBA
CiAJcHJpdmF0ZSB2b2lkIGJ1aWxkUmVzb3VyY2VWZWN0b3IoKSB7CiAJCUhhc2hNYXAgcmVzb3Vy
Y2VzID0gbmV3IEhhc2hNYXAoKTsKIAkJSGFzaE1hcCBwYXRocyA9IG5ldyBIYXNoTWFwKCk7Ci0J
CXRoaXMudHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRBbGxUeXBlcygpOwotCQlmb3IgKGludCBp
ID0gMDsgaSA8IHRoaXMudHlwZXMubGVuZ3RoOyBpKyspIHsKLQkJCUlUeXBlIHR5cGUgPSB0aGlz
LnR5cGVzW2ldOwotCQkJSVJlc291cmNlIHJlc291cmNlID0gKChKYXZhRWxlbWVudCkgdHlwZSku
cmVzb3VyY2UoKTsKKwkJSVR5cGVbXSB0eXBlcyA9IG51bGw7CisJCWlmICh0aGlzLnN1YlR5cGVz
ICE9IG51bGwpIHsKKwkJCXR5cGVzID0gdGhpcy5oaWVyYXJjaHkuZ2V0QWxsU3VidHlwZXModGhp
cy5mb2N1c1R5cGUpOworCQl9IGVsc2UgeworCQkJdHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRB
bGxUeXBlcygpOworCQl9CisJCWZvciAoaW50IGkgPSAwOyBpIDwgdHlwZXMubGVuZ3RoOyBpKysp
IHsKKwkJCUlUeXBlIHR5cGUgPSB0eXBlc1tpXTsKKwkJCWlmICh0aGlzLnN1YlR5cGVzICE9IG51
bGwpIHsKKwkJCQl0aGlzLnN1YlR5cGVzLmFkZCh0eXBlKTsKKwkJCX0KKwkJCUlSZXNvdXJjZSBy
ZXNvdXJjZSA9IHR5cGUuZ2V0UmVzb3VyY2UoKTsKIAkJCWlmIChyZXNvdXJjZSAhPSBudWxsICYm
IHJlc291cmNlcy5nZXQocmVzb3VyY2UpID09IG51bGwpIHsKIAkJCQlyZXNvdXJjZXMucHV0KHJl
c291cmNlLCByZXNvdXJjZSk7CiAJCQkJYWRkKHJlc291cmNlKTsKQEAgLTI2MSw3ICsyODgsNyBA
QAogCSAqLwogCXB1YmxpYyBib29sZWFuIGVuY2xvc2VzKElKYXZhRWxlbWVudCBlbGVtZW50KSB7
CiAJCWlmICh0aGlzLmhpZXJhcmNoeSA9PSBudWxsKSB7Ci0JCQlpZiAodGhpcy5mb2N1c1R5cGUu
ZXF1YWxzKGVsZW1lbnQuZ2V0QW5jZXN0b3IoSUphdmFFbGVtZW50LlRZUEUpKSkgeworCQkJaWYg
KHRoaXMuc3ViVHlwZXMgPT0gbnVsbCAmJiB0aGlzLmZvY3VzVHlwZS5lcXVhbHMoZWxlbWVudC5n
ZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSkpKSB7CiAJCQkJcmV0dXJuIHRydWU7CiAJCQl9
IGVsc2UgewogCQkJCWlmICh0aGlzLm5lZWRzUmVmcmVzaCkgewpAQCAtMjkxLDYgKzMxOCwzNiBA
QAogCQkJdHlwZSA9ICgoSU1lbWJlcikgZWxlbWVudCkuZ2V0RGVjbGFyaW5nVHlwZSgpOwogCQl9
CiAJCWlmICh0eXBlICE9IG51bGwpIHsKKwkJCS8vIHBvdGVudGlhbGx5IGFsbG93IHRyYXZlbGxp
bmcgaW46CisJCQlpZiAoZW5jbG9zZXNUeXBlKHR5cGUsIHRoaXMuYWxsb3dNZW1iZXJUeXBlcykp
IHsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KKwkJCWlmICh0aGlzLmFsbG93TWVtYmVyVHlwZXMp
IHsKKwkJCQkvLyB0cmF2ZWwgb3V0OgorCQkJCUlUeXBlIGVuY2xvc2luZyA9IHR5cGUuZ2V0RGVj
bGFyaW5nVHlwZSgpOworCQkJCXdoaWxlIChlbmNsb3NpbmcgIT0gbnVsbCkgeworCQkJCQkvLyBk
b24ndCBhbGxvdyB0cmF2ZWxsaW5nIGluIGFnYWluOgorCQkJCQlpZiAoZW5jbG9zZXNUeXBlKGVu
Y2xvc2luZywgZmFsc2UpKSB7CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCQllbmNs
b3NpbmcgPSBlbmNsb3NpbmcuZ2V0RGVjbGFyaW5nVHlwZSgpOworCQkJCX0KKwkJCX0KKwkJfQor
CQlyZXR1cm4gZmFsc2U7CisJfQorCXByaXZhdGUgYm9vbGVhbiBlbmNsb3Nlc1R5cGUoSVR5cGUg
dHlwZSwgYm9vbGVhbiByZWN1cnNlKSB7CisJCWlmICh0aGlzLnN1YlR5cGVzICE9IG51bGwpIHsK
KwkJCS8vIHNlYXJjaGluZyBzdWJ0eXBlcworCQkJaWYgKHRoaXMuc3ViVHlwZXMuY29udGFpbnMo
dHlwZSkpIHsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KKwkJCS8vIGJlIGZsZXhpYmxlOiBsb29r
IGF0IG9yaWdpbmFsIGVsZW1lbnQgKHNlZSBidWcgMTQxMDYgYW5kIGJlbG93KQorCQkJSVR5cGUg
b3JpZ2luYWwgPSB0eXBlLmlzQmluYXJ5KCkgPyBudWxsIDogKElUeXBlKXR5cGUuZ2V0UHJpbWFy
eUVsZW1lbnQoKTsKKwkJCWlmIChvcmlnaW5hbCAhPSB0eXBlICYmIHRoaXMuc3ViVHlwZXMuY29u
dGFpbnMob3JpZ2luYWwpKSB7CisJCQkJcmV0dXJuIHRydWU7CisJCQl9CisJCX0gZWxzZSB7CiAJ
CQlpZiAodGhpcy5oaWVyYXJjaHkuY29udGFpbnModHlwZSkpIHsKIAkJCQlyZXR1cm4gdHJ1ZTsK
IAkJCX0gZWxzZSB7CkBAIC0yOTgsMTAgKzM1NSwyNCBAQAogCQkJCUlUeXBlIG9yaWdpbmFsOwog
CQkJCWlmICghdHlwZS5pc0JpbmFyeSgpCiAJCQkJCQkmJiAob3JpZ2luYWwgPSAoSVR5cGUpdHlw
ZS5nZXRQcmltYXJ5RWxlbWVudCgpKSAhPSBudWxsKSB7Ci0JCQkJCXJldHVybiB0aGlzLmhpZXJh
cmNoeS5jb250YWlucyhvcmlnaW5hbCk7CisJCQkJCWlmICh0aGlzLmhpZXJhcmNoeS5jb250YWlu
cyhvcmlnaW5hbCkpIHsKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCQl9CiAJCQkJfQogCQkJfQog
CQl9CisJCWlmIChyZWN1cnNlKSB7CisJCQl0cnkgeworCQkJCUlUeXBlW10gbWVtYmVyVHlwZXMg
PSB0eXBlLmdldFR5cGVzKCk7CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBtZW1iZXJUeXBlcy5s
ZW5ndGg7IGkrKykgeworCQkJCQlpZiAoZW5jbG9zZXNUeXBlKG1lbWJlclR5cGVzW2ldLCByZWN1
cnNlKSkgeworCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQl9IGNhdGNoIChK
YXZhTW9kZWxFeGNlcHRpb24gZSkgeworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJfQogCQly
ZXR1cm4gZmFsc2U7CiAJfQogCS8qIChub24tSmF2YWRvYykKQEAgLTMyNCw3ICszOTUsMTEgQEAK
IAkJdGhpcy5lbGVtZW50Q291bnQgPSAwOwogCQl0aGlzLm5lZWRzUmVmcmVzaCA9IGZhbHNlOwog
CQlpZiAodGhpcy5oaWVyYXJjaHkgPT0gbnVsbCkgewotCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlz
LmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOworCQkJaWYgKHRo
aXMuamF2YVByb2plY3QgIT0gbnVsbCkgeworCQkJCXRoaXMuaGllcmFyY2h5ID0gdGhpcy5mb2N1
c1R5cGUubmV3VHlwZUhpZXJhcmNoeSh0aGlzLmphdmFQcm9qZWN0LCB0aGlzLm93bmVyLCBudWxs
KTsKKwkJCX0gZWxzZSB7CisJCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdU
eXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOworCQkJfQogCQl9IGVsc2UgewogCQkJdGhp
cy5oaWVyYXJjaHkucmVmcmVzaChudWxsKTsKIAkJfQpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5q
YXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjU3CmRpZmYgLXUgLXIxLjU3IEJhc2ljU2VhcmNo
RW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvQmFzaWNTZWFyY2hFbmdpbmUuamF2YQkzMSBPY3QgMjAwOCAxNjo1MzozMyAtMDAwMAkxLjU3
CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2Vh
cmNoRW5naW5lLmphdmEJNSBEZWMgMjAwOCAxODoxMzowMiAtMDAwMApAQCAtMTAwLDYgKzEwMCwx
NCBAQAogCQlyZXR1cm4gY3JlYXRlSGllcmFyY2h5U2NvcGUodHlwZSwgRGVmYXVsdFdvcmtpbmdD
b3B5T3duZXIuUFJJTUFSWSk7CiAJfQogCisKKwkvKioKKwkgKiBAc2VlIFNlYXJjaEVuZ2luZSNj
cmVhdGVIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QsSVR5cGUsYm9vbGVhbixib29sZWFuLFdv
cmtpbmdDb3B5T3duZXIpIGZvciBkZXRhaWxlZCBjb21tZW50LgorCSAqLworCXB1YmxpYyBzdGF0
aWMgSUphdmFTZWFyY2hTY29wZSBjcmVhdGVIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QgcHJv
amVjdCwgSVR5cGUgdHlwZSwgYm9vbGVhbiBvbmx5U3VidHlwZXMsIGJvb2xlYW4gbm9NZW1iZXJU
eXBlcywgV29ya2luZ0NvcHlPd25lciBvd25lcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7
CisJCXJldHVybiBuZXcgSGllcmFyY2h5U2NvcGUocHJvamVjdCwgdHlwZSwgb3duZXIsIG9ubHlT
dWJ0eXBlcywgbm9NZW1iZXJUeXBlcyk7CisJfQorCQogCS8qKgogCSAqIEBzZWUgU2VhcmNoRW5n
aW5lI2NyZWF0ZUhpZXJhcmNoeVNjb3BlKElUeXBlLFdvcmtpbmdDb3B5T3duZXIpIGZvciBkZXRh
aWxlZCBjb21tZW50LgogCSAqLwpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JlL3NlYXJjaC9UeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBlci5qYXZhCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9UeXBlTmFtZU1hdGNoUmVxdWVz
dG9yV3JhcHBlci5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjEyCmRpZmYgLXUgLXIxLjEy
IFR5cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFwcGVyLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBz
ZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBwZXIu
amF2YQkyNyBKdW4gMjAwOCAxNjowNDowOSAtMDAwMAkxLjEyCisrKyBzZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL1R5cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFwcGVy
LmphdmEJNSBEZWMgMjAwOCAxODoxMzowMiAtMDAwMApAQCAtMTA4LDcgKzEwOCwxMCBAQAogCQkJ
CTogY3JlYXRlVHlwZUZyb21KYXIocGF0aCwgc2VwYXJhdG9ySW5kZXgpOwogCQl9CiAJCWlmICh0
eXBlICE9IG51bGwpIHsKLQkJCXRoaXMucmVxdWVzdG9yLmFjY2VwdFR5cGVOYW1lTWF0Y2gobmV3
IEphdmFTZWFyY2hUeXBlTmFtZU1hdGNoKHR5cGUsIG1vZGlmaWVycykpOworCQkJLy8gaGllcmFy
Y2h5IHNjb3BlcyByZXF1aXJlIG9uZSBtb3JlIGNoZWNrOgorCQkJaWYgKCEodGhpcy5zY29wZSBp
bnN0YW5jZW9mIEhpZXJhcmNoeVNjb3BlKSB8fCB0aGlzLnNjb3BlLmVuY2xvc2VzKHR5cGUpKSB7
CisJCQkJdGhpcy5yZXF1ZXN0b3IuYWNjZXB0VHlwZU5hbWVNYXRjaChuZXcgSmF2YVNlYXJjaFR5
cGVOYW1lTWF0Y2godHlwZSwgbW9kaWZpZXJzKSk7CisJCQl9CiAJCX0KIAl9IGNhdGNoIChKYXZh
TW9kZWxFeGNlcHRpb24gZSkgewogCQkvLyBza2lwCkluZGV4OiBzZWFyY2gvb3JnL2VjbGlwc2Uv
amR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4x
NDcKZGlmZiAtdSAtcjEuMTQ3IFNlYXJjaEVuZ2luZS5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjA4
IC0wMDAwCTEuMTQ3CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJj
aEVuZ2luZS5qYXZhCTUgRGVjIDIwMDggMTg6MTM6MDIgLTAwMDAKQEAgLTE3MSw2ICsxNzEsMzEg
QEAKIAl9CiAKIAkvKioKKwkgKiBSZXR1cm5zIGEgSmF2YSBzZWFyY2ggc2NvcGUgbGltaXRlZCB0
byB0aGUgaGllcmFyY2h5IG9mIHRoZSBnaXZlbiB0eXBlIGFuZCB0byBhIGdpdmVuIHByb2plY3Qu
CisJICogVGhlIEphdmEgZWxlbWVudHMgcmVzdWx0aW5nIGZyb20gYSBzZWFyY2ggd2l0aCB0aGlz
IHNjb3BlIHdpbGwKKwkgKiBiZSB0eXBlcyBpbiB0aGlzIGhpZXJhcmNoeSwgb3IgbWVtYmVycyBv
ZiB0aGUgdHlwZXMgaW4gdGhpcyBoaWVyYXJjaHkuCisJICogCisJICogQnkgZGVmYXVsdCwgaGll
cmFyY2h5IHNjb3BlcyBpbmNsdWRlIGFsbCBkaXJlY3QgYW5kIGluZGlyZWN0IHN1cGVydHlwZXMg
YW5kIHN1YnR5cGVzIG9mIHRoZQorCSAqIGZvY3VzIHR5cGUuIFRoaXMgbWV0aG9kLCBob3dldmVy
LCBhbGxvd3MgdG8gcmVzdHJpY3QgdGhlIGhpZXJhcmNoeSB0byB0cnVlIHN1YnR5cGVzLAorCSAq
IG5laXRoZXIgaW5jbHVkaW5nIHN1cGVydHlwZXMgbm9yIHRoZSBmb2N1cyB0eXBlIGl0c2VsZi4K
KwkgKiAKKwkgKiBCeSBkZWZhdWx0LCBoaWVyYXJjaHkgc2NvcGVzIGluY2x1ZGUgYWxzbyBtZW1i
ZXIgdHlwZXMgYW5kIGVuY2xvc2luZyB0eXBlcyBvZiB0aG9zZSB0eXBlcworCSAqIHRoYXQgYWN0
dWFsbHkgc3BhbiB0aGUgaGllcmFyY2h5LiBUaGlzIG1ldGhvZCwgaG93ZXZlciwgYWxsb3dzIHRv
IGluaGliaXQgdGhpcyBiZWhhdmlvciwKKwkgKiBieSBwYXNzaW5nIDxjb2RlPmZhbHNlPC9jb2Rl
PiB0byB0aGUgcGFyYW1ldGVyIDxjb2RlPm5vTWVtYmVyVHlwZXM8L2NvZGU+LgorCSAqCisJICog
QHBhcmFtIHByb2plY3QgdGhlIHByb2plY3QgdG8gd2hpY2ggdG8gY29uc3RyYWluIHRoZSBzZWFy
Y2gKKwkgKiBAcGFyYW0gdHlwZSB0aGUgZm9jdXMgb2YgdGhlIGhpZXJhcmNoeSBzY29wZQorCSAq
IEBwYXJhbSBvbmx5U3VidHlwZXMgaWYgdHJ1ZSBvbmx5IHN1YnR5cGVzIG9mIDxjb2RlPnR5cGU8
L2NvZGU+IGFyZSBjb25zaWRlcmVkLgorCSAqIEBwYXJhbSBub01lbWJlclR5cGVzIGlmIHRydWUg
ZG8gbm90IGNvbnNpZGVyIG1lbWJlciBvciBlbmNsb3NpbmcgdHlwZXMgb2YgdHlwZXMgaW4gdGhl
IGdpdmVuIHR5cGUgaGllYXJjaHkuCisJICogQHBhcmFtIG93bmVyIHRoZSBvd25lciBvZiB3b3Jr
aW5nIGNvcGllcyB0aGF0IHRha2UgcHJlY2VkZW5jZSBvdmVyIG9yaWdpbmFsIGNvbXBpbGF0aW9u
IHVuaXRzCisJICogQHJldHVybiBhIG5ldyBoaWVyYXJjaHkgc2NvcGUKKwkgKiBAZXhjZXB0aW9u
IEphdmFNb2RlbEV4Y2VwdGlvbiBpZiB0aGUgaGllcmFyY2h5IGNvdWxkIG5vdCBiZSBjb21wdXRl
ZCBvbiB0aGUgZ2l2ZW4gdHlwZQorCSAqLworCXB1YmxpYyBzdGF0aWMgSUphdmFTZWFyY2hTY29w
ZSBjcmVhdGVIaWVyYXJjaHlTY29wZShJSmF2YVByb2plY3QgcHJvamVjdCwgSVR5cGUgdHlwZSwg
Ym9vbGVhbiBvbmx5U3VidHlwZXMsIGJvb2xlYW4gbm9NZW1iZXJUeXBlcywgV29ya2luZ0NvcHlP
d25lciBvd25lcikgdGhyb3dzIEphdmFNb2RlbEV4Y2VwdGlvbiB7CisJCXJldHVybiBCYXNpY1Nl
YXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShwcm9qZWN0LCB0eXBlLCBvbmx5U3VidHlw
ZXMsIG5vTWVtYmVyVHlwZXMsIG93bmVyKTsKKwl9CisJCisJLyoqCiAJICogUmV0dXJucyBhIEph
dmEgc2VhcmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0aGUgZ2l2ZW4gdHlw
ZS4KIAkgKiBXaGVuIHRoZSBoaWVyYXJjaHkgaXMgY29tcHV0ZWQsIHRoZSB0eXBlcyBkZWZpbmVk
IGluIHRoZSB3b3JraW5nIGNvcGllcyBvd25lZAogCSAqIGJ5IHRoZSBnaXZlbiBvd25lciB0YWtl
IHByZWNlZGVuY2Ugb3ZlciB0aGUgb3JpZ2luYWwgY29tcGlsYXRpb24gdW5pdHMuCiNQIG9yZy5l
Y2xpcHNlLmpkdC5jb3JlLnRlc3RzLm1vZGVsCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvamR0L2Nv
cmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3RzLmphdmEKPT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTog
L2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbC9zcmMvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3RzLmphdmEsdgpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMTgwCmRpZmYgLXUgLXIxLjE4MCBKYXZhU2VhcmNoVGVzdHMuamF2
YQotLS0gc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0
cy5qYXZhCTIzIE9jdCAyMDA4IDA4OjMxOjIwIC0wMDAwCTEuMTgwCisrKyBzcmMvb3JnL2VjbGlw
c2UvamR0L2NvcmUvdGVzdHMvbW9kZWwvSmF2YVNlYXJjaFRlc3RzLmphdmEJNSBEZWMgMjAwOCAx
ODoxMzowMyAtMDAwMApAQCAtMjQyMiw2ICsyNDIyLDIyNyBAQAogCiB9CiAvKioKKyAqIEhpZXJh
cmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5j
bG9zZXMoKTogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJj
aFNjb3BlMDYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQg
Y3VCID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAi
LCAiQi5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29t
cGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAg
ICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNj
b3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUs
IHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gZG9uJ3QgaW5jbHVkZSBz
dXBlci1jbGFzc2VzOgorICAgICAgICBhc3NlcnRGYWxzZSgiYTEwLkEgc2hvdWxkIG5vdCBiZSBp
bmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUIuZ2V0VHlwZSgi
QSIpKSk7CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQiBzaG91bGQgbm90IGJlIGluY2x1ZGVk
IGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qi5nZXRUeXBlKCJCIikpKTsK
KyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC9CLmphdmEgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBp
biBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUIuZ2V0VW5kZXJseWluZ1Jlc291
cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBz
Y29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMo
KTogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3Bl
MDcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0g
dGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5q
YXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJ
SmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3Bl
KG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gZG9u
J3QgaW5jbHVkZSBmb2N1cyB0eXBlOgorICAgICAgICBhc3NlcnRGYWxzZSgiYTEwLkMgc2hvdWxk
IGJlIG5vdCBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3Nlcyh0eXBl
KSk7CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAvQy5qYXZhIHNob3VsZCBiZSBpbmNsdWRlZCBp
biBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUMuZ2V0VW5kZXJseWluZ1Jlc291
cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7ICAgICAgIAorfQorLyoqCisgKiBIaWVy
YXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IGVu
Y2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFy
Y2hTY29wZTA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRpb25Vbml0
IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEw
IiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RCA9IHRoaXMuIGdldENv
bXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkQuamF2YSIpOworICAg
ICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2
YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0g
Y3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJj
aEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxs
KTsKKyAgICAgICAgCisgICAgICAgIC8vIHJlZ3VsYXIgc3ViLXR5cGVzOgorICAgICAgICBhc3Nl
cnRUcnVlKCJhMTAuRCBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2Nv
cGUuZW5jbG9zZXMoY3VELmdldFR5cGUoIkQiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJhMTAv
RC5qYXZhIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNs
b3NlcyhjdUQuZ2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygp
KSk7CisgICAgICAgIAorICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRSBzaG91bGQgYmUgaW5jbHVk
ZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkUiKSkp
OworICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRiBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFy
Y2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYiKSkpOworfQorLyoqCisg
KiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1
MTM5IGVuY2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRl
c3RTZWFyY2hTY29wZTA5KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRp
b25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMi
LCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMu
IGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIp
OworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFT
ZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxs
LCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIC8vIHN1Yi10eXBl
IGlzIGEgbmVzdGVkIHR5cGU6CisgICAgICAgIGFzc2VydFRydWUoImExMC5IJEkgc2hvdWxkIGJl
IGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBl
KCJIIikuZ2V0VHlwZSgiSSIpKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0Lgor
ICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTogZmluZCBvbmx5
IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTAoKSB0aHJvd3Mg
Q29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29t
cGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAg
ICAgIElDb21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZh
U2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBj
dUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNo
RW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwp
OworICAgICAgICAKKyAgICAgICAgLy8gbWVtYmVyIG9mIGEgc3ViLXR5cGU6CisgICAgICAgIGFz
c2VydEZhbHNlKCJhMTAuRiRHIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNj
b3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYiKS5nZXRUeXBlKCJHIikpKTsKK30K
Ky8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQg
YnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3VidHlwZXMgYW5kIHRoZWlyIG1lbWJl
ciB0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTExKCkgdGhyb3dzIENv
cmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBp
bGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAgICAg
ICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNl
YXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VD
LmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVu
Z2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCBmYWxzZSwgbnVsbCk7
CisgICAgICAgIAorICAgICAgICAvLyBtZW1iZXIgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNz
ZXJ0VHJ1ZSgiYTEwLkYkRyBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwg
c2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYiKS5nZXRUeXBlKCJHIikpKTsKK30KKy8qKgor
ICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIx
NTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0
ZXN0U2VhcmNoU2NvcGUxMigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0
aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3Jj
IiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUUgPSB0aGlz
LiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJFLmphdmEi
KTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZh
U2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVs
bCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICAvLyBlbmNsb3Np
bmcgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5IIHNob3VsZCBub3Qg
YmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5
cGUoIkgiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJhMTAvRS5qYXZhIHNob3VsZCBiZSBpbmNs
dWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VW5kZXJseWlu
Z1Jlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7Cit9CisvKioKKyAqIEhpZXJh
cmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgc2Vh
cmNoOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2Nv
cGUxMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBj
dUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIs
ICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAg
ICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5
U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICBz
ZWFyY2goIioqIiwgVFlQRSwgREVDTEFSQVRJT05TLCBzY29wZSk7CisgICAgICAgIGFzc2VydFNl
YXJjaFJlc3VsdHMoCisgICAgICAgIAkJInNyYy9hMTAvRC5qYXZhIGExMC5EIFtEXVxuIiArIAor
ICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuRSBbRV1cbiIgKyAKKyAgICAgICAgCQkic3Jj
L2ExMC9FLmphdmEgYTEwLkYgW0ZdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRS5qYXZhIGEx
MC5IJEkgW0ldIgorICAgICAgICAJCSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0
LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkg
c3VidHlwZXMgLSBkaXNhYmxlZCkuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTE0
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1QyA9
IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMu
amF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAg
SUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29w
ZShudWxsLCB0eXBlLCAvKm9ubHlTdWJUeXBlcyovZmFsc2UsIHRydWUsIG51bGwpOworICAgICAg
ICAKKyAgICAgICAgc2VhcmNoKCIqKiIsIFRZUEUsIERFQ0xBUkFUSU9OUywgc2NvcGUpOworICAg
ICAgICBhc3NlcnRTZWFyY2hSZXN1bHRzKAorICAgICAgICAJCSJzcmMvYTEwL0IuamF2YSBhMTAu
QSBbQV1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9CLmphdmEgYTEwLkIgW0JdXG4iICsgCisg
ICAgICAgIAkJInNyYy9hMTAvQy5qYXZhIGExMC5DIFtDXVxuIiArIAorICAgICAgICAJCSJzcmMv
YTEwL0QuamF2YSBhMTAuRCBbRF1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEw
LkUgW0VdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRS5qYXZhIGExMC5GIFtGXVxuIiArIAor
ICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuSCRJIFtJXVxuIiArIAorICAgICAgICAJCWdl
dEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIiBqYXZhLmxhbmcuT2JqZWN0IgorICAgICAgICAJ
CSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFu
Y2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkgc3VidHlwZXMgLSBkaWZmZXJlbnQg
Y2FsbCBjaGFpbikuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTE1KCkgdGhyb3dz
IENvcmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdl
dENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOwor
ICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFy
Y2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0
eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAJVHlwZU5hbWVNYXRjaENvbGxlY3RvciBjb2xs
ZWN0b3IgPSBuZXcgVHlwZU5hbWVNYXRjaENvbGxlY3RvcigpIHsKKyAgICAJCXB1YmxpYyBTdHJp
bmcgdG9TdHJpbmcoKXsKKyAgICAJCQlyZXR1cm4gdG9GdWxseVF1YWxpZmllZE5hbWVzU3RyaW5n
KCk7CisgICAgCQl9CisgICAgCX07CisgICAgCW5ldyBTZWFyY2hFbmdpbmUoKS5zZWFyY2hBbGxU
eXBlTmFtZXMoCisgICAgCQludWxsLAorICAgIAkJbnVsbCwKKyAgICAJCXNjb3BlLAorICAgIAkJ
Y29sbGVjdG9yLAorICAgIAkJSUphdmFTZWFyY2hDb25zdGFudHMuV0FJVF9VTlRJTF9SRUFEWV9U
T19TRUFSQ0gsCisgICAgCQludWxsKTsKKyAgICAJU3RyaW5nIGV4cGVjdGVkID0gCisgICAgCQkJ
ImExMC5EXG4iICsKKyAgICAJCQkiYTEwLkVcbiIgKworICAgIAkJCSJhMTAuRlxuIiArCisgICAg
CQkJImExMC5IJEkiOworICAgIAlhc3NlcnRUcnVlKCJXZSBzaG91bGQgZ2V0IHNvbWUgdHlwZXMh
IiwgY29sbGVjdG9yLnNpemUoKSA+IDApOworICAgIAlhc3NlcnRFcXVhbHMoIkZvdW5kIHR5cGVz
IHNvdW5kIG5vdCB0byBiZSBjb3JyZWN0IiwgZXhwZWN0ZWQsIGNvbGxlY3Rvci50b1N0cmluZygp
KTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5oYW5j
ZW1lbnQgYnVnIDIxNTEzOSBzZWFyY2g6IGZpbmQgb25seSBzdWJ0eXBlcyBwbHVzIG1lbWJlciAm
IGVuY2xvc2luZyB0eXBlcyAtIGRpZmZlcmVudCBjYWxsIGNoYWluKS4KKyAqLworcHVibGljIHZv
aWQgdGVzdFNlYXJjaFNjb3BlMTYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgICAgIElD
b21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNo
IiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0
VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5l
LmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIGZhbHNlLCBudWxsKTsKKyAg
ICAJVHlwZU5hbWVNYXRjaENvbGxlY3RvciBjb2xsZWN0b3IgPSBuZXcgVHlwZU5hbWVNYXRjaENv
bGxlY3RvcigpIHsKKyAgICAJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKXsKKyAgICAJCQlyZXR1
cm4gdG9GdWxseVF1YWxpZmllZE5hbWVzU3RyaW5nKCk7CisgICAgCQl9CisgICAgCX07CisgICAg
CW5ldyBTZWFyY2hFbmdpbmUoKS5zZWFyY2hBbGxUeXBlTmFtZXMoCisgICAgCQludWxsLAorICAg
IAkJbnVsbCwKKyAgICAJCXNjb3BlLAorICAgIAkJY29sbGVjdG9yLAorICAgIAkJSUphdmFTZWFy
Y2hDb25zdGFudHMuV0FJVF9VTlRJTF9SRUFEWV9UT19TRUFSQ0gsCisgICAgCQludWxsKTsKKyAg
ICAJU3RyaW5nIGV4cGVjdGVkID0gCisgICAgCQkJImExMC5EXG4iICsKKyAgICAJCQkiYTEwLkVc
biIgKworICAgIAkJCSJhMTAuRlxuIiArCisgICAgCQkJImExMC5GJEdcbiIgKworICAgIAkJCSJh
MTAuSFxuIiArCisgICAgCQkJImExMC5IJEkiOworICAgIAlhc3NlcnRUcnVlKCJXZSBzaG91bGQg
Z2V0IHNvbWUgdHlwZXMhIiwgY29sbGVjdG9yLnNpemUoKSA+IDApOworICAgIAlhc3NlcnRFcXVh
bHMoIkZvdW5kIHR5cGVzIHNvdW5kIG5vdCB0byBiZSBjb3JyZWN0IiwgZXhwZWN0ZWQsIGNvbGxl
Y3Rvci50b1N0cmluZygpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAo
dGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcyhtZXRob2QpOiBmaW5kIG9u
bHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUxNygpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRD
b21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAg
ICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUUgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkph
dmFTZWFyY2giLCAic3JjIiwgImExMCIsICJFLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9
IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFy
Y2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVs
bCk7CisgICAgICAgIAorICAgICAgICAvLyBtZXRob2Qgb2YgYSBtZW1iZXIgb2YgYSBzdWItdHlw
ZToKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5GJEcubSgpIHNob3VsZCBub3QgYmUgaW5jbHVk
ZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYiKS5n
ZXRUeXBlKCJHIikuZ2V0TWV0aG9kKCJtIiwgbmV3IFN0cmluZ1swXSkpKTsKK30KKy8qKgorICog
SGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEz
OSBlbmNsb3NlcyhtZXRob2QpOiBmaW5kIG9ubHkgc3VidHlwZXMgYnV0IGFsc28gbWVtYmVyIHR5
cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTgoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRp
b25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElD
b21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNo
IiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0
VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5l
LmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIGZhbHNlLCBudWxsKTsKKyAg
ICAgICAgCisgICAgICAgIC8vIG1ldGhvZCBvZiBhIG1lbWJlciBvZiBhIHN1Yi10eXBlOgorICAg
ICAgICBhc3NlcnRUcnVlKCJhMTAuRiRHLm0oKSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFy
Y2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYiKS5nZXRUeXBlKCJHIiku
Z2V0TWV0aG9kKCJtIiwgbmV3IFN0cmluZ1swXSkpKTsKK30KKy8qKgogICogU2ltcGxlIHR5cGUg
ZGVjbGFyYXRpb24gdGVzdC4KICAqLwogcHVibGljIHZvaWQgdGVzdFR5cGVEZWNsYXJhdGlvbjAx
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geyAvLyB3YXMgdGVzdFNpbXBsZVR5cGVEZWNsYXJhdGlv
bgpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKPT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpS
Q1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKZGlmZiAtTiB3b3Jr
c3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAg
MDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZhCTEg
SmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwzIEBACitwYWNrYWdlIGExMDsKKwor
cHVibGljIGNsYXNzIEQgZXh0ZW5kcyBDIHsgfQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gv
c3JjL2ExMC9DLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gv
c3JjL2ExMC9DLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2
YQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9K
YXZhU2VhcmNoL3NyYy9hMTAvQy5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAs
MCArMSwzIEBACitwYWNrYWdlIGExMDsKKworcHVibGljIGNsYXNzIEMgZXh0ZW5kcyBCIHt9Cklu
ZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQpkaWZmIC1OIHdvcmtzcGFj
ZS9KYXZhU2VhcmNoL3NyYy9hMTAvRS5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDow
MDowMCAtMDAwMAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9FLmphdmEJMSBKYW4g
MTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCwwICsxLDEzIEBACitwYWNrYWdlIGExMDsKKworcHVi
bGljIGNsYXNzIEUgZXh0ZW5kcyBEIHt9CisKK2NsYXNzIEYgZXh0ZW5kcyBDIHsKKwljbGFzcyBH
IHsKKwkJdm9pZCBtKCl7fQorCX0KK30KKworY2xhc3MgSCB7IAorCWNsYXNzIEkgZXh0ZW5kcyBF
IHt9Cit9CkluZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0IuamF2YQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0IuamF2YQpkaWZmIC1O
IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4g
MTk3MCAwMDowMDowMCAtMDAwMAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9CLmph
dmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCwwICsxLDUgQEAKK3BhY2thZ2UgYTEw
OworCitjbGFzcyBBIHsgfQorCitwdWJsaWMgY2xhc3MgQiBleHRlbmRzIEEgeyB9Cg==
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>123432</attachid>
            <date>2009-01-22 16:28:00 -0500</date>
            <delta_ts>2009-09-21 14:31:40 -0400</delta_ts>
            <desc>updated patch</desc>
            <filename>bug_215139_patch7.txt</filename>
            <type>text/plain</type>
            <size>24327</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFTZWFyY2hUZXN0cy5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjE4MApkaWZmIC11IC1yMS4xODAgSmF2YVNlYXJjaFRlc3RzLmphdmEKLS0tIHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoVGVzdHMuamF2YQkyMyBPY3QgMjAw
OCAwODozMToyMCAtMDAwMAkxLjE4MAorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhCTIyIEphbiAyMDA5IDIwOjQ2OjQzIC0wMDAwCkBA
IC0yNDIyLDYgKzI0MjIsMjI3IEBACiAKIH0KIC8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3Qu
CisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9u
bHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUwNigpIHRocm93
cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUIgPSB0aGlzLiBnZXRD
b21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJCLmphdmEiKTsKKyAg
ICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkph
dmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9
IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFy
Y2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVs
bCk7CisgICAgICAgIAorICAgICAgICAvLyBkb24ndCBpbmNsdWRlIHN1cGVyLWNsYXNzZXM6Cisg
ICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQSBzaG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhpZXJh
cmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qi5nZXRUeXBlKCJBIikpKTsKKyAgICAgICAg
YXNzZXJ0RmFsc2UoImExMC5CIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNj
b3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VCLmdldFR5cGUoIkIiKSkpOworICAgICAgICBhc3NlcnRG
YWxzZSgiYTEwL0IuamF2YSBzaG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29w
ZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qi5nZXRVbmRlcmx5aW5nUmVzb3VyY2UoKS5nZXRGdWxsUGF0
aCgpLnRvU3RyaW5nKCkpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAo
dGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3Vi
dHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUwNygpIHRocm93cyBDb3Jl
RXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxh
dGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAg
SVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUg
c2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1
ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICAvLyBkb24ndCBpbmNsdWRlIGZvY3Vz
IHR5cGU6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQyBzaG91bGQgYmUgbm90IGluY2x1ZGVk
IGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKHR5cGUpKTsKKyAgICAgICAgYXNz
ZXJ0RmFsc2UoImExMC9DLmphdmEgc2hvdWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29w
ZSIsIHNjb3BlLmVuY2xvc2VzKGN1Qy5nZXRVbmRlcmx5aW5nUmVzb3VyY2UoKS5nZXRGdWxsUGF0
aCgpLnRvU3RyaW5nKCkpKTsgICAgICAgCit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0
LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTogZmluZCBv
bmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMDgoKSB0aHJv
d3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0
Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7Cisg
ICAgICAgIElDb21waWxhdGlvblVuaXQgY3VEID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJK
YXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRC5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlv
blVuaXQgY3VFID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIs
ICJhMTAiLCAiRS5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIp
OworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhp
ZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAg
ICAgICAgLy8gcmVndWxhciBzdWItdHlwZXM6CisgICAgICAgIGFzc2VydFRydWUoImExMC5EIHNo
b3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUQu
Z2V0VHlwZSgiRCIpKSk7CisgICAgICAgIGFzc2VydFRydWUoImExMC9ELmphdmEgc2hvdWxkIGJl
IGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RC5nZXRVbmRl
cmx5aW5nUmVzb3VyY2UoKS5nZXRGdWxsUGF0aCgpLnRvU3RyaW5nKCkpKTsKKyAgICAgICAgCisg
ICAgICAgIGFzc2VydFRydWUoImExMC5FIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkg
c2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRSIpKSk7CisgICAgICAgIGFzc2Vy
dFRydWUoImExMC5GIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29w
ZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRiIpKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29w
ZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTog
ZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMDko
KSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0gdGhp
cy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZh
Iik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25V
bml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7CisgICAgICAgIElUeXBl
IHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3Bl
ID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRy
dWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gc3ViLXR5cGUgaXMgYSBuZXN0ZWQgdHlw
ZToKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkgkSSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGll
cmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkgiKS5nZXRUeXBlKCJJ
IikpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5o
YW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICov
CitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUxMCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsK
KyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkph
dmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9u
VW5pdCBjdUUgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwg
ImExMCIsICJFLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7
CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGll
cmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAg
ICAgICAvLyBtZW1iZXIgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5G
JEcgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNs
b3NlcyhjdUUuZ2V0VHlwZSgiRiIpLmdldFR5cGUoIkciKSkpOworfQorLyoqCisgKiBIaWVyYXJj
aHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IGVuY2xv
c2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcyBhbmQgdGhlaXIgbWVtYmVyIHR5cGVzKS4KKyAqLwor
cHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cisg
ICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZh
U2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVu
aXQgY3VFID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJh
MTAiLCAiRS5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOwor
ICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJh
cmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIGZhbHNlLCBudWxsKTsKKyAgICAgICAgCisgICAg
ICAgIC8vIG1lbWJlciBvZiBhIHN1Yi10eXBlOgorICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRiRH
IHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3Nlcyhj
dUUuZ2V0VHlwZSgiRiIpLmdldFR5cGUoIkciKSkpOworfQorLyoqCisgKiBIaWVyYXJjaHkgc2Nv
cGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKCk6
IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTEy
KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRo
aXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2
YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENvbXBpbGF0aW9u
VW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAgICAgICBJVHlw
ZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29w
ZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0
cnVlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIC8vIGVuY2xvc2luZyBvZiBhIHN1Yi10eXBl
OgorICAgICAgICBhc3NlcnRGYWxzZSgiYTEwLkggc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBo
aWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiSCIpKSk7CisgICAg
ICAgIGFzc2VydFRydWUoImExMC9FLmphdmEgc2hvdWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNo
eSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRVbmRlcmx5aW5nUmVzb3VyY2UoKS5nZXRG
dWxsUGF0aCgpLnRvU3RyaW5nKCkpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3Qu
CisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBzZWFyY2g6IGZpbmQgb25seSBz
dWJ0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTEzKCkgdGhyb3dzIENv
cmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENv
bXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAg
ICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hT
Y29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBl
LCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIHNlYXJjaCgiKioiLCBUWVBF
LCBERUNMQVJBVElPTlMsIHNjb3BlKTsKKyAgICAgICAgYXNzZXJ0U2VhcmNoUmVzdWx0cygKKyAg
ICAgICAgCQkic3JjL2ExMC9ELmphdmEgYTEwLkQgW0RdXG4iICsgCisgICAgICAgIAkJInNyYy9h
MTAvRS5qYXZhIGExMC5FIFtFXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAu
RiBbRl1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkgkSSBbSV0iCisgICAg
ICAgIAkJKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3Ig
ZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBzZWFyY2g6IGZpbmQgb25seSBzdWJ0eXBlcyAtIGRpc2Fi
bGVkKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTQoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGls
YXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAg
IElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3Bl
IHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIC8q
b25seVN1YlR5cGVzKi9mYWxzZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICBzZWFy
Y2goIioqIiwgVFlQRSwgREVDTEFSQVRJT05TLCBzY29wZSk7CisgICAgICAgIGFzc2VydFNlYXJj
aFJlc3VsdHMoCisgICAgICAgIAkJInNyYy9hMTAvQi5qYXZhIGExMC5BIFtBXVxuIiArIAorICAg
ICAgICAJCSJzcmMvYTEwL0IuamF2YSBhMTAuQiBbQl1cbiIgKyAKKyAgICAgICAgCQkic3JjL2Ex
MC9DLmphdmEgYTEwLkMgW0NdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRC5qYXZhIGExMC5E
IFtEXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuRSBbRV1cbiIgKyAKKyAg
ICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkYgW0ZdXG4iICsgCisgICAgICAgIAkJInNyYy9h
MTAvRS5qYXZhIGExMC5IJEkgW0ldXG4iICsgCisgICAgICAgIAkJZ2V0RXh0ZXJuYWxKQ0xQYXRo
U3RyaW5nKCkgKyAiIGphdmEubGFuZy5PYmplY3QiCisgICAgICAgIAkJKTsKK30KKy8qKgorICog
SGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEz
OSBzZWFyY2g6IGZpbmQgb25seSBzdWJ0eXBlcyAtIGRpZmZlcmVudCBjYWxsIGNoYWluKS4KKyAq
LworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTUoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0
KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElUeXBlIHR5
cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0g
U2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUs
IG51bGwpOworICAgIAlUeXBlTmFtZU1hdGNoQ29sbGVjdG9yIGNvbGxlY3RvciA9IG5ldyBUeXBl
TmFtZU1hdGNoQ29sbGVjdG9yKCkgeworICAgIAkJcHVibGljIFN0cmluZyB0b1N0cmluZygpewor
ICAgIAkJCXJldHVybiB0b0Z1bGx5UXVhbGlmaWVkTmFtZXNTdHJpbmcoKTsKKyAgICAJCX0KKyAg
ICAJfTsKKyAgICAJbmV3IFNlYXJjaEVuZ2luZSgpLnNlYXJjaEFsbFR5cGVOYW1lcygKKyAgICAJ
CW51bGwsCisgICAgCQludWxsLAorICAgIAkJc2NvcGUsCisgICAgCQljb2xsZWN0b3IsCisgICAg
CQlJSmF2YVNlYXJjaENvbnN0YW50cy5XQUlUX1VOVElMX1JFQURZX1RPX1NFQVJDSCwKKyAgICAJ
CW51bGwpOworICAgIAlTdHJpbmcgZXhwZWN0ZWQgPSAKKyAgICAJCQkiYTEwLkRcbiIgKworICAg
IAkJCSJhMTAuRVxuIiArCisgICAgCQkJImExMC5GXG4iICsKKyAgICAJCQkiYTEwLkgkSSI7Cisg
ICAgCWFzc2VydFRydWUoIldlIHNob3VsZCBnZXQgc29tZSB0eXBlcyEiLCBjb2xsZWN0b3Iuc2l6
ZSgpID4gMCk7CisgICAgCWFzc2VydEVxdWFscygiRm91bmQgdHlwZXMgc291bmQgbm90IHRvIGJl
IGNvcnJlY3QiLCBleHBlY3RlZCwgY29sbGVjdG9yLnRvU3RyaW5nKCkpOworfQorLyoqCisgKiBI
aWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5
IHNlYXJjaDogZmluZCBvbmx5IHN1YnR5cGVzIHBsdXMgbWVtYmVyICYgZW5jbG9zaW5nIHR5cGVz
IC0gZGlmZmVyZW50IGNhbGwgY2hhaW4pLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2Nv
cGUxNigpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBj
dUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIs
ICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAg
ICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5
U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgZmFsc2UsIG51bGwpOworICAgIAlUeXBlTmFtZU1hdGNo
Q29sbGVjdG9yIGNvbGxlY3RvciA9IG5ldyBUeXBlTmFtZU1hdGNoQ29sbGVjdG9yKCkgeworICAg
IAkJcHVibGljIFN0cmluZyB0b1N0cmluZygpeworICAgIAkJCXJldHVybiB0b0Z1bGx5UXVhbGlm
aWVkTmFtZXNTdHJpbmcoKTsKKyAgICAJCX0KKyAgICAJfTsKKyAgICAJbmV3IFNlYXJjaEVuZ2lu
ZSgpLnNlYXJjaEFsbFR5cGVOYW1lcygKKyAgICAJCW51bGwsCisgICAgCQludWxsLAorICAgIAkJ
c2NvcGUsCisgICAgCQljb2xsZWN0b3IsCisgICAgCQlJSmF2YVNlYXJjaENvbnN0YW50cy5XQUlU
X1VOVElMX1JFQURZX1RPX1NFQVJDSCwKKyAgICAJCW51bGwpOworICAgIAlTdHJpbmcgZXhwZWN0
ZWQgPSAKKyAgICAJCQkiYTEwLkRcbiIgKworICAgIAkJCSJhMTAuRVxuIiArCisgICAgCQkJImEx
MC5GXG4iICsKKyAgICAJCQkiYTEwLkYkR1xuIiArCisgICAgCQkJImExMC5IXG4iICsKKyAgICAJ
CQkiYTEwLkgkSSI7CisgICAgCWFzc2VydFRydWUoIldlIHNob3VsZCBnZXQgc29tZSB0eXBlcyEi
LCBjb2xsZWN0b3Iuc2l6ZSgpID4gMCk7CisgICAgCWFzc2VydEVxdWFscygiRm91bmQgdHlwZXMg
c291bmQgbm90IHRvIGJlIGNvcnJlY3QiLCBleHBlY3RlZCwgY29sbGVjdG9yLnRvU3RyaW5nKCkp
OworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNl
bWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKG1ldGhvZCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisg
Ki8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTE3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgi
SmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRp
b25Vbml0IGN1RSA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMi
LCAiYTEwIiwgIkUuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMi
KTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVI
aWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisg
ICAgICAgIC8vIG1ldGhvZCBvZiBhIG1lbWJlciBvZiBhIHN1Yi10eXBlOgorICAgICAgICBhc3Nl
cnRGYWxzZSgiYTEwLkYkRy5tKCkgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkg
c2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRiIpLmdldFR5cGUoIkciKS5nZXRN
ZXRob2QoIm0iLCBuZXcgU3RyaW5nWzBdKSkpOworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUg
dGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKG1ldGhv
ZCk6IGZpbmQgb25seSBzdWJ0eXBlcyBidXQgYWxzbyBtZW1iZXIgdHlwZXMpLgorICovCitwdWJs
aWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUxOCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJ
SUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFy
Y2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBj
dUUgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIs
ICJFLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAg
ICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5
U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgZmFsc2UsIG51bGwpOworICAgICAgICAKKyAgICAgICAg
Ly8gbWV0aG9kIG9mIGEgbWVtYmVyIG9mIGEgc3ViLXR5cGU6CisgICAgICAgIGFzc2VydFRydWUo
ImExMC5GJEcubSgpIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29w
ZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiRiIpLmdldFR5cGUoIkciKS5nZXRNZXRob2QoIm0iLCBu
ZXcgU3RyaW5nWzBdKSkpOworfQorLyoqCiAgKiBTaW1wbGUgdHlwZSBkZWNsYXJhdGlvbiB0ZXN0
LgogICovCiBwdWJsaWMgdm9pZCB0ZXN0VHlwZURlY2xhcmF0aW9uMDEoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7IC8vIHdhcyB0ZXN0U2ltcGxlVHlwZURlY2xhcmF0aW9uCkluZGV4OiB3b3Jrc3Bh
Y2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3Bh
Y2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNo
L3NyYy9hMTAvRC5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAor
Kysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEJMSBKYW4gMTk3MCAwMDowMDow
MCAtMDAwMApAQCAtMCwwICsxLDMgQEAKK3BhY2thZ2UgYTEwOworCitwdWJsaWMgY2xhc3MgRCBl
eHRlbmRzIEMgeyB9CkluZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2YQo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2YQpk
aWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQy5qYXZhCi0tLSAvZGV2L251bGwJ
MSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9DLmphdmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCwwICsxLDMgQEAKK3BhY2th
Z2UgYTEwOworCitwdWJsaWMgY2xhc3MgQyBleHRlbmRzIEIge30KSW5kZXg6IHdvcmtzcGFjZS9K
YXZhU2VhcmNoL3NyYy9hMTAvRS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IHdvcmtzcGFjZS9K
YXZhU2VhcmNoL3NyYy9hMTAvRS5qYXZhCmRpZmYgLU4gd29ya3NwYWNlL0phdmFTZWFyY2gvc3Jj
L2ExMC9FLmphdmEKLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCisrKyB3
b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQkxIEphbiAxOTcwIDAwOjAwOjAwIC0w
MDAwCkBAIC0wLDAgKzEsMTMgQEAKK3BhY2thZ2UgYTEwOworCitwdWJsaWMgY2xhc3MgRSBleHRl
bmRzIEQge30KKworY2xhc3MgRiBleHRlbmRzIEMgeworCWNsYXNzIEcgeworCQl2b2lkIG0oKXt9
CisJfQorfQorCitjbGFzcyBIIHsgCisJY2xhc3MgSSBleHRlbmRzIEUge30KK30KSW5kZXg6IHdv
cmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IHdv
cmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCmRpZmYgLU4gd29ya3NwYWNlL0phdmFT
ZWFyY2gvc3JjL2ExMC9CLmphdmEKLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0w
MDAwCisrKyB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0IuamF2YQkxIEphbiAxOTcwIDAw
OjAwOjAwIC0wMDAwCkBAIC0wLDAgKzEsNSBAQAorcGFja2FnZSBhMTA7CisKK2NsYXNzIEEgeyB9
CisKK3B1YmxpYyBjbGFzcyBCIGV4dGVuZHMgQSB7IH0KI1Agb3JnLmVjbGlwc2UuamR0LmNvcmUK
SW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFy
Y2h5U2NvcGUuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5l
Y2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvSGllcmFyY2h5U2NvcGUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40NgpkaWZmIC11
IC1yMS40NiBIaWVyYXJjaHlTY29wZS5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2lu
dGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6
MDkgLTAwMDAJMS40NgorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3Nl
YXJjaC9IaWVyYXJjaHlTY29wZS5qYXZhCTIyIEphbiAyMDA5IDIwOjQ2OjQ4IC0wMDAwCkBAIC0x
LDUgKzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAw
MCwgMjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2
ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBt
YWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vu
c2UgdjEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBh
dmFpbGFibGUgYXQKQEAgLTIwLDkgKzIwLDYgQEAKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuY29y
ZS4qOwogaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb21waWxlci51dGlsLlN1ZmZp
eENvbnN0YW50czsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS4qOwotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphclBhY2thZ2VGcmFnbWVudFJvb3Q7
Ci1pbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YUVsZW1lbnQ7Ci1pbXBv
cnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuSmF2YU1vZGVsOwogaW1wb3J0IG9yZy5l
Y2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLmhpZXJhcmNoeS5UeXBlSGllcmFyY2h5OwogCiAvKioK
QEAgLTM1LDcgKzMyLDYgQEAKIAlwcml2YXRlIFdvcmtpbmdDb3B5T3duZXIgb3duZXI7CiAKIAlw
cml2YXRlIElUeXBlSGllcmFyY2h5IGhpZXJhcmNoeTsKLQlwcml2YXRlIElUeXBlW10gdHlwZXM7
CiAJcHJpdmF0ZSBIYXNoU2V0IHJlc291cmNlUGF0aHM7CiAJcHJpdmF0ZSBJUGF0aFtdIGVuY2xv
c2luZ1Byb2plY3RzQW5kSmFyczsKIApAQCAtNDQsNiArNDAsMTAgQEAKIAogCXB1YmxpYyBib29s
ZWFuIG5lZWRzUmVmcmVzaDsKIAorCXByaXZhdGUgSGFzaFNldCBzdWJUeXBlcyA9IG51bGw7IC8v
IG51bGwgbWVhbnM6IGRvbid0IGZpbHRlciBmb3Igc3ViVHlwZXMKKwlwcml2YXRlIElKYXZhUHJv
amVjdCBqYXZhUHJvamVjdCA9IG51bGw7CisJcHJpdmF0ZSBib29sZWFuIGFsbG93TWVtYmVyVHlw
ZXMgPSB0cnVlOworCiAJLyogKG5vbi1KYXZhZG9jKQogCSAqIEFkZHMgdGhlIGdpdmVuIHJlc291
cmNlIHRvIHRoaXMgc2VhcmNoIHNjb3BlLgogCSAqLwpAQCAtNTksNiArNTksMjQgQEAKIAkJdGhp
cy5lbGVtZW50c1t0aGlzLmVsZW1lbnRDb3VudCsrXSA9IGVsZW1lbnQ7CiAJfQogCisJLyoqCisJ
ICogQ3JlYXRlcyBhIG5ldyBoaWVyYXJjaHkgc2NvcGUgZm9yIHRoZSBnaXZlbiB0eXBlLgorCSAq
IEBwYXJhbSBwcm9qZWN0ICAgICAgY29uc3RyYWluIHRoZSBzZWFyY2ggcmVzdWx0IHRvIHRoaXMg
cHJvamVjdAorCSAqIEBwYXJhbSB0eXBlICAgICAgICAgdGhlIGZvY3VzIHR5cGUgb2YgdGhlIGhp
ZXJhcmNoeQorCSAqIEBwYXJhbSBvd25lciAJICAgdGhlIG93bmVyIG9mIHdvcmtpbmcgY29waWVz
IHRoYXQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgb3JpZ2luYWwgY29tcGlsYXRpb24gdW5pdHMKKwkg
KiBAcGFyYW0gb25seVN1YnR5cGVzIGlmIHRydWUgc2VhcmNoIG9ubHkgc3VidHlwZXMgb2YgJ3R5
cGUnIChub3QgaW5jbHVkaW5nICd0eXBlJykKKwkgKiBAcGFyYW0gbm9NZW1iZXJUeXBlcyBpZiB0
cnVlIGRvIG5vdCBjb25zaWRlciBtZW1iZXIgb3IgZW5jbG9zaW5nIHR5cGVzIG9mIHR5cGVzIGlu
IHRoZSBnaXZlbiB0eXBlIGhpZWFyY2h5LgorCSAqLworCXB1YmxpYyBIaWVyYXJjaHlTY29wZShJ
SmF2YVByb2plY3QgcHJvamVjdCwgSVR5cGUgdHlwZSwgV29ya2luZ0NvcHlPd25lciBvd25lciwg
Ym9vbGVhbiBvbmx5U3VidHlwZXMsCisJCQlib29sZWFuIG5vTWVtYmVyVHlwZXMpIHRocm93cyBK
YXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzKHR5cGUsIG93bmVyKTsKKwkJdGhpcy5qYXZhUHJv
amVjdCA9IHByb2plY3Q7CisJCWlmIChvbmx5U3VidHlwZXMpIHsKKwkJCXRoaXMuc3ViVHlwZXMg
PSBuZXcgSGFzaFNldCgpOworCQl9CisJCXRoaXMuYWxsb3dNZW1iZXJUeXBlcyA9ICFub01lbWJl
clR5cGVzOworCX0KKwogCS8qIChub24tSmF2YWRvYykKIAkgKiBDcmVhdGVzIGEgbmV3IGhpZWFy
Y2h5IHNjb3BlIGZvciB0aGUgZ2l2ZW4gdHlwZS4KIAkgKi8KQEAgLTEwMCwxMCArMTE4LDE4IEBA
CiAJcHJpdmF0ZSB2b2lkIGJ1aWxkUmVzb3VyY2VWZWN0b3IoKSB7CiAJCUhhc2hNYXAgcmVzb3Vy
Y2VzID0gbmV3IEhhc2hNYXAoKTsKIAkJSGFzaE1hcCBwYXRocyA9IG5ldyBIYXNoTWFwKCk7Ci0J
CXRoaXMudHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRBbGxUeXBlcygpOwotCQlmb3IgKGludCBp
ID0gMDsgaSA8IHRoaXMudHlwZXMubGVuZ3RoOyBpKyspIHsKLQkJCUlUeXBlIHR5cGUgPSB0aGlz
LnR5cGVzW2ldOwotCQkJSVJlc291cmNlIHJlc291cmNlID0gKChKYXZhRWxlbWVudCkgdHlwZSku
cmVzb3VyY2UoKTsKKwkJSVR5cGVbXSB0eXBlcyA9IG51bGw7CisJCWlmICh0aGlzLnN1YlR5cGVz
ICE9IG51bGwpIHsKKwkJCXR5cGVzID0gdGhpcy5oaWVyYXJjaHkuZ2V0QWxsU3VidHlwZXModGhp
cy5mb2N1c1R5cGUpOworCQl9IGVsc2UgeworCQkJdHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRB
bGxUeXBlcygpOworCQl9CisJCWZvciAoaW50IGkgPSAwOyBpIDwgdHlwZXMubGVuZ3RoOyBpKysp
IHsKKwkJCUlUeXBlIHR5cGUgPSB0eXBlc1tpXTsKKwkJCWlmICh0aGlzLnN1YlR5cGVzICE9IG51
bGwpIHsKKwkJCQl0aGlzLnN1YlR5cGVzLmFkZCh0eXBlKTsKKwkJCX0KKwkJCUlSZXNvdXJjZSBy
ZXNvdXJjZSA9IHR5cGUuZ2V0UmVzb3VyY2UoKTsKIAkJCWlmIChyZXNvdXJjZSAhPSBudWxsICYm
IHJlc291cmNlcy5nZXQocmVzb3VyY2UpID09IG51bGwpIHsKIAkJCQlyZXNvdXJjZXMucHV0KHJl
c291cmNlLCByZXNvdXJjZSk7CiAJCQkJYWRkKHJlc291cmNlKTsKQEAgLTI2MSw3ICsyODcsNyBA
QAogCSAqLwogCXB1YmxpYyBib29sZWFuIGVuY2xvc2VzKElKYXZhRWxlbWVudCBlbGVtZW50KSB7
CiAJCWlmICh0aGlzLmhpZXJhcmNoeSA9PSBudWxsKSB7Ci0JCQlpZiAodGhpcy5mb2N1c1R5cGUu
ZXF1YWxzKGVsZW1lbnQuZ2V0QW5jZXN0b3IoSUphdmFFbGVtZW50LlRZUEUpKSkgeworCQkJaWYg
KHRoaXMuc3ViVHlwZXMgPT0gbnVsbCAmJiB0aGlzLmZvY3VzVHlwZS5lcXVhbHMoZWxlbWVudC5n
ZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSkpKSB7CiAJCQkJcmV0dXJuIHRydWU7CiAJCQl9
IGVsc2UgewogCQkJCWlmICh0aGlzLm5lZWRzUmVmcmVzaCkgewpAQCAtMjkxLDYgKzMxNywzNiBA
QAogCQkJdHlwZSA9ICgoSU1lbWJlcikgZWxlbWVudCkuZ2V0RGVjbGFyaW5nVHlwZSgpOwogCQl9
CiAJCWlmICh0eXBlICE9IG51bGwpIHsKKwkJCS8vIHBvdGVudGlhbGx5IGFsbG93IHRyYXZlbGxp
bmcgaW46CisJCQlpZiAoZW5jbG9zZXNUeXBlKHR5cGUsIHRoaXMuYWxsb3dNZW1iZXJUeXBlcykp
IHsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KKwkJCWlmICh0aGlzLmFsbG93TWVtYmVyVHlwZXMp
IHsKKwkJCQkvLyB0cmF2ZWwgb3V0OgorCQkJCUlUeXBlIGVuY2xvc2luZyA9IHR5cGUuZ2V0RGVj
bGFyaW5nVHlwZSgpOworCQkJCXdoaWxlIChlbmNsb3NpbmcgIT0gbnVsbCkgeworCQkJCQkvLyBk
b24ndCBhbGxvdyB0cmF2ZWxsaW5nIGluIGFnYWluOgorCQkJCQlpZiAoZW5jbG9zZXNUeXBlKGVu
Y2xvc2luZywgZmFsc2UpKSB7CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCQllbmNs
b3NpbmcgPSBlbmNsb3NpbmcuZ2V0RGVjbGFyaW5nVHlwZSgpOworCQkJCX0KKwkJCX0KKwkJfQor
CQlyZXR1cm4gZmFsc2U7CisJfQorCXByaXZhdGUgYm9vbGVhbiBlbmNsb3Nlc1R5cGUoSVR5cGUg
dHlwZSwgYm9vbGVhbiByZWN1cnNlKSB7CisJCWlmICh0aGlzLnN1YlR5cGVzICE9IG51bGwpIHsK
KwkJCS8vIHNlYXJjaGluZyBzdWJ0eXBlcworCQkJaWYgKHRoaXMuc3ViVHlwZXMuY29udGFpbnMo
dHlwZSkpIHsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0KKwkJCS8vIGJlIGZsZXhpYmxlOiBsb29r
IGF0IG9yaWdpbmFsIGVsZW1lbnQgKHNlZSBidWcgMTQxMDYgYW5kIGJlbG93KQorCQkJSVR5cGUg
b3JpZ2luYWwgPSB0eXBlLmlzQmluYXJ5KCkgPyBudWxsIDogKElUeXBlKXR5cGUuZ2V0UHJpbWFy
eUVsZW1lbnQoKTsKKwkJCWlmIChvcmlnaW5hbCAhPSB0eXBlICYmIHRoaXMuc3ViVHlwZXMuY29u
dGFpbnMob3JpZ2luYWwpKSB7CisJCQkJcmV0dXJuIHRydWU7CisJCQl9CisJCX0gZWxzZSB7CiAJ
CQlpZiAodGhpcy5oaWVyYXJjaHkuY29udGFpbnModHlwZSkpIHsKIAkJCQlyZXR1cm4gdHJ1ZTsK
IAkJCX0gZWxzZSB7CkBAIC0yOTgsMTAgKzM1NCwyNCBAQAogCQkJCUlUeXBlIG9yaWdpbmFsOwog
CQkJCWlmICghdHlwZS5pc0JpbmFyeSgpCiAJCQkJCQkmJiAob3JpZ2luYWwgPSAoSVR5cGUpdHlw
ZS5nZXRQcmltYXJ5RWxlbWVudCgpKSAhPSBudWxsKSB7Ci0JCQkJCXJldHVybiB0aGlzLmhpZXJh
cmNoeS5jb250YWlucyhvcmlnaW5hbCk7CisJCQkJCWlmICh0aGlzLmhpZXJhcmNoeS5jb250YWlu
cyhvcmlnaW5hbCkpIHsKKwkJCQkJCXJldHVybiB0cnVlOworCQkJCQl9CiAJCQkJfQogCQkJfQog
CQl9CisJCWlmIChyZWN1cnNlKSB7CisJCQl0cnkgeworCQkJCUlUeXBlW10gbWVtYmVyVHlwZXMg
PSB0eXBlLmdldFR5cGVzKCk7CisJCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBtZW1iZXJUeXBlcy5s
ZW5ndGg7IGkrKykgeworCQkJCQlpZiAoZW5jbG9zZXNUeXBlKG1lbWJlclR5cGVzW2ldLCByZWN1
cnNlKSkgeworCQkJCQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQl9IGNhdGNoIChK
YXZhTW9kZWxFeGNlcHRpb24gZSkgeworCQkJCXJldHVybiBmYWxzZTsKKwkJCX0KKwkJfQogCQly
ZXR1cm4gZmFsc2U7CiAJfQogCS8qIChub24tSmF2YWRvYykKQEAgLTMyNCw3ICszOTQsMTEgQEAK
IAkJdGhpcy5lbGVtZW50Q291bnQgPSAwOwogCQl0aGlzLm5lZWRzUmVmcmVzaCA9IGZhbHNlOwog
CQlpZiAodGhpcy5oaWVyYXJjaHkgPT0gbnVsbCkgewotCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlz
LmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOworCQkJaWYgKHRo
aXMuamF2YVByb2plY3QgIT0gbnVsbCkgeworCQkJCXRoaXMuaGllcmFyY2h5ID0gdGhpcy5mb2N1
c1R5cGUubmV3VHlwZUhpZXJhcmNoeSh0aGlzLmphdmFQcm9qZWN0LCB0aGlzLm93bmVyLCBudWxs
KTsKKwkJCX0gZWxzZSB7CisJCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdU
eXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOworCQkJfQogCQl9IGVsc2UgewogCQkJdGhp
cy5oaWVyYXJjaHkucmVmcmVzaChudWxsKTsKIAkJfQpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNl
L2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNo
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5q
YXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjYxCmRpZmYgLXUgLXIxLjYxIEJhc2ljU2VhcmNo
RW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFy
Y2gvQmFzaWNTZWFyY2hFbmdpbmUuamF2YQkyMiBKYW4gMjAwOSAxNTo1MzoxOSAtMDAwMAkxLjYx
CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2Vh
cmNoRW5naW5lLmphdmEJMjIgSmFuIDIwMDkgMjA6NDY6NDggLTAwMDAKQEAgLTEwMCw2ICsxMDAs
MTQgQEAKIAkJcmV0dXJuIGNyZWF0ZUhpZXJhcmNoeVNjb3BlKHR5cGUsIERlZmF1bHRXb3JraW5n
Q29weU93bmVyLlBSSU1BUlkpOwogCX0KIAorCisJLyoqCisJICogQHNlZSBTZWFyY2hFbmdpbmUj
Y3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0LElUeXBlLGJvb2xlYW4sYm9vbGVhbixX
b3JraW5nQ29weU93bmVyKSBmb3IgZGV0YWlsZWQgY29tbWVudC4KKwkgKi8KKwlwdWJsaWMgc3Rh
dGljIElKYXZhU2VhcmNoU2NvcGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0IHBy
b2plY3QsIElUeXBlIHR5cGUsIGJvb2xlYW4gb25seVN1YnR5cGVzLCBib29sZWFuIG5vTWVtYmVy
VHlwZXMsIFdvcmtpbmdDb3B5T3duZXIgb3duZXIpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24g
eworCQlyZXR1cm4gbmV3IEhpZXJhcmNoeVNjb3BlKHByb2plY3QsIHR5cGUsIG93bmVyLCBvbmx5
U3VidHlwZXMsIG5vTWVtYmVyVHlwZXMpOworCX0KKwkKIAkvKioKIAkgKiBAc2VlIFNlYXJjaEVu
Z2luZSNjcmVhdGVIaWVyYXJjaHlTY29wZShJVHlwZSxXb3JraW5nQ29weU93bmVyKSBmb3IgZGV0
YWlsZWQgY29tbWVudC4KIAkgKi8KSW5kZXg6IHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJu
YWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBwZXIuamF2YQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVl
c3RvcldyYXBwZXIuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xMgpkaWZmIC11IC1yMS4x
MiBUeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBlci5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlw
c2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL1R5cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFwcGVy
LmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6MDkgLTAwMDAJMS4xMgorKysgc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9UeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBl
ci5qYXZhCTIyIEphbiAyMDA5IDIwOjQ2OjQ4IC0wMDAwCkBAIC0xLDUgKzEsNSBAQAogLyoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOCBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAwOSBJQk0gQ29ycG9y
YXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBh
bmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRl
ciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEuMAogICogd2hpY2gg
YWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFibGUgYXQKQEAgLTEw
OCw3ICsxMDgsMTAgQEAKIAkJCQk6IGNyZWF0ZVR5cGVGcm9tSmFyKHBhdGgsIHNlcGFyYXRvcklu
ZGV4KTsKIAkJfQogCQlpZiAodHlwZSAhPSBudWxsKSB7Ci0JCQl0aGlzLnJlcXVlc3Rvci5hY2Nl
cHRUeXBlTmFtZU1hdGNoKG5ldyBKYXZhU2VhcmNoVHlwZU5hbWVNYXRjaCh0eXBlLCBtb2RpZmll
cnMpKTsKKwkJCS8vIGhpZXJhcmNoeSBzY29wZXMgcmVxdWlyZSBvbmUgbW9yZSBjaGVjazoKKwkJ
CWlmICghKHRoaXMuc2NvcGUgaW5zdGFuY2VvZiBIaWVyYXJjaHlTY29wZSkgfHwgdGhpcy5zY29w
ZS5lbmNsb3Nlcyh0eXBlKSkgeworCQkJCXRoaXMucmVxdWVzdG9yLmFjY2VwdFR5cGVOYW1lTWF0
Y2gobmV3IEphdmFTZWFyY2hUeXBlTmFtZU1hdGNoKHR5cGUsIG1vZGlmaWVycykpOworCQkJfQog
CQl9CiAJfSBjYXRjaCAoSmF2YU1vZGVsRXhjZXB0aW9uIGUpIHsKIAkJLy8gc2tpcApJbmRleDog
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YQo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNlLmpkdC5jb3JlL3Nl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEsdgpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMTQ3CmRpZmYgLXUgLXIxLjE0NyBTZWFyY2hFbmdpbmUuamF2YQot
LS0gc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YQky
NyBKdW4gMjAwOCAxNjowNDowOCAtMDAwMAkxLjE0NworKysgc2VhcmNoL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YQkyMiBKYW4gMjAwOSAyMDo0Njo0NyAtMDAw
MApAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQg
KGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRz
IHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAg
KiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1Ymxp
YyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBh
bmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0xNzEsNiArMTcxLDMyIEBACiAJfQogCiAJLyoqCisJICog
UmV0dXJucyBhIEphdmEgc2VhcmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0
aGUgZ2l2ZW4gdHlwZSBhbmQgdG8gYSBnaXZlbiBwcm9qZWN0LgorCSAqIFRoZSBKYXZhIGVsZW1l
bnRzIHJlc3VsdGluZyBmcm9tIGEgc2VhcmNoIHdpdGggdGhpcyBzY29wZSB3aWxsCisJICogYmUg
dHlwZXMgaW4gdGhpcyBoaWVyYXJjaHksIG9yIG1lbWJlcnMgb2YgdGhlIHR5cGVzIGluIHRoaXMg
aGllcmFyY2h5LgorCSAqIAorCSAqIEJ5IGRlZmF1bHQsIGhpZXJhcmNoeSBzY29wZXMgaW5jbHVk
ZSBhbGwgZGlyZWN0IGFuZCBpbmRpcmVjdCBzdXBlcnR5cGVzIGFuZCBzdWJ0eXBlcyBvZiB0aGUK
KwkgKiBmb2N1cyB0eXBlLiBUaGlzIG1ldGhvZCwgaG93ZXZlciwgYWxsb3dzIHRvIHJlc3RyaWN0
IHRoZSBoaWVyYXJjaHkgdG8gdHJ1ZSBzdWJ0eXBlcywKKwkgKiBuZWl0aGVyIGluY2x1ZGluZyBz
dXBlcnR5cGVzIG5vciB0aGUgZm9jdXMgdHlwZSBpdHNlbGYuCisJICogCisJICogQnkgZGVmYXVs
dCwgaGllcmFyY2h5IHNjb3BlcyBpbmNsdWRlIGFsc28gbWVtYmVyIHR5cGVzIGFuZCBlbmNsb3Np
bmcgdHlwZXMgb2YgdGhvc2UgdHlwZXMKKwkgKiB0aGF0IGFjdHVhbGx5IHNwYW4gdGhlIGhpZXJh
cmNoeS4gVGhpcyBtZXRob2QsIGhvd2V2ZXIsIGFsbG93cyB0byBpbmhpYml0IHRoaXMgYmVoYXZp
b3IsCisJICogYnkgcGFzc2luZyA8Y29kZT5mYWxzZTwvY29kZT4gdG8gdGhlIHBhcmFtZXRlciA8
Y29kZT5ub01lbWJlclR5cGVzPC9jb2RlPi4KKwkgKgorCSAqIEBwYXJhbSBwcm9qZWN0IHRoZSBw
cm9qZWN0IHRvIHdoaWNoIHRvIGNvbnN0cmFpbiB0aGUgc2VhcmNoCisJICogQHBhcmFtIHR5cGUg
dGhlIGZvY3VzIG9mIHRoZSBoaWVyYXJjaHkgc2NvcGUKKwkgKiBAcGFyYW0gb25seVN1YnR5cGVz
IGlmIHRydWUgb25seSBzdWJ0eXBlcyBvZiA8Y29kZT50eXBlPC9jb2RlPiBhcmUgY29uc2lkZXJl
ZC4KKwkgKiBAcGFyYW0gbm9NZW1iZXJUeXBlcyBpZiB0cnVlIGRvIG5vdCBjb25zaWRlciBtZW1i
ZXIgb3IgZW5jbG9zaW5nIHR5cGVzIG9mIHR5cGVzIGluIHRoZSBnaXZlbiB0eXBlIGhpZWFyY2h5
LgorCSAqIEBwYXJhbSBvd25lciB0aGUgb3duZXIgb2Ygd29ya2luZyBjb3BpZXMgdGhhdCB0YWtl
IHByZWNlZGVuY2Ugb3ZlciBvcmlnaW5hbCBjb21waWxhdGlvbiB1bml0cworCSAqIEByZXR1cm4g
YSBuZXcgaGllcmFyY2h5IHNjb3BlCisJICogQGV4Y2VwdGlvbiBKYXZhTW9kZWxFeGNlcHRpb24g
aWYgdGhlIGhpZXJhcmNoeSBjb3VsZCBub3QgYmUgY29tcHV0ZWQgb24gdGhlIGdpdmVuIHR5cGUK
KwkgKiBAc2luY2UgMy41CisJICovCisJcHVibGljIHN0YXRpYyBJSmF2YVNlYXJjaFNjb3BlIGNy
ZWF0ZUhpZXJhcmNoeVNjb3BlKElKYXZhUHJvamVjdCBwcm9qZWN0LCBJVHlwZSB0eXBlLCBib29s
ZWFuIG9ubHlTdWJ0eXBlcywgYm9vbGVhbiBub01lbWJlclR5cGVzLCBXb3JraW5nQ29weU93bmVy
IG93bmVyKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJcmV0dXJuIEJhc2ljU2VhcmNo
RW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKHByb2plY3QsIHR5cGUsIG9ubHlTdWJ0eXBlcywg
bm9NZW1iZXJUeXBlcywgb3duZXIpOworCX0KKwkKKwkvKioKIAkgKiBSZXR1cm5zIGEgSmF2YSBz
ZWFyY2ggc2NvcGUgbGltaXRlZCB0byB0aGUgaGllcmFyY2h5IG9mIHRoZSBnaXZlbiB0eXBlLgog
CSAqIFdoZW4gdGhlIGhpZXJhcmNoeSBpcyBjb21wdXRlZCwgdGhlIHR5cGVzIGRlZmluZWQgaW4g
dGhlIHdvcmtpbmcgY29waWVzIG93bmVkCiAJICogYnkgdGhlIGdpdmVuIG93bmVyIHRha2UgcHJl
Y2VkZW5jZSBvdmVyIHRoZSBvcmlnaW5hbCBjb21waWxhdGlvbiB1bml0cy4K
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>145834</attachid>
            <date>2009-08-27 14:17:00 -0400</date>
            <delta_ts>2009-10-06 06:33:04 -0400</delta_ts>
            <desc>corresponding jdt/ui patch</desc>
            <filename>bug_215139-jdt.ui.patch1.txt</filename>
            <type>text/plain</type>
            <size>1652</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQudWkKSW5k
ZXg6IGNvcmUgZXh0ZW5zaW9uL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JleHQvdXRpbC9U
eXBlSW5mb0ZpbHRlci5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LnVpL2NvcmUgZXh0ZW5zaW9uL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5h
bC9jb3JleHQvdXRpbC9UeXBlSW5mb0ZpbHRlci5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjIyCmRpZmYgLXUgLXIxLjIyIFR5cGVJbmZvRmlsdGVyLmphdmEKLS0tIGNvcmUgZXh0ZW5zaW9u
L29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JleHQvdXRpbC9UeXBlSW5mb0ZpbHRlci5qYXZh
CTExIFNlcCAyMDA4IDExOjU5OjQ1IC0wMDAwCTEuMjIKKysrIGNvcmUgZXh0ZW5zaW9uL29yZy9l
Y2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JleHQvdXRpbC9UeXBlSW5mb0ZpbHRlci5qYXZhCTUgQXVn
IDIwMDkgMDA6MDE6MzYgLTAwMDAKQEAgLTI3NSw3ICsyNzUsNyBAQAogCQlyZXR1cm4gZlBhY2th
Z2VNYXRjaGVyLm1hdGNoZXModHlwZS5nZXRUeXBlQ29udGFpbmVyTmFtZSgpKTsKIAl9CiAKLQlw
cml2YXRlIGJvb2xlYW4gbWF0Y2hlc1Njb3BlKFR5cGVOYW1lTWF0Y2ggdHlwZSkgeworCXB1Ymxp
YyBib29sZWFuIG1hdGNoZXNTY29wZShUeXBlTmFtZU1hdGNoIHR5cGUpIHsKIAkJaWYgKGZJc1dv
cmtzcGFjZVNjb3BlKQogCQkJcmV0dXJuIHRydWU7CiAJCXJldHVybiBmU2VhcmNoU2NvcGUuZW5j
bG9zZXModHlwZS5nZXRUeXBlKCkpOwpJbmRleDogdWkvb3JnL2VjbGlwc2UvamR0L2ludGVybmFs
L3VpL2RpYWxvZ3MvRmlsdGVyZWRUeXBlc1NlbGVjdGlvbkRpYWxvZy5qYXZhCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
UkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LnVpL3VpL29yZy9lY2xp
cHNlL2pkdC9pbnRlcm5hbC91aS9kaWFsb2dzL0ZpbHRlcmVkVHlwZXNTZWxlY3Rpb25EaWFsb2cu
amF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS40NwpkaWZmIC11IC1yMS40NyBGaWx0ZXJlZFR5
cGVzU2VsZWN0aW9uRGlhbG9nLmphdmEKLS0tIHVpL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC91
aS9kaWFsb2dzL0ZpbHRlcmVkVHlwZXNTZWxlY3Rpb25EaWFsb2cuamF2YQk0IE1hciAyMDA5IDE5
OjQ2OjUyIC0wMDAwCTEuNDcKKysrIHVpL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC91aS9kaWFs
b2dzL0ZpbHRlcmVkVHlwZXNTZWxlY3Rpb25EaWFsb2cuamF2YQk1IEF1ZyAyMDA5IDAwOjAxOjM4
IC0wMDAwCkBAIC0xMTg2LDYgKzExODYsOCBAQAogCQl9CiAKIAkJcHVibGljIGJvb2xlYW4gbWF0
Y2hlc0ZpbHRlckV4dGVuc2lvbihUeXBlTmFtZU1hdGNoIHR5cGUpIHsKKwkJCWlmICghZlR5cGVJ
bmZvRmlsdGVyLm1hdGNoZXNTY29wZSh0eXBlKSkKKwkJCQlyZXR1cm4gZmFsc2U7CiAJCQlyZXR1
cm4gZlR5cGVJbmZvRmlsdGVyLm1hdGNoZXNGaWx0ZXJFeHRlbnNpb24odHlwZSk7CiAJCX0KIAo=
</data>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>147723</attachid>
            <date>2009-09-21 14:31:00 -0400</date>
            <delta_ts>2009-10-06 06:33:04 -0400</delta_ts>
            <desc>once more updated patch</desc>
            <filename>bug_215139_patch8.txt</filename>
            <type>text/plain</type>
            <size>26327</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZS50
ZXN0cy5tb2RlbApJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0ph
dmFTZWFyY2hUZXN0cy5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uv
b3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xpcHNlL2pkdC9jb3Jl
L3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjE4MgpkaWZmIC11IC1yMS4xODIgSmF2YVNlYXJjaFRlc3RzLmphdmEKLS0tIHNyYy9vcmcvZWNs
aXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoVGVzdHMuamF2YQkyOCBBcHIgMjAw
OSAxNzo0NjowNiAtMDAwMAkxLjE4MgorKysgc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rlc3Rz
L21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhCTIxIFNlcCAyMDA5IDE3OjM2OjQzIC0wMDAwCkBA
IC0xMzU1LDYgKzEzNTUsNyBAQAogfQogLyoqCiAgKiBNZXRob2QgZGVjbGFyYXRpb24gaW4gaGll
cmFyY2h5IHRlc3QuCisgKiBFeHBsaWNpdGx5IHJlcXVlc3QgYmVoYXZpb3IgcHJlIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMTUxMzkKICAqLwogcHVibGlj
IHZvaWQgdGVzdE1ldGhvZERlY2xhcmF0aW9uMDQoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7IC8v
IHdhcyB0ZXN0TWV0aG9kRGVjbGFyYXRpb25JbkhpZXJhcmNoeVNjb3BlMQogCUlUeXBlIHR5cGUg
PSBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgInAiLCAiWC5qYXZhIiku
Z2V0VHlwZSgiWCIpOwpAQCAtMTM2MywxMCArMTM2NCwyOSBAQAogCQkiZm9vIiwKIAkJTUVUSE9E
LAogCQlERUNMQVJBVElPTlMsCisJCVNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShu
dWxsLCB0eXBlLCBmYWxzZSwgdHJ1ZSwgbnVsbCksCisJCXRoaXMucmVzdWx0Q29sbGVjdG9yKTsK
Kwlhc3NlcnRTZWFyY2hSZXN1bHRzKAorCQkic3JjL3AvWC5qYXZhIHZvaWQgcC5YLmZvbyhpbnQs
IFN0cmluZywgWCkgW2Zvb11cbiIgKworCQkic3JjL3AvWi5qYXZhIHZvaWQgcC5aLmZvbyhpbnQs
IFN0cmluZywgWCkgW2Zvb10iLAorCQl0aGlzLnJlc3VsdENvbGxlY3Rvcik7Cit9CisvKioKKyAq
IE1ldGhvZCBkZWNsYXJhdGlvbiBpbiBoaWVyYXJjaHkgdGVzdC4KKyAqIEFmdGVyIGh0dHBzOi8v
YnVncy5lY2xpcHNlLm9yZy9idWdzL3Nob3dfYnVnLmNnaT9pZD0yMTUxMzkgcmVzdWx0IGNvbnRh
aW5zIG1vcmUgdHlwZXMuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvbjA0
YSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsgLy8gd2FzIHRlc3RNZXRob2REZWNsYXJhdGlvbklu
SGllcmFyY2h5U2NvcGUxCisJSVR5cGUgdHlwZSA9IGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNl
YXJjaCIsICJzcmMiLCAicCIsICJYLmphdmEiKS5nZXRUeXBlKCJYIik7CisKKwlzZWFyY2goCisJ
CSJmb28iLAorCQlNRVRIT0QsCisJCURFQ0xBUkFUSU9OUywKIAkJU2VhcmNoRW5naW5lLmNyZWF0
ZUhpZXJhcmNoeVNjb3BlKHR5cGUpLAogCQl0aGlzLnJlc3VsdENvbGxlY3Rvcik7CiAJYXNzZXJ0
U2VhcmNoUmVzdWx0cygKIAkJInNyYy9wL1guamF2YSB2b2lkIHAuWC5mb28oaW50LCBTdHJpbmcs
IFgpIFtmb29dXG4iICsKKwkJInNyYy9wL1guamF2YSBTdHJpbmcgcC5YJElubmVyLmZvbygpIFtm
b29dXG4iICsKIAkJInNyYy9wL1ouamF2YSB2b2lkIHAuWi5mb28oaW50LCBTdHJpbmcsIFgpIFtm
b29dIiwKIAkJdGhpcy5yZXN1bHRDb2xsZWN0b3IpOwogfQpAQCAtMjQyMiw2ICsyNDQyLDIyNyBA
QAogCiB9CiAvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFu
Y2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLwor
cHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMDYoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cisg
ICAgCUlDb21waWxhdGlvblVuaXQgY3VCID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZh
U2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQi5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVu
aXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJh
MTAiLCAiQy5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOwor
ICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJh
cmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAg
ICAgLy8gZG9uJ3QgaW5jbHVkZSBzdXBlci1jbGFzc2VzOgorICAgICAgICBhc3NlcnRGYWxzZSgi
YTEwLkEgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5l
bmNsb3NlcyhjdUIuZ2V0VHlwZSgiQSIpKSk7CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuQiBz
aG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2Vz
KGN1Qi5nZXRUeXBlKCJCIikpKTsKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC9CLmphdmEgc2hv
dWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3Nlcyhj
dUIuZ2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7Cit9
CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50
IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGlj
IHZvaWQgdGVzdFNlYXJjaFNjb3BlMDcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlD
b21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNo
IiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0
VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5l
LmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAg
ICAgICAKKyAgICAgICAgLy8gZG9uJ3QgaW5jbHVkZSBmb2N1cyB0eXBlOgorICAgICAgICBhc3Nl
cnRGYWxzZSgiYTEwLkMgc2hvdWxkIGJlIG5vdCBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUi
LCBzY29wZS5lbmNsb3Nlcyh0eXBlKSk7CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAvQy5qYXZh
IHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNsb3Nlcyhj
dUMuZ2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygpKSk7ICAg
ICAgIAorfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhh
bmNlbWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8K
K3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTA4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24gewor
ICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2
YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25V
bml0IGN1RCA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAi
YTEwIiwgIkQuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdl
dENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOwor
ICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFy
Y2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0
eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIC8vIHJlZ3VsYXIgc3Vi
LXR5cGVzOgorICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRCBzaG91bGQgYmUgaW5jbHVkZWQgaW4g
aGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VELmdldFR5cGUoIkQiKSkpOworICAg
ICAgICBhc3NlcnRUcnVlKCJhMTAvRC5qYXZhIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJj
aHkgc2NvcGUiLCBzY29wZS5lbmNsb3NlcyhjdUQuZ2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0
RnVsbFBhdGgoKS50b1N0cmluZygpKSk7CisgICAgICAgIAorICAgICAgICBhc3NlcnRUcnVlKCJh
MTAuRSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VFLmdldFR5cGUoIkUiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRiBzaG91bGQg
YmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5
cGUoIkYiKSkpOworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZv
ciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcyku
CisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTA5KCkgdGhyb3dzIENvcmVFeGNlcHRp
b24geworICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5p
dCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGls
YXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJz
cmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUo
IkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVh
dGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAg
CisgICAgICAgIC8vIHN1Yi10eXBlIGlzIGEgbmVzdGVkIHR5cGU6CisgICAgICAgIGFzc2VydFRy
dWUoImExMC5IJEkgc2hvdWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3Bl
LmVuY2xvc2VzKGN1RS5nZXRUeXBlKCJIIikuZ2V0VHlwZSgiSSIpKSk7Cit9CisvKioKKyAqIEhp
ZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkg
ZW5jbG9zZXMoKTogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNl
YXJjaFNjb3BlMTAoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVu
aXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJh
MTAiLCAiQy5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0
Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7Cisg
ICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJj
aFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5
cGUsIHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gbWVtYmVyIG9mIGEg
c3ViLXR5cGU6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuRiRHIHNob3VsZCBub3QgYmUgaW5j
bHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYi
KS5nZXRUeXBlKCJHIikpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAo
dGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3Vi
dHlwZXMgYW5kIHRoZWlyIG1lbWJlciB0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFy
Y2hTY29wZTExKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRpb25Vbml0
IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEw
IiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENv
bXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAg
ICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hT
Y29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBl
LCB0cnVlLCBmYWxzZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICAvLyBtZW1iZXIgb2YgYSBz
dWItdHlwZToKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkYkRyBzaG91bGQgYmUgaW5jbHVkZWQg
aW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkYiKS5nZXRU
eXBlKCJHIikpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBm
b3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3VidHlwZXMp
LgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUxMigpIHRocm93cyBDb3JlRXhjZXB0
aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVu
aXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBp
bGF0aW9uVW5pdCBjdUUgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAi
c3JjIiwgImExMCIsICJFLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBl
KCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3Jl
YXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAg
IAorICAgICAgICAvLyBlbmNsb3Npbmcgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0RmFs
c2UoImExMC5IIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2Nv
cGUuZW5jbG9zZXMoY3VFLmdldFR5cGUoIkgiKSkpOworICAgICAgICBhc3NlcnRUcnVlKCJhMTAv
RS5qYXZhIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNs
b3NlcyhjdUUuZ2V0VW5kZXJseWluZ1Jlc291cmNlKCkuZ2V0RnVsbFBhdGgoKS50b1N0cmluZygp
KSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFu
Y2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICovCitwdWJs
aWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUxMygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAg
ICAgSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFT
ZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1
Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hF
bmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7
CisgICAgICAgIAorICAgICAgICBzZWFyY2goIioqIiwgVFlQRSwgREVDTEFSQVRJT05TLCBzY29w
ZSk7CisgICAgICAgIGFzc2VydFNlYXJjaFJlc3VsdHMoCisgICAgICAgIAkJInNyYy9hMTAvRC5q
YXZhIGExMC5EIFtEXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuRSBbRV1c
biIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkYgW0ZdXG4iICsgCisgICAgICAg
IAkJInNyYy9hMTAvRS5qYXZhIGExMC5IJEkgW0ldIgorICAgICAgICAJCSk7Cit9CisvKioKKyAq
IEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUx
Mzkgc2VhcmNoOiBmaW5kIG9ubHkgc3VidHlwZXMgLSBkaXNhYmxlZCkuCisgKi8KK3B1YmxpYyB2
b2lkIHRlc3RTZWFyY2hTY29wZTE0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgICAgICBJ
Q29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJj
aCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdl
dFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2lu
ZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCAvKm9ubHlTdWJUeXBlcyovZmFsc2Us
IHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgc2VhcmNoKCIqKiIsIFRZUEUsIERFQ0xB
UkFUSU9OUywgc2NvcGUpOworICAgICAgICBhc3NlcnRTZWFyY2hSZXN1bHRzKAorICAgICAgICAJ
CSJzcmMvYTEwL0IuamF2YSBhMTAuQSBbQV1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9CLmph
dmEgYTEwLkIgW0JdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvQy5qYXZhIGExMC5DIFtDXVxu
IiArIAorICAgICAgICAJCSJzcmMvYTEwL0QuamF2YSBhMTAuRCBbRF1cbiIgKyAKKyAgICAgICAg
CQkic3JjL2ExMC9FLmphdmEgYTEwLkUgW0VdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRS5q
YXZhIGExMC5GIFtGXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuSCRJIFtJ
XVxuIiArIAorICAgICAgICAJCWdldEV4dGVybmFsSkNMUGF0aFN0cmluZygpICsgIiBqYXZhLmxh
bmcuT2JqZWN0IgorICAgICAgICAJCSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0
LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9ubHkg
c3VidHlwZXMgLSBkaWZmZXJlbnQgY2FsbCBjaGFpbikuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RT
ZWFyY2hTY29wZTE1KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRp
b25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMi
LCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMi
KTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVI
aWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAJVHlwZU5h
bWVNYXRjaENvbGxlY3RvciBjb2xsZWN0b3IgPSBuZXcgVHlwZU5hbWVNYXRjaENvbGxlY3Rvcigp
IHsKKyAgICAJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKXsKKyAgICAJCQlyZXR1cm4gdG9GdWxs
eVF1YWxpZmllZE5hbWVzU3RyaW5nKCk7CisgICAgCQl9CisgICAgCX07CisgICAgCW5ldyBTZWFy
Y2hFbmdpbmUoKS5zZWFyY2hBbGxUeXBlTmFtZXMoCisgICAgCQludWxsLAorICAgIAkJbnVsbCwK
KyAgICAJCXNjb3BlLAorICAgIAkJY29sbGVjdG9yLAorICAgIAkJSUphdmFTZWFyY2hDb25zdGFu
dHMuV0FJVF9VTlRJTF9SRUFEWV9UT19TRUFSQ0gsCisgICAgCQludWxsKTsKKyAgICAJU3RyaW5n
IGV4cGVjdGVkID0gCisgICAgCQkJImExMC5EXG4iICsKKyAgICAJCQkiYTEwLkVcbiIgKworICAg
IAkJCSJhMTAuRlxuIiArCisgICAgCQkJImExMC5IJEkiOworICAgIAlhc3NlcnRUcnVlKCJXZSBz
aG91bGQgZ2V0IHNvbWUgdHlwZXMhIiwgY29sbGVjdG9yLnNpemUoKSA+IDApOworICAgIAlhc3Nl
cnRFcXVhbHMoIkZvdW5kIHR5cGVzIHNvdW5kIG5vdCB0byBiZSBjb3JyZWN0IiwgZXhwZWN0ZWQs
IGNvbGxlY3Rvci50b1N0cmluZygpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3Qu
CisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBzZWFyY2g6IGZpbmQgb25seSBz
dWJ0eXBlcyBwbHVzIG1lbWJlciAmIGVuY2xvc2luZyB0eXBlcyAtIGRpZmZlcmVudCBjYWxsIGNo
YWluKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTYoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGls
YXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAg
IElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3Bl
IHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRy
dWUsIGZhbHNlLCBudWxsKTsKKyAgICAJVHlwZU5hbWVNYXRjaENvbGxlY3RvciBjb2xsZWN0b3Ig
PSBuZXcgVHlwZU5hbWVNYXRjaENvbGxlY3RvcigpIHsKKyAgICAJCXB1YmxpYyBTdHJpbmcgdG9T
dHJpbmcoKXsKKyAgICAJCQlyZXR1cm4gdG9GdWxseVF1YWxpZmllZE5hbWVzU3RyaW5nKCk7Cisg
ICAgCQl9CisgICAgCX07CisgICAgCW5ldyBTZWFyY2hFbmdpbmUoKS5zZWFyY2hBbGxUeXBlTmFt
ZXMoCisgICAgCQludWxsLAorICAgIAkJbnVsbCwKKyAgICAJCXNjb3BlLAorICAgIAkJY29sbGVj
dG9yLAorICAgIAkJSUphdmFTZWFyY2hDb25zdGFudHMuV0FJVF9VTlRJTF9SRUFEWV9UT19TRUFS
Q0gsCisgICAgCQludWxsKTsKKyAgICAJU3RyaW5nIGV4cGVjdGVkID0gCisgICAgCQkJImExMC5E
XG4iICsKKyAgICAJCQkiYTEwLkVcbiIgKworICAgIAkJCSJhMTAuRlxuIiArCisgICAgCQkJImEx
MC5GJEdcbiIgKworICAgIAkJCSJhMTAuSFxuIiArCisgICAgCQkJImExMC5IJEkiOworICAgIAlh
c3NlcnRUcnVlKCJXZSBzaG91bGQgZ2V0IHNvbWUgdHlwZXMhIiwgY29sbGVjdG9yLnNpemUoKSA+
IDApOworICAgIAlhc3NlcnRFcXVhbHMoIkZvdW5kIHR5cGVzIHNvdW5kIG5vdCB0byBiZSBjb3Jy
ZWN0IiwgZXhwZWN0ZWQsIGNvbGxlY3Rvci50b1N0cmluZygpKTsKK30KKy8qKgorICogSGllcmFy
Y2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNs
b3NlcyhtZXRob2QpOiBmaW5kIG9ubHkgc3VidHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0
U2VhcmNoU2NvcGUxNygpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9u
VW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwg
ImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUUgPSB0aGlzLiBn
ZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJFLmphdmEiKTsK
KyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2Vh
cmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwg
dHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICAvLyBtZXRob2Qgb2Yg
YSBtZW1iZXIgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0RmFsc2UoImExMC5GJEcubSgp
IHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VFLmdldFR5cGUoIkYiKS5nZXRUeXBlKCJHIikuZ2V0TWV0aG9kKCJtIiwgbmV3IFN0cmlu
Z1swXSkpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3Ig
ZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcyhtZXRob2QpOiBmaW5kIG9ubHkgc3VidHlw
ZXMgYnV0IGFsc28gbWVtYmVyIHR5cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNj
b3BlMTgoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VD
ID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAi
Qy5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0Q29tcGls
YXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7CisgICAgICAg
IElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3Bl
IHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRy
dWUsIGZhbHNlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIC8vIG1ldGhvZCBvZiBhIG1lbWJl
ciBvZiBhIHN1Yi10eXBlOgorICAgICAgICBhc3NlcnRUcnVlKCJhMTAuRiRHLm0oKSBzaG91bGQg
YmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VFLmdldFR5
cGUoIkYiKS5nZXRUeXBlKCJHIikuZ2V0TWV0aG9kKCJtIiwgbmV3IFN0cmluZ1swXSkpKTsKK30K
Ky8qKgogICogU2ltcGxlIHR5cGUgZGVjbGFyYXRpb24gdGVzdC4KICAqLwogcHVibGljIHZvaWQg
dGVzdFR5cGVEZWNsYXJhdGlvbjAxKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geyAvLyB3YXMgdGVz
dFNpbXBsZVR5cGVEZWNsYXJhdGlvbgpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9DLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9DLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0MuamF2YQotLS0g
L2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2Vh
cmNoL3NyYy9hMTAvQy5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwz
IEBACitwYWNrYWdlIGExMDsKKworcHVibGljIGNsYXNzIEMgZXh0ZW5kcyBCIHt9CkluZGV4OiB3
b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3
b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZh
U2VhcmNoL3NyYy9hMTAvRC5qYXZhCi0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAt
MDAwMAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEJMSBKYW4gMTk3MCAw
MDowMDowMCAtMDAwMApAQCAtMCwwICsxLDMgQEAKK3BhY2thZ2UgYTEwOworCitwdWJsaWMgY2xh
c3MgRCBleHRlbmRzIEMgeyB9CkluZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0Uu
amF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0Uu
amF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRS5qYXZhCi0tLSAvZGV2
L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAorKysgd29ya3NwYWNlL0phdmFTZWFyY2gv
c3JjL2ExMC9FLmphdmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCwwICsxLDEzIEBA
CitwYWNrYWdlIGExMDsKKworcHVibGljIGNsYXNzIEUgZXh0ZW5kcyBEIHt9CisKK2NsYXNzIEYg
ZXh0ZW5kcyBDIHsKKwljbGFzcyBHIHsKKwkJdm9pZCBtKCl7fQorCX0KK30KKworY2xhc3MgSCB7
IAorCWNsYXNzIEkgZXh0ZW5kcyBFIHt9Cit9CkluZGV4OiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9z
cmMvYTEwL0IuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9z
cmMvYTEwL0IuamF2YQpkaWZmIC1OIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZh
Ci0tLSAvZGV2L251bGwJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMAorKysgd29ya3NwYWNlL0ph
dmFTZWFyY2gvc3JjL2ExMC9CLmphdmEJMSBKYW4gMTk3MCAwMDowMDowMCAtMDAwMApAQCAtMCww
ICsxLDUgQEAKK3BhY2thZ2UgYTEwOworCitjbGFzcyBBIHsgfQorCitwdWJsaWMgY2xhc3MgQiBl
eHRlbmRzIEEgeyB9CiNQIG9yZy5lY2xpcHNlLmpkdC5jb3JlCkluZGV4OiBzZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmphdmEKPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFy
Y2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL0hpZXJhcmNoeVNjb3BlLmph
dmEsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNDYKZGlmZiAtdSAtcjEuNDYgSGllcmFyY2h5U2Nv
cGUuamF2YQotLS0gc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9I
aWVyYXJjaHlTY29wZS5qYXZhCTI3IEp1biAyMDA4IDE2OjA0OjA5IC0wMDAwCTEuNDYKKysrIHNl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFyY2h5U2NvcGUu
amF2YQkyMSBTZXAgMjAwOSAxNzozNjo1MiAtMDAwMApAQCAtMSw1ICsxLDUgQEAKIC8qKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDggSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAsIDIwMDkgSUJNIENvcnBvcmF0
aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVkLiBUaGlzIHByb2dyYW0gYW5k
IHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIHYxLjAKICAqIHdoaWNoIGFj
Y29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZhaWxhYmxlIGF0CkBAIC0yMCw5
ICsyMCw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsKIGltcG9ydCBvcmcuZWNs
aXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5TdWZmaXhDb25zdGFudHM7CiBpbXBvcnQg
b3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuKjsKLWltcG9ydCBvcmcuZWNsaXBzZS5qZHQu
aW50ZXJuYWwuY29yZS5KYXJQYWNrYWdlRnJhZ21lbnRSb290OwotaW1wb3J0IG9yZy5lY2xpcHNl
LmpkdC5pbnRlcm5hbC5jb3JlLkphdmFFbGVtZW50OwotaW1wb3J0IG9yZy5lY2xpcHNlLmpkdC5p
bnRlcm5hbC5jb3JlLkphdmFNb2RlbDsKIGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwu
Y29yZS5oaWVyYXJjaHkuVHlwZUhpZXJhcmNoeTsKIAogLyoqCkBAIC0zNSw3ICszMiw2IEBACiAJ
cHJpdmF0ZSBXb3JraW5nQ29weU93bmVyIG93bmVyOwogCiAJcHJpdmF0ZSBJVHlwZUhpZXJhcmNo
eSBoaWVyYXJjaHk7Ci0JcHJpdmF0ZSBJVHlwZVtdIHR5cGVzOwogCXByaXZhdGUgSGFzaFNldCBy
ZXNvdXJjZVBhdGhzOwogCXByaXZhdGUgSVBhdGhbXSBlbmNsb3NpbmdQcm9qZWN0c0FuZEphcnM7
CiAKQEAgLTQ0LDYgKzQwLDEwIEBACiAKIAlwdWJsaWMgYm9vbGVhbiBuZWVkc1JlZnJlc2g7CiAK
Kwlwcml2YXRlIEhhc2hTZXQgc3ViVHlwZXMgPSBudWxsOyAvLyBudWxsIG1lYW5zOiBkb24ndCBm
aWx0ZXIgZm9yIHN1YlR5cGVzCisJcHJpdmF0ZSBJSmF2YVByb2plY3QgamF2YVByb2plY3QgPSBu
dWxsOworCXByaXZhdGUgYm9vbGVhbiBhbGxvd01lbWJlclR5cGVzID0gdHJ1ZTsKKwogCS8qIChu
b24tSmF2YWRvYykKIAkgKiBBZGRzIHRoZSBnaXZlbiByZXNvdXJjZSB0byB0aGlzIHNlYXJjaCBz
Y29wZS4KIAkgKi8KQEAgLTU5LDYgKzU5LDIzIEBACiAJCXRoaXMuZWxlbWVudHNbdGhpcy5lbGVt
ZW50Q291bnQrK10gPSBlbGVtZW50OwogCX0KIAorCS8qKgorCSAqIENyZWF0ZXMgYSBuZXcgaGll
cmFyY2h5IHNjb3BlIGZvciB0aGUgZ2l2ZW4gdHlwZS4KKwkgKiBAcGFyYW0gcHJvamVjdCAgICAg
IGNvbnN0cmFpbiB0aGUgc2VhcmNoIHJlc3VsdCB0byB0aGlzIHByb2plY3QKKwkgKiBAcGFyYW0g
dHlwZSAgICAgICAgIHRoZSBmb2N1cyB0eXBlIG9mIHRoZSBoaWVyYXJjaHkKKwkgKiBAcGFyYW0g
b3duZXIgCSAgIHRoZSBvd25lciBvZiB3b3JraW5nIGNvcGllcyB0aGF0IHRha2UgcHJlY2VkZW5j
ZSBvdmVyIG9yaWdpbmFsIGNvbXBpbGF0aW9uIHVuaXRzCisJICogQHBhcmFtIG9ubHlTdWJ0eXBl
cyBpZiB0cnVlIHNlYXJjaCBvbmx5IHN1YnR5cGVzIG9mICd0eXBlJyAobm90IGluY2x1ZGluZyAn
dHlwZScpCisJICogQHBhcmFtIG5vTWVtYmVyVHlwZXMgaWYgdHJ1ZSBkbyBub3QgY29uc2lkZXIg
bWVtYmVyIG9yIGVuY2xvc2luZyB0eXBlcyBvZiB0eXBlcyBpbiB0aGUgZ2l2ZW4gdHlwZSBoaWVy
YXJjaHkuCisJICovCisJcHVibGljIEhpZXJhcmNoeVNjb3BlKElKYXZhUHJvamVjdCBwcm9qZWN0
LCBJVHlwZSB0eXBlLCBXb3JraW5nQ29weU93bmVyIG93bmVyLCBib29sZWFuIG9ubHlTdWJ0eXBl
cywgYm9vbGVhbiBub01lbWJlclR5cGVzKSB0aHJvd3MgSmF2YU1vZGVsRXhjZXB0aW9uIHsKKwkJ
dGhpcyh0eXBlLCBvd25lcik7CisJCXRoaXMuamF2YVByb2plY3QgPSBwcm9qZWN0OworCQlpZiAo
b25seVN1YnR5cGVzKSB7CisJCQl0aGlzLnN1YlR5cGVzID0gbmV3IEhhc2hTZXQoKTsKKwkJfQor
CQl0aGlzLmFsbG93TWVtYmVyVHlwZXMgPSAhbm9NZW1iZXJUeXBlczsKKwl9CisKIAkvKiAobm9u
LUphdmFkb2MpCiAJICogQ3JlYXRlcyBhIG5ldyBoaWVhcmNoeSBzY29wZSBmb3IgdGhlIGdpdmVu
IHR5cGUuCiAJICovCkBAIC0xMDAsMTAgKzExNywxOSBAQAogCXByaXZhdGUgdm9pZCBidWlsZFJl
c291cmNlVmVjdG9yKCkgewogCQlIYXNoTWFwIHJlc291cmNlcyA9IG5ldyBIYXNoTWFwKCk7CiAJ
CUhhc2hNYXAgcGF0aHMgPSBuZXcgSGFzaE1hcCgpOwotCQl0aGlzLnR5cGVzID0gdGhpcy5oaWVy
YXJjaHkuZ2V0QWxsVHlwZXMoKTsKLQkJZm9yIChpbnQgaSA9IDA7IGkgPCB0aGlzLnR5cGVzLmxl
bmd0aDsgaSsrKSB7Ci0JCQlJVHlwZSB0eXBlID0gdGhpcy50eXBlc1tpXTsKLQkJCUlSZXNvdXJj
ZSByZXNvdXJjZSA9ICgoSmF2YUVsZW1lbnQpIHR5cGUpLnJlc291cmNlKCk7CisJCUlUeXBlW10g
dHlwZXMgPSBudWxsOworCQlpZiAodGhpcy5zdWJUeXBlcyAhPSBudWxsKSB7CisJCQl0eXBlcyA9
IHRoaXMuaGllcmFyY2h5LmdldEFsbFN1YnR5cGVzKHRoaXMuZm9jdXNUeXBlKTsKKwkJfSBlbHNl
IHsKKwkJCXR5cGVzID0gdGhpcy5oaWVyYXJjaHkuZ2V0QWxsVHlwZXMoKTsKKwkJfQorCQlmb3Ig
KGludCBpID0gMDsgaSA8IHR5cGVzLmxlbmd0aDsgaSsrKSB7CisJCQlJVHlwZSB0eXBlID0gdHlw
ZXNbaV07CisJCQlpZiAodGhpcy5zdWJUeXBlcyAhPSBudWxsKSB7CisJCQkJLy8gcmVtZW1iZXIg
c3VidHlwZXMgZm9yIGxhdGVyIHVzZSBpbiBlbmNsb3NlcygpCisJCQkJdGhpcy5zdWJUeXBlcy5h
ZGQodHlwZSk7CisJCQl9CisJCQlJUmVzb3VyY2UgcmVzb3VyY2UgPSAoKEphdmFFbGVtZW50KXR5
cGUpLnJlc291cmNlKCk7CiAJCQlpZiAocmVzb3VyY2UgIT0gbnVsbCAmJiByZXNvdXJjZXMuZ2V0
KHJlc291cmNlKSA9PSBudWxsKSB7CiAJCQkJcmVzb3VyY2VzLnB1dChyZXNvdXJjZSwgcmVzb3Vy
Y2UpOwogCQkJCWFkZChyZXNvdXJjZSk7CkBAIC0yNTYsMTIgKzI4MiwxOCBAQAogCQl9CiAJCXJl
dHVybiBmYWxzZTsKIAl9CisJLyoqIE9wdGlvbmFsbHkgcGVyZm9ybSBhZGRpdGlvbmFsIGNoZWNr
cyBhZnRlciBlbGVtZW50IGhhcyBhbHJlYWR5IHBhc3NlZCBtYXRjaGluZyBiYXNlZCBvbiBpbmRl
eC9kb2N1bWVudHMuICovCisJcHVibGljIGJvb2xlYW4gZW5jbG9zZXNGaW5lR3JhaW5lZChJSmF2
YUVsZW1lbnQgZWxlbWVudCkgeworCQlpZiAoKHRoaXMuc3ViVHlwZXMgPT0gbnVsbCkgJiYgdGhp
cy5hbGxvd01lbWJlclR5cGVzKSAKKwkJCXJldHVybiB0cnVlOyAvLyBubyBmaW5lIGdyYWluZWQg
Y2hlY2tpbmcgcmVxdWVzdGVkCisJCXJldHVybiBlbmNsb3NlcyhlbGVtZW50KTsKKwl9CiAJLyog
KG5vbi1KYXZhZG9jKQogCSAqIEBzZWUgSUphdmFTZWFyY2hTY29wZSNlbmNsb3NlcyhJSmF2YUVs
ZW1lbnQpCiAJICovCiAJcHVibGljIGJvb2xlYW4gZW5jbG9zZXMoSUphdmFFbGVtZW50IGVsZW1l
bnQpIHsKIAkJaWYgKHRoaXMuaGllcmFyY2h5ID09IG51bGwpIHsKLQkJCWlmICh0aGlzLmZvY3Vz
VHlwZS5lcXVhbHMoZWxlbWVudC5nZXRBbmNlc3RvcihJSmF2YUVsZW1lbnQuVFlQRSkpKSB7CisJ
CQlpZiAodGhpcy5zdWJUeXBlcyA9PSBudWxsICYmIHRoaXMuZm9jdXNUeXBlLmVxdWFscyhlbGVt
ZW50LmdldEFuY2VzdG9yKElKYXZhRWxlbWVudC5UWVBFKSkpIHsKIAkJCQlyZXR1cm4gdHJ1ZTsK
IAkJCX0gZWxzZSB7CiAJCQkJaWYgKHRoaXMubmVlZHNSZWZyZXNoKSB7CkBAIC0yOTEsNiArMzIz
LDM2IEBACiAJCQl0eXBlID0gKChJTWVtYmVyKSBlbGVtZW50KS5nZXREZWNsYXJpbmdUeXBlKCk7
CiAJCX0KIAkJaWYgKHR5cGUgIT0gbnVsbCkgeworCQkJLy8gcG90ZW50aWFsbHkgYWxsb3cgdHJh
dmVsbGluZyBpbjoKKwkJCWlmIChlbmNsb3Nlc1R5cGUodHlwZSwgdGhpcy5hbGxvd01lbWJlclR5
cGVzKSkgeworCQkJCXJldHVybiB0cnVlOworCQkJfQorCQkJaWYgKHRoaXMuYWxsb3dNZW1iZXJU
eXBlcykgeworCQkJCS8vIHRyYXZlbCBvdXQ6IHF1ZXJpZWQgdHlwZSBpcyBlbmNsb3NlZCBpbiB0
aGlzIHNjb3BlIGlmIGl0cyAoaW5kaXJlY3QpIGRlY2xhcmluZyB0eXBlIGlzOgorCQkJCUlUeXBl
IGVuY2xvc2luZyA9IHR5cGUuZ2V0RGVjbGFyaW5nVHlwZSgpOworCQkJCXdoaWxlIChlbmNsb3Np
bmcgIT0gbnVsbCkgeworCQkJCQkvLyBkb24ndCBhbGxvdyB0cmF2ZWxsaW5nIGluIGFnYWluOgor
CQkJCQlpZiAoZW5jbG9zZXNUeXBlKGVuY2xvc2luZywgZmFsc2UpKSB7CisJCQkJCQlyZXR1cm4g
dHJ1ZTsKKwkJCQkJfQorCQkJCQllbmNsb3NpbmcgPSBlbmNsb3NpbmcuZ2V0RGVjbGFyaW5nVHlw
ZSgpOworCQkJCX0KKwkJCX0KKwkJfQorCQlyZXR1cm4gZmFsc2U7CisJfQorCXByaXZhdGUgYm9v
bGVhbiBlbmNsb3Nlc1R5cGUoSVR5cGUgdHlwZSwgYm9vbGVhbiByZWN1cnNlKSB7CisJCWlmICh0
aGlzLnN1YlR5cGVzICE9IG51bGwpIHsKKwkJCS8vIHNlYXJjaGluZyBzdWJ0eXBlcworCQkJaWYg
KHRoaXMuc3ViVHlwZXMuY29udGFpbnModHlwZSkpIHsKKwkJCQlyZXR1cm4gdHJ1ZTsKKwkJCX0K
KwkJCS8vIGJlIGZsZXhpYmxlOiBsb29rIGF0IG9yaWdpbmFsIGVsZW1lbnQgKHNlZSBidWcgMTQx
MDYgYW5kIGJlbG93KQorCQkJSVR5cGUgb3JpZ2luYWwgPSB0eXBlLmlzQmluYXJ5KCkgPyBudWxs
IDogKElUeXBlKXR5cGUuZ2V0UHJpbWFyeUVsZW1lbnQoKTsKKwkJCWlmIChvcmlnaW5hbCAhPSB0
eXBlICYmIHRoaXMuc3ViVHlwZXMuY29udGFpbnMob3JpZ2luYWwpKSB7CisJCQkJcmV0dXJuIHRy
dWU7CisJCQl9CisJCX0gZWxzZSB7CiAJCQlpZiAodGhpcy5oaWVyYXJjaHkuY29udGFpbnModHlw
ZSkpIHsKIAkJCQlyZXR1cm4gdHJ1ZTsKIAkJCX0gZWxzZSB7CkBAIC0yOTgsOCArMzYwLDIzIEBA
CiAJCQkJSVR5cGUgb3JpZ2luYWw7CiAJCQkJaWYgKCF0eXBlLmlzQmluYXJ5KCkKIAkJCQkJCSYm
IChvcmlnaW5hbCA9IChJVHlwZSl0eXBlLmdldFByaW1hcnlFbGVtZW50KCkpICE9IG51bGwpIHsK
LQkJCQkJcmV0dXJuIHRoaXMuaGllcmFyY2h5LmNvbnRhaW5zKG9yaWdpbmFsKTsKKwkJCQkJaWYg
KHRoaXMuaGllcmFyY2h5LmNvbnRhaW5zKG9yaWdpbmFsKSkgeworCQkJCQkJcmV0dXJuIHRydWU7
CisJCQkJCX0KKwkJCQl9CisJCQl9CisJCX0KKwkJaWYgKHJlY3Vyc2UpIHsKKwkJCS8vIHF1ZXJp
ZWQgdHlwZSBpcyBlbmNsb3NlZCBpbiB0aGlzIHNjb3BlIGlmIG9uZSBvZiBpdHMgbWVtYmVycyBp
czoKKwkJCXRyeSB7CisJCQkJSVR5cGVbXSBtZW1iZXJUeXBlcyA9IHR5cGUuZ2V0VHlwZXMoKTsK
KwkJCQlmb3IgKGludCBpID0gMDsgaSA8IG1lbWJlclR5cGVzLmxlbmd0aDsgaSsrKSB7CisJCQkJ
CWlmIChlbmNsb3Nlc1R5cGUobWVtYmVyVHlwZXNbaV0sIHJlY3Vyc2UpKSB7CisJCQkJCQlyZXR1
cm4gdHJ1ZTsKKwkJCQkJfQogCQkJCX0KKwkJCX0gY2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBl
KSB7CisJCQkJcmV0dXJuIGZhbHNlOwogCQkJfQogCQl9CiAJCXJldHVybiBmYWxzZTsKQEAgLTMy
NCw3ICs0MDEsMTEgQEAKIAkJdGhpcy5lbGVtZW50Q291bnQgPSAwOwogCQl0aGlzLm5lZWRzUmVm
cmVzaCA9IGZhbHNlOwogCQlpZiAodGhpcy5oaWVyYXJjaHkgPT0gbnVsbCkgewotCQkJdGhpcy5o
aWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51
bGwpOworCQkJaWYgKHRoaXMuamF2YVByb2plY3QgIT0gbnVsbCkgeworCQkJCXRoaXMuaGllcmFy
Y2h5ID0gdGhpcy5mb2N1c1R5cGUubmV3VHlwZUhpZXJhcmNoeSh0aGlzLmphdmFQcm9qZWN0LCB0
aGlzLm93bmVyLCBudWxsKTsKKwkJCX0gZWxzZSB7CisJCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlz
LmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51bGwpOworCQkJfQogCQl9
IGVsc2UgewogCQkJdGhpcy5oaWVyYXJjaHkucmVmcmVzaChudWxsKTsKIAkJfQpJbmRleDogc2Vh
cmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2lu
ZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2Uu
amR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9CYXNp
Y1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjYxCmRpZmYgLXUgLXIx
LjYxIEJhc2ljU2VhcmNoRW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvQmFzaWNTZWFyY2hFbmdpbmUuamF2YQkyMiBKYW4gMjAwOSAxNTo1
MzoxOSAtMDAwMAkxLjYxCisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUv
c2VhcmNoL0Jhc2ljU2VhcmNoRW5naW5lLmphdmEJMjEgU2VwIDIwMDkgMTc6MzY6NTEgLTAwMDAK
QEAgLTEwMCw2ICsxMDAsMTQgQEAKIAkJcmV0dXJuIGNyZWF0ZUhpZXJhcmNoeVNjb3BlKHR5cGUs
IERlZmF1bHRXb3JraW5nQ29weU93bmVyLlBSSU1BUlkpOwogCX0KIAorCisJLyoqCisJICogQHNl
ZSBTZWFyY2hFbmdpbmUjY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0LElUeXBlLGJv
b2xlYW4sYm9vbGVhbixXb3JraW5nQ29weU93bmVyKSBmb3IgZGV0YWlsZWQgY29tbWVudC4KKwkg
Ki8KKwlwdWJsaWMgc3RhdGljIElKYXZhU2VhcmNoU2NvcGUgY3JlYXRlSGllcmFyY2h5U2NvcGUo
SUphdmFQcm9qZWN0IHByb2plY3QsIElUeXBlIHR5cGUsIGJvb2xlYW4gb25seVN1YnR5cGVzLCBi
b29sZWFuIG5vTWVtYmVyVHlwZXMsIFdvcmtpbmdDb3B5T3duZXIgb3duZXIpIHRocm93cyBKYXZh
TW9kZWxFeGNlcHRpb24geworCQlyZXR1cm4gbmV3IEhpZXJhcmNoeVNjb3BlKHByb2plY3QsIHR5
cGUsIG93bmVyLCBvbmx5U3VidHlwZXMsIG5vTWVtYmVyVHlwZXMpOworCX0KKwkKIAkvKioKIAkg
KiBAc2VlIFNlYXJjaEVuZ2luZSNjcmVhdGVIaWVyYXJjaHlTY29wZShJVHlwZSxXb3JraW5nQ29w
eU93bmVyKSBmb3IgZGV0YWlsZWQgY29tbWVudC4KIAkgKi8KSW5kZXg6IHNlYXJjaC9vcmcvZWNs
aXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBw
ZXIuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL29yZy5lY2xpcHNl
LmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlw
ZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBwZXIuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4x
MgpkaWZmIC11IC1yMS4xMiBUeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBlci5qYXZhCi0tLSBz
ZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL1R5cGVOYW1lTWF0Y2hS
ZXF1ZXN0b3JXcmFwcGVyLmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6MDkgLTAwMDAJMS4xMgorKysg
c2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9UeXBlTmFtZU1hdGNo
UmVxdWVzdG9yV3JhcHBlci5qYXZhCTIxIFNlcCAyMDA5IDE3OjM2OjUyIC0wMDAwCkBAIC0xLDUg
KzEsNSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAwOCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwg
MjAwOSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQu
IFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRl
IGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2Ug
djEuMAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFp
bGFibGUgYXQKQEAgLTEwOCw3ICsxMDgsMTAgQEAKIAkJCQk6IGNyZWF0ZVR5cGVGcm9tSmFyKHBh
dGgsIHNlcGFyYXRvckluZGV4KTsKIAkJfQogCQlpZiAodHlwZSAhPSBudWxsKSB7Ci0JCQl0aGlz
LnJlcXVlc3Rvci5hY2NlcHRUeXBlTmFtZU1hdGNoKG5ldyBKYXZhU2VhcmNoVHlwZU5hbWVNYXRj
aCh0eXBlLCBtb2RpZmllcnMpKTsKKwkJCS8vIGhpZXJhcmNoeSBzY29wZXMgcmVxdWlyZSBvbmUg
bW9yZSBjaGVjazoKKwkJCWlmICghKHRoaXMuc2NvcGUgaW5zdGFuY2VvZiBIaWVyYXJjaHlTY29w
ZSkgfHwgKChIaWVyYXJjaHlTY29wZSl0aGlzLnNjb3BlKS5lbmNsb3Nlc0ZpbmVHcmFpbmVkKHR5
cGUpKSB7CisJCQkJdGhpcy5yZXF1ZXN0b3IuYWNjZXB0VHlwZU5hbWVNYXRjaChuZXcgSmF2YVNl
YXJjaFR5cGVOYW1lTWF0Y2godHlwZSwgbW9kaWZpZXJzKSk7CisJCQl9CiAJCX0KIAl9IGNhdGNo
IChKYXZhTW9kZWxFeGNlcHRpb24gZSkgewogCQkvLyBza2lwCkluZGV4OiBzZWFyY2gvb3JnL2Vj
bGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZp
bGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3NlYXJjaC9TZWFyY2hFbmdpbmUuamF2YSx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS4xNDcKZGlmZiAtdSAtcjEuMTQ3IFNlYXJjaEVuZ2luZS5qYXZhCi0tLSBzZWFyY2gvb3Jn
L2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhCTI3IEp1biAyMDA4IDE2
OjA0OjA4IC0wMDAwCTEuMTQ3CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNo
L1NlYXJjaEVuZ2luZS5qYXZhCTIxIFNlcCAyMDA5IDE3OjM2OjQ4IC0wMDAwCkBAIC0xLDUgKzEs
NSBAQAogLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLSAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OCBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KKyAqIENvcHlyaWdodCAoYykgMjAwMCwgMjAw
OSBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4KICAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRo
aXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMKICAqIGFyZSBtYWRlIGF2
YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgdjEu
MAogICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFuZCBpcyBhdmFpbGFi
bGUgYXQKQEAgLTE3MSw2ICsxNzEsMzIgQEAKIAl9CiAKIAkvKioKKwkgKiBSZXR1cm5zIGEgSmF2
YSBzZWFyY2ggc2NvcGUgbGltaXRlZCB0byB0aGUgaGllcmFyY2h5IG9mIHRoZSBnaXZlbiB0eXBl
IGFuZCB0byBhIGdpdmVuIHByb2plY3QuCisJICogVGhlIEphdmEgZWxlbWVudHMgcmVzdWx0aW5n
IGZyb20gYSBzZWFyY2ggd2l0aCB0aGlzIHNjb3BlIHdpbGwgYmUgdHlwZXMgaW4gdGhpcyBoaWVy
YXJjaHksCisJICogb3IgbWVtYmVycyBvciBlbmNsb3NpbmcgdHlwZXMgb2YgdGhlIHR5cGVzIGlu
IHRoaXMgaGllcmFyY2h5LgorCSAqIAorCSAqIEJ5IGRlZmF1bHQsIGhpZXJhcmNoeSBzY29wZXMg
aW5jbHVkZSBhbGwgZGlyZWN0IGFuZCBpbmRpcmVjdCBzdXBlcnR5cGVzIGFuZCBzdWJ0eXBlcyBv
ZiB0aGUKKwkgKiBmb2N1cyB0eXBlLiBUaGlzIG1ldGhvZCwgaG93ZXZlciwgYWxsb3dzIHRvIHJl
c3RyaWN0IHRoZSBoaWVyYXJjaHkgdG8gdHJ1ZSBzdWJ0eXBlcywKKwkgKiBuZWl0aGVyIGluY2x1
ZGluZyBzdXBlcnR5cGVzIG5vciB0aGUgZm9jdXMgdHlwZSBpdHNlbGYuCisJICogCisJICogQnkg
ZGVmYXVsdCwgaGllcmFyY2h5IHNjb3BlcyBpbmNsdWRlIGFsc28gbWVtYmVyIHR5cGVzIGFuZCBl
bmNsb3NpbmcgdHlwZXMgb2YgdGhvc2UgdHlwZXMKKwkgKiB0aGF0IGFjdHVhbGx5IHNwYW4gdGhl
IGhpZXJhcmNoeS4gVGhpcyBtZXRob2QsIGhvd2V2ZXIsIGFsbG93cyB0byBpbmhpYml0IHRoaXMg
YmVoYXZpb3IsCisJICogYnkgcGFzc2luZyA8Y29kZT50cnVlPC9jb2RlPiB0byB0aGUgcGFyYW1l
dGVyIDxjb2RlPm5vTWVtYmVyVHlwZXM8L2NvZGU+LgorCSAqCisJICogQHBhcmFtIHByb2plY3Qg
dGhlIHByb2plY3QgdG8gd2hpY2ggdG8gY29uc3RyYWluIHRoZSBzZWFyY2gKKwkgKiBAcGFyYW0g
dHlwZSB0aGUgZm9jdXMgb2YgdGhlIGhpZXJhcmNoeSBzY29wZQorCSAqIEBwYXJhbSBvbmx5U3Vi
dHlwZXMgaWYgdHJ1ZSBvbmx5IHN1YnR5cGVzIG9mIDxjb2RlPnR5cGU8L2NvZGU+IGFyZSBjb25z
aWRlcmVkLgorCSAqIEBwYXJhbSBub01lbWJlclR5cGVzIGlmIHRydWUgZG8gbm90IGNvbnNpZGVy
IG1lbWJlciBvciBlbmNsb3NpbmcgdHlwZXMgb2YgdHlwZXMgaW4gdGhlIGdpdmVuIHR5cGUgaGll
YXJjaHkuCisJICogQHBhcmFtIG93bmVyIHRoZSBvd25lciBvZiB3b3JraW5nIGNvcGllcyB0aGF0
IHRha2UgcHJlY2VkZW5jZSBvdmVyIG9yaWdpbmFsIGNvbXBpbGF0aW9uIHVuaXRzCisJICogQHJl
dHVybiBhIG5ldyBoaWVyYXJjaHkgc2NvcGUKKwkgKiBAZXhjZXB0aW9uIEphdmFNb2RlbEV4Y2Vw
dGlvbiBpZiB0aGUgaGllcmFyY2h5IGNvdWxkIG5vdCBiZSBjb21wdXRlZCBvbiB0aGUgZ2l2ZW4g
dHlwZQorCSAqIEBzaW5jZSAzLjYKKwkgKi8KKwlwdWJsaWMgc3RhdGljIElKYXZhU2VhcmNoU2Nv
cGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0IHByb2plY3QsIElUeXBlIHR5cGUs
IGJvb2xlYW4gb25seVN1YnR5cGVzLCBib29sZWFuIG5vTWVtYmVyVHlwZXMsIFdvcmtpbmdDb3B5
T3duZXIgb3duZXIpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQlyZXR1cm4gQmFzaWNT
ZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUocHJvamVjdCwgdHlwZSwgb25seVN1YnR5
cGVzLCBub01lbWJlclR5cGVzLCBvd25lcik7CisJfQorCQorCS8qKgogCSAqIFJldHVybnMgYSBK
YXZhIHNlYXJjaCBzY29wZSBsaW1pdGVkIHRvIHRoZSBoaWVyYXJjaHkgb2YgdGhlIGdpdmVuIHR5
cGUuCiAJICogV2hlbiB0aGUgaGllcmFyY2h5IGlzIGNvbXB1dGVkLCB0aGUgdHlwZXMgZGVmaW5l
ZCBpbiB0aGUgd29ya2luZyBjb3BpZXMgb3duZWQKIAkgKiBieSB0aGUgZ2l2ZW4gb3duZXIgdGFr
ZSBwcmVjZWRlbmNlIG92ZXIgdGhlIG9yaWdpbmFsIGNvbXBpbGF0aW9uIHVuaXRzLgo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>148863</attachid>
            <date>2009-10-06 06:33:00 -0400</date>
            <delta_ts>2009-10-07 11:05:02 -0400</delta_ts>
            <desc>polished patch</desc>
            <filename>bug_215139_patch9.txt</filename>
            <type>text/plain</type>
            <size>28346</size>
            <attacher name="Stephan Herrmann">stephan.herrmann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMAojUCBvcmcuZWNsaXBzZS5qZHQuY29yZQpJ
bmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9IaWVyYXJj
aHlTY29wZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2Uvb3JnLmVj
bGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJj
aC9IaWVyYXJjaHlTY29wZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjQ2CmRpZmYgLXUg
LXIxLjQ2IEhpZXJhcmNoeVNjb3BlLmphdmEKLS0tIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50
ZXJuYWwvY29yZS9zZWFyY2gvSGllcmFyY2h5U2NvcGUuamF2YQkyNyBKdW4gMjAwOCAxNjowNDow
OSAtMDAwMAkxLjQ2CisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2Vh
cmNoL0hpZXJhcmNoeVNjb3BlLmphdmEJNiBPY3QgMjAwOSAxMDoyMjozNiAtMDAwMApAQCAtMSw1
ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIwMDAs
IDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2VydmVk
LiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUgbWFk
ZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNl
IHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMgYXZh
aWxhYmxlIGF0CkBAIC03LDYgKzcsNyBAQAogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAgICBJ
Qk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAgICBT
dGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMjE1MTM5CiAgKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuc2Vh
cmNoOwogCkBAIC0yMCw5ICsyMSw2IEBACiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmNvcmUuKjsK
IGltcG9ydCBvcmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29tcGlsZXIudXRpbC5TdWZmaXhDb25z
dGFudHM7CiBpbXBvcnQgb3JnLmVjbGlwc2UuamR0LmludGVybmFsLmNvcmUuKjsKLWltcG9ydCBv
cmcuZWNsaXBzZS5qZHQuaW50ZXJuYWwuY29yZS5KYXJQYWNrYWdlRnJhZ21lbnRSb290OwotaW1w
b3J0IG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFFbGVtZW50OwotaW1wb3J0IG9y
Zy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3JlLkphdmFNb2RlbDsKIGltcG9ydCBvcmcuZWNsaXBz
ZS5qZHQuaW50ZXJuYWwuY29yZS5oaWVyYXJjaHkuVHlwZUhpZXJhcmNoeTsKIAogLyoqCkBAIC0z
NSw3ICszMyw2IEBACiAJcHJpdmF0ZSBXb3JraW5nQ29weU93bmVyIG93bmVyOwogCiAJcHJpdmF0
ZSBJVHlwZUhpZXJhcmNoeSBoaWVyYXJjaHk7Ci0JcHJpdmF0ZSBJVHlwZVtdIHR5cGVzOwogCXBy
aXZhdGUgSGFzaFNldCByZXNvdXJjZVBhdGhzOwogCXByaXZhdGUgSVBhdGhbXSBlbmNsb3NpbmdQ
cm9qZWN0c0FuZEphcnM7CiAKQEAgLTQ0LDYgKzQxLDEwIEBACiAKIAlwdWJsaWMgYm9vbGVhbiBu
ZWVkc1JlZnJlc2g7CiAKKwlwcml2YXRlIEhhc2hTZXQgc3ViVHlwZXMgPSBudWxsOyAvLyBudWxs
IG1lYW5zOiBkb24ndCBmaWx0ZXIgZm9yIHN1YlR5cGVzCisJcHJpdmF0ZSBJSmF2YVByb2plY3Qg
amF2YVByb2plY3QgPSBudWxsOyAvLyBudWxsIG1lYW5zOiBkb24ndCBjb25zdHJhaW4gdGhlIHNl
YXJjaCB0byBhIHByb2plY3QKKwlwcml2YXRlIGJvb2xlYW4gYWxsb3dNZW1iZXJUeXBlcyA9IHRy
dWU7CisKIAkvKiAobm9uLUphdmFkb2MpCiAJICogQWRkcyB0aGUgZ2l2ZW4gcmVzb3VyY2UgdG8g
dGhpcyBzZWFyY2ggc2NvcGUuCiAJICovCkBAIC01OSw2ICs2MCwyNSBAQAogCQl0aGlzLmVsZW1l
bnRzW3RoaXMuZWxlbWVudENvdW50KytdID0gZWxlbWVudDsKIAl9CiAKKwkvKioKKwkgKiBDcmVh
dGVzIGEgbmV3IGhpZXJhcmNoeSBzY29wZSBmb3IgdGhlIGdpdmVuIHR5cGUuCisJICogQHBhcmFt
IHByb2plY3QgICAgICBjb25zdHJhaW4gdGhlIHNlYXJjaCByZXN1bHQgdG8gdGhpcyBwcm9qZWN0
LCAKKwkgKiAgICAgICAgICAgICAgICAgICAgIG9yIDxjb2RlPm51bGw8L2NvZGU+IGlmIHNlYXJj
aCBzaG91bGQgY29uc2lkZXIgYWxsIHR5cGVzIGluIHRoZSB3b3Jrc3BhY2UgCisJICogQHBhcmFt
IHR5cGUgICAgICAgICB0aGUgZm9jdXMgdHlwZSBvZiB0aGUgaGllcmFyY2h5CisJICogQHBhcmFt
IG93bmVyIAkgICB0aGUgb3duZXIgb2Ygd29ya2luZyBjb3BpZXMgdGhhdCB0YWtlIHByZWNlZGVu
Y2Ugb3ZlciBvcmlnaW5hbCBjb21waWxhdGlvbiB1bml0cywgCisJICogICAgICAgICAgICAgICAg
ICAgICBvciA8Y29kZT5udWxsPC9jb2RlPiBpZiB0aGUgcHJpbWFyeSB3b3JraW5nIGNvcHkgb3du
ZXIgc2hvdWxkIGJlIHVzZWQKKwkgKiBAcGFyYW0gb25seVN1YnR5cGVzIGlmIHRydWUgc2VhcmNo
IG9ubHkgc3VidHlwZXMgb2YgJ3R5cGUnIChub3QgaW5jbHVkaW5nICd0eXBlJykKKwkgKiBAcGFy
YW0gbm9NZW1iZXJUeXBlcyBpZiB0cnVlIGRvIG5vdCBjb25zaWRlciBtZW1iZXIgb3IgZW5jbG9z
aW5nIHR5cGVzIG9mIHR5cGVzIGluIHRoZSBnaXZlbiB0eXBlIGhpZXJhcmNoeS4KKwkgKi8KKwlw
dWJsaWMgSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0IHByb2plY3QsIElUeXBlIHR5cGUsIFdv
cmtpbmdDb3B5T3duZXIgb3duZXIsIGJvb2xlYW4gb25seVN1YnR5cGVzLCBib29sZWFuIG5vTWVt
YmVyVHlwZXMpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRpb24geworCQl0aGlzKHR5cGUsIG93bmVy
KTsKKwkJdGhpcy5qYXZhUHJvamVjdCA9IHByb2plY3Q7CisJCWlmIChvbmx5U3VidHlwZXMpIHsK
KwkJCXRoaXMuc3ViVHlwZXMgPSBuZXcgSGFzaFNldCgpOworCQl9CisJCXRoaXMuYWxsb3dNZW1i
ZXJUeXBlcyA9ICFub01lbWJlclR5cGVzOworCX0KKwogCS8qIChub24tSmF2YWRvYykKIAkgKiBD
cmVhdGVzIGEgbmV3IGhpZWFyY2h5IHNjb3BlIGZvciB0aGUgZ2l2ZW4gdHlwZS4KIAkgKi8KQEAg
LTEwMCwxMCArMTIwLDE5IEBACiAJcHJpdmF0ZSB2b2lkIGJ1aWxkUmVzb3VyY2VWZWN0b3IoKSB7
CiAJCUhhc2hNYXAgcmVzb3VyY2VzID0gbmV3IEhhc2hNYXAoKTsKIAkJSGFzaE1hcCBwYXRocyA9
IG5ldyBIYXNoTWFwKCk7Ci0JCXRoaXMudHlwZXMgPSB0aGlzLmhpZXJhcmNoeS5nZXRBbGxUeXBl
cygpOwotCQlmb3IgKGludCBpID0gMDsgaSA8IHRoaXMudHlwZXMubGVuZ3RoOyBpKyspIHsKLQkJ
CUlUeXBlIHR5cGUgPSB0aGlzLnR5cGVzW2ldOwotCQkJSVJlc291cmNlIHJlc291cmNlID0gKChK
YXZhRWxlbWVudCkgdHlwZSkucmVzb3VyY2UoKTsKKwkJSVR5cGVbXSB0eXBlcyA9IG51bGw7CisJ
CWlmICh0aGlzLnN1YlR5cGVzICE9IG51bGwpIHsKKwkJCXR5cGVzID0gdGhpcy5oaWVyYXJjaHku
Z2V0QWxsU3VidHlwZXModGhpcy5mb2N1c1R5cGUpOworCQl9IGVsc2UgeworCQkJdHlwZXMgPSB0
aGlzLmhpZXJhcmNoeS5nZXRBbGxUeXBlcygpOworCQl9CisJCWZvciAoaW50IGkgPSAwOyBpIDwg
dHlwZXMubGVuZ3RoOyBpKyspIHsKKwkJCUlUeXBlIHR5cGUgPSB0eXBlc1tpXTsKKwkJCWlmICh0
aGlzLnN1YlR5cGVzICE9IG51bGwpIHsKKwkJCQkvLyByZW1lbWJlciBzdWJ0eXBlcyBmb3IgbGF0
ZXIgdXNlIGluIGVuY2xvc2VzKCkKKwkJCQl0aGlzLnN1YlR5cGVzLmFkZCh0eXBlKTsKKwkJCX0K
KwkJCUlSZXNvdXJjZSByZXNvdXJjZSA9ICgoSmF2YUVsZW1lbnQpdHlwZSkucmVzb3VyY2UoKTsK
IAkJCWlmIChyZXNvdXJjZSAhPSBudWxsICYmIHJlc291cmNlcy5nZXQocmVzb3VyY2UpID09IG51
bGwpIHsKIAkJCQlyZXNvdXJjZXMucHV0KHJlc291cmNlLCByZXNvdXJjZSk7CiAJCQkJYWRkKHJl
c291cmNlKTsKQEAgLTI1NiwxMiArMjg1LDI0IEBACiAJCX0KIAkJcmV0dXJuIGZhbHNlOwogCX0K
KwkvKiogCisJICogT3B0aW9uYWxseSBwZXJmb3JtIGFkZGl0aW9uYWwgY2hlY2tzIGFmdGVyIGVs
ZW1lbnQgaGFzIGFscmVhZHkgcGFzc2VkIG1hdGNoaW5nIGJhc2VkIG9uIGluZGV4L2RvY3VtZW50
cy4KKwkgKiAKKwkgKiBAcGFyYW0gZWxlbWVudCB0aGUgZ2l2ZW4gZWxlbWVudAorCSAqIEByZXR1
cm4gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGVsZW1lbnQgaXMgZW5jbG9zZWQgb3IgaWYgbm8g
ZmluZSBncmFpbmVkIGNoZWNraW5nIAorCSAqICAgICAgICAgKHJlZ2FyZGluZyBzdWJ0eXBlcyBh
bmQgbWVtYmVycykgaXMgcmVxdWVzdGVkCisJICovCisJcHVibGljIGJvb2xlYW4gZW5jbG9zZXNG
aW5lR3JhaW5lZChJSmF2YUVsZW1lbnQgZWxlbWVudCkgeworCQlpZiAoKHRoaXMuc3ViVHlwZXMg
PT0gbnVsbCkgJiYgdGhpcy5hbGxvd01lbWJlclR5cGVzKSAKKwkJCXJldHVybiB0cnVlOyAvLyBu
byBmaW5lIGdyYWluZWQgY2hlY2tpbmcgcmVxdWVzdGVkCisJCXJldHVybiBlbmNsb3NlcyhlbGVt
ZW50KTsKKwl9CiAJLyogKG5vbi1KYXZhZG9jKQogCSAqIEBzZWUgSUphdmFTZWFyY2hTY29wZSNl
bmNsb3NlcyhJSmF2YUVsZW1lbnQpCiAJICovCiAJcHVibGljIGJvb2xlYW4gZW5jbG9zZXMoSUph
dmFFbGVtZW50IGVsZW1lbnQpIHsKIAkJaWYgKHRoaXMuaGllcmFyY2h5ID09IG51bGwpIHsKLQkJ
CWlmICh0aGlzLmZvY3VzVHlwZS5lcXVhbHMoZWxlbWVudC5nZXRBbmNlc3RvcihJSmF2YUVsZW1l
bnQuVFlQRSkpKSB7CisJCQlpZiAodGhpcy5zdWJUeXBlcyA9PSBudWxsICYmIHRoaXMuZm9jdXNU
eXBlLmVxdWFscyhlbGVtZW50LmdldEFuY2VzdG9yKElKYXZhRWxlbWVudC5UWVBFKSkpIHsKIAkJ
CQlyZXR1cm4gdHJ1ZTsKIAkJCX0gZWxzZSB7CiAJCQkJaWYgKHRoaXMubmVlZHNSZWZyZXNoKSB7
CkBAIC0yOTEsNiArMzMyLDM2IEBACiAJCQl0eXBlID0gKChJTWVtYmVyKSBlbGVtZW50KS5nZXRE
ZWNsYXJpbmdUeXBlKCk7CiAJCX0KIAkJaWYgKHR5cGUgIT0gbnVsbCkgeworCQkJLy8gcG90ZW50
aWFsbHkgYWxsb3cgdHJhdmVsbGluZyBpbjoKKwkJCWlmIChlbmNsb3Nlc1R5cGUodHlwZSwgdGhp
cy5hbGxvd01lbWJlclR5cGVzKSkgeworCQkJCXJldHVybiB0cnVlOworCQkJfQorCQkJaWYgKHRo
aXMuYWxsb3dNZW1iZXJUeXBlcykgeworCQkJCS8vIHRyYXZlbCBvdXQ6IHF1ZXJpZWQgdHlwZSBp
cyBlbmNsb3NlZCBpbiB0aGlzIHNjb3BlIGlmIGl0cyAoaW5kaXJlY3QpIGRlY2xhcmluZyB0eXBl
IGlzOgorCQkJCUlUeXBlIGVuY2xvc2luZyA9IHR5cGUuZ2V0RGVjbGFyaW5nVHlwZSgpOworCQkJ
CXdoaWxlIChlbmNsb3NpbmcgIT0gbnVsbCkgeworCQkJCQkvLyBkb24ndCBhbGxvdyB0cmF2ZWxs
aW5nIGluIGFnYWluOgorCQkJCQlpZiAoZW5jbG9zZXNUeXBlKGVuY2xvc2luZywgZmFsc2UpKSB7
CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQorCQkJCQllbmNsb3NpbmcgPSBlbmNsb3Npbmcu
Z2V0RGVjbGFyaW5nVHlwZSgpOworCQkJCX0KKwkJCX0KKwkJfQorCQlyZXR1cm4gZmFsc2U7CisJ
fQorCXByaXZhdGUgYm9vbGVhbiBlbmNsb3Nlc1R5cGUoSVR5cGUgdHlwZSwgYm9vbGVhbiByZWN1
cnNlKSB7CisJCWlmICh0aGlzLnN1YlR5cGVzICE9IG51bGwpIHsKKwkJCS8vIHNlYXJjaGluZyBz
dWJ0eXBlcworCQkJaWYgKHRoaXMuc3ViVHlwZXMuY29udGFpbnModHlwZSkpIHsKKwkJCQlyZXR1
cm4gdHJ1ZTsKKwkJCX0KKwkJCS8vIGJlIGZsZXhpYmxlOiBsb29rIGF0IG9yaWdpbmFsIGVsZW1l
bnQgKHNlZSBidWcgMTQxMDYgYW5kIGJlbG93KQorCQkJSVR5cGUgb3JpZ2luYWwgPSB0eXBlLmlz
QmluYXJ5KCkgPyBudWxsIDogKElUeXBlKXR5cGUuZ2V0UHJpbWFyeUVsZW1lbnQoKTsKKwkJCWlm
IChvcmlnaW5hbCAhPSB0eXBlICYmIHRoaXMuc3ViVHlwZXMuY29udGFpbnMob3JpZ2luYWwpKSB7
CisJCQkJcmV0dXJuIHRydWU7CisJCQl9CisJCX0gZWxzZSB7CiAJCQlpZiAodGhpcy5oaWVyYXJj
aHkuY29udGFpbnModHlwZSkpIHsKIAkJCQlyZXR1cm4gdHJ1ZTsKIAkJCX0gZWxzZSB7CkBAIC0y
OTgsOCArMzY5LDIzIEBACiAJCQkJSVR5cGUgb3JpZ2luYWw7CiAJCQkJaWYgKCF0eXBlLmlzQmlu
YXJ5KCkKIAkJCQkJCSYmIChvcmlnaW5hbCA9IChJVHlwZSl0eXBlLmdldFByaW1hcnlFbGVtZW50
KCkpICE9IG51bGwpIHsKLQkJCQkJcmV0dXJuIHRoaXMuaGllcmFyY2h5LmNvbnRhaW5zKG9yaWdp
bmFsKTsKKwkJCQkJaWYgKHRoaXMuaGllcmFyY2h5LmNvbnRhaW5zKG9yaWdpbmFsKSkgeworCQkJ
CQkJcmV0dXJuIHRydWU7CisJCQkJCX0KKwkJCQl9CisJCQl9CisJCX0KKwkJaWYgKHJlY3Vyc2Up
IHsKKwkJCS8vIHF1ZXJpZWQgdHlwZSBpcyBlbmNsb3NlZCBpbiB0aGlzIHNjb3BlIGlmIG9uZSBv
ZiBpdHMgbWVtYmVycyBpczoKKwkJCXRyeSB7CisJCQkJSVR5cGVbXSBtZW1iZXJUeXBlcyA9IHR5
cGUuZ2V0VHlwZXMoKTsKKwkJCQlmb3IgKGludCBpID0gMDsgaSA8IG1lbWJlclR5cGVzLmxlbmd0
aDsgaSsrKSB7CisJCQkJCWlmIChlbmNsb3Nlc1R5cGUobWVtYmVyVHlwZXNbaV0sIHJlY3Vyc2Up
KSB7CisJCQkJCQlyZXR1cm4gdHJ1ZTsKKwkJCQkJfQogCQkJCX0KKwkJCX0gY2F0Y2ggKEphdmFN
b2RlbEV4Y2VwdGlvbiBlKSB7CisJCQkJcmV0dXJuIGZhbHNlOwogCQkJfQogCQl9CiAJCXJldHVy
biBmYWxzZTsKQEAgLTMyNCw3ICs0MTAsMTEgQEAKIAkJdGhpcy5lbGVtZW50Q291bnQgPSAwOwog
CQl0aGlzLm5lZWRzUmVmcmVzaCA9IGZhbHNlOwogCQlpZiAodGhpcy5oaWVyYXJjaHkgPT0gbnVs
bCkgewotCQkJdGhpcy5oaWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5
KHRoaXMub3duZXIsIG51bGwpOworCQkJaWYgKHRoaXMuamF2YVByb2plY3QgIT0gbnVsbCkgewor
CQkJCXRoaXMuaGllcmFyY2h5ID0gdGhpcy5mb2N1c1R5cGUubmV3VHlwZUhpZXJhcmNoeSh0aGlz
LmphdmFQcm9qZWN0LCB0aGlzLm93bmVyLCBudWxsKTsKKwkJCX0gZWxzZSB7CisJCQkJdGhpcy5o
aWVyYXJjaHkgPSB0aGlzLmZvY3VzVHlwZS5uZXdUeXBlSGllcmFyY2h5KHRoaXMub3duZXIsIG51
bGwpOworCQkJfQogCQl9IGVsc2UgewogCQkJdGhpcy5oaWVyYXJjaHkucmVmcmVzaChudWxsKTsK
IAkJfQpJbmRleDogc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9C
YXNpY1NlYXJjaEVuZ2luZS5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlw
c2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUvc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9j
b3JlL3NlYXJjaC9CYXNpY1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmluZyByZXZpc2lvbiAx
LjYxCmRpZmYgLXUgLXIxLjYxIEJhc2ljU2VhcmNoRW5naW5lLmphdmEKLS0tIHNlYXJjaC9vcmcv
ZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvQmFzaWNTZWFyY2hFbmdpbmUuamF2YQky
MiBKYW4gMjAwOSAxNTo1MzoxOSAtMDAwMAkxLjYxCisrKyBzZWFyY2gvb3JnL2VjbGlwc2UvamR0
L2ludGVybmFsL2NvcmUvc2VhcmNoL0Jhc2ljU2VhcmNoRW5naW5lLmphdmEJNiBPY3QgMjAwOSAx
MDoyMjozNSAtMDAwMApAQCAtNyw2ICs3LDcgQEAKICAqCiAgKiBDb250cmlidXRvcnM6CiAgKiAg
ICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9uCisgKiAg
ICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDIxNTEzOQogICoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5hbC5jb3Jl
LnNlYXJjaDsKIApAQCAtMTA4LDYgKzEwOSwxMyBAQAogCX0KIAogCS8qKgorCSAqIEBzZWUgU2Vh
cmNoRW5naW5lI2NyZWF0ZUhpZXJhcmNoeVNjb3BlKElKYXZhUHJvamVjdCxJVHlwZSxib29sZWFu
LGJvb2xlYW4sV29ya2luZ0NvcHlPd25lcikgZm9yIGRldGFpbGVkIGNvbW1lbnQuCisJICovCisJ
cHVibGljIHN0YXRpYyBJSmF2YVNlYXJjaFNjb3BlIGNyZWF0ZUhpZXJhcmNoeVNjb3BlKElKYXZh
UHJvamVjdCBwcm9qZWN0LCBJVHlwZSB0eXBlLCBib29sZWFuIG9ubHlTdWJ0eXBlcywgYm9vbGVh
biBub01lbWJlclR5cGVzLCBXb3JraW5nQ29weU93bmVyIG93bmVyKSB0aHJvd3MgSmF2YU1vZGVs
RXhjZXB0aW9uIHsKKwkJcmV0dXJuIG5ldyBIaWVyYXJjaHlTY29wZShwcm9qZWN0LCB0eXBlLCBv
d25lciwgb25seVN1YnR5cGVzLCBub01lbWJlclR5cGVzKTsKKwl9CisKKwkvKioKIAkgKiBAc2Vl
IFNlYXJjaEVuZ2luZSNjcmVhdGVKYXZhU2VhcmNoU2NvcGUoSUphdmFFbGVtZW50W10pIGZvciBk
ZXRhaWxlZCBjb21tZW50LgogCSAqLwogCXB1YmxpYyBzdGF0aWMgSUphdmFTZWFyY2hTY29wZSBj
cmVhdGVKYXZhU2VhcmNoU2NvcGUoSUphdmFFbGVtZW50W10gZWxlbWVudHMpIHsKSW5kZXg6IHNl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29yZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJl
cXVlc3RvcldyYXBwZXIuamF2YQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNl
L29yZy5lY2xpcHNlLmpkdC5jb3JlL3NlYXJjaC9vcmcvZWNsaXBzZS9qZHQvaW50ZXJuYWwvY29y
ZS9zZWFyY2gvVHlwZU5hbWVNYXRjaFJlcXVlc3RvcldyYXBwZXIuamF2YSx2CnJldHJpZXZpbmcg
cmV2aXNpb24gMS4xMgpkaWZmIC11IC1yMS4xMiBUeXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBl
ci5qYXZhCi0tLSBzZWFyY2gvb3JnL2VjbGlwc2UvamR0L2ludGVybmFsL2NvcmUvc2VhcmNoL1R5
cGVOYW1lTWF0Y2hSZXF1ZXN0b3JXcmFwcGVyLmphdmEJMjcgSnVuIDIwMDggMTY6MDQ6MDkgLTAw
MDAJMS4xMgorKysgc2VhcmNoL29yZy9lY2xpcHNlL2pkdC9pbnRlcm5hbC9jb3JlL3NlYXJjaC9U
eXBlTmFtZU1hdGNoUmVxdWVzdG9yV3JhcHBlci5qYXZhCTYgT2N0IDIwMDkgMTA6MjI6MzYgLTAw
MDAKQEAgLTEsNSArMSw1IEBACiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgotICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDA4IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgorICogQ29weXJpZ2h0
IChjKSAyMDAwLCAyMDA5IElCTSBDb3Jwb3JhdGlvbiBhbmQgb3RoZXJzLgogICogQWxsIHJpZ2h0
cyByZXNlcnZlZC4gVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscwog
ICogYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJs
aWMgTGljZW5zZSB2MS4wCiAgKiB3aGljaCBhY2NvbXBhbmllcyB0aGlzIGRpc3RyaWJ1dGlvbiwg
YW5kIGlzIGF2YWlsYWJsZSBhdApAQCAtNyw2ICs3LDcgQEAKICAqCiAgKiBDb250cmlidXRvcnM6
CiAgKiAgICAgSUJNIENvcnBvcmF0aW9uIC0gaW5pdGlhbCBBUEkgYW5kIGltcGxlbWVudGF0aW9u
CisgKiAgICAgU3RlcGhhbiBIZXJybWFubiAtIENvbnRyaWJ1dGlvbiBmb3IgYnVnIDIxNTEzOQog
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKiovCiBwYWNrYWdlIG9yZy5lY2xpcHNlLmpkdC5pbnRlcm5h
bC5jb3JlLnNlYXJjaDsKIApAQCAtMTA4LDcgKzEwOSwxMCBAQAogCQkJCTogY3JlYXRlVHlwZUZy
b21KYXIocGF0aCwgc2VwYXJhdG9ySW5kZXgpOwogCQl9CiAJCWlmICh0eXBlICE9IG51bGwpIHsK
LQkJCXRoaXMucmVxdWVzdG9yLmFjY2VwdFR5cGVOYW1lTWF0Y2gobmV3IEphdmFTZWFyY2hUeXBl
TmFtZU1hdGNoKHR5cGUsIG1vZGlmaWVycykpOworCQkJLy8gaGllcmFyY2h5IHNjb3BlcyByZXF1
aXJlIG9uZSBtb3JlIGNoZWNrOgorCQkJaWYgKCEodGhpcy5zY29wZSBpbnN0YW5jZW9mIEhpZXJh
cmNoeVNjb3BlKSB8fCAoKEhpZXJhcmNoeVNjb3BlKXRoaXMuc2NvcGUpLmVuY2xvc2VzRmluZUdy
YWluZWQodHlwZSkpIHsKKwkJCQl0aGlzLnJlcXVlc3Rvci5hY2NlcHRUeXBlTmFtZU1hdGNoKG5l
dyBKYXZhU2VhcmNoVHlwZU5hbWVNYXRjaCh0eXBlLCBtb2RpZmllcnMpKTsKKwkJCX0KIAkJfQog
CX0gY2F0Y2ggKEphdmFNb2RlbEV4Y2VwdGlvbiBlKSB7CiAJCS8vIHNraXAKSW5kZXg6IHNlYXJj
aC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9vcmcuZWNsaXBzZS5qZHQuY29yZS9zZWFyY2gv
b3JnL2VjbGlwc2UvamR0L2NvcmUvc2VhcmNoL1NlYXJjaEVuZ2luZS5qYXZhLHYKcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjE0NwpkaWZmIC11IC1yMS4xNDcgU2VhcmNoRW5naW5lLmphdmEKLS0tIHNl
YXJjaC9vcmcvZWNsaXBzZS9qZHQvY29yZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEJMjcgSnVu
IDIwMDggMTY6MDQ6MDggLTAwMDAJMS4xNDcKKysrIHNlYXJjaC9vcmcvZWNsaXBzZS9qZHQvY29y
ZS9zZWFyY2gvU2VhcmNoRW5naW5lLmphdmEJNiBPY3QgMjAwOSAxMDoyMjozMiAtMDAwMApAQCAt
MSw1ICsxLDUgQEAKIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMDggSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCisgKiBDb3B5cmlnaHQgKGMpIDIw
MDAsIDIwMDkgSUJNIENvcnBvcmF0aW9uIGFuZCBvdGhlcnMuCiAgKiBBbGwgcmlnaHRzIHJlc2Vy
dmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzCiAgKiBhcmUg
bWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBFY2xpcHNlIFB1YmxpYyBMaWNl
bnNlIHYxLjAKICAqIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLCBhbmQgaXMg
YXZhaWxhYmxlIGF0CkBAIC03LDYgKzcsNyBAQAogICoKICAqIENvbnRyaWJ1dG9yczoKICAqICAg
ICBJQk0gQ29ycG9yYXRpb24gLSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24KKyAqICAg
ICBTdGVwaGFuIEhlcnJtYW5uIC0gQ29udHJpYnV0aW9uIGZvciBidWcgMjE1MTM5CiAgKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKi8KIHBhY2thZ2Ugb3JnLmVjbGlwc2UuamR0LmNvcmUuc2VhcmNoOwog
CkBAIC0xODgsNiArMTg5LDM2IEBACiAJfQogCiAJLyoqCisJICogUmV0dXJucyBhIEphdmEgc2Vh
cmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGhpZXJhcmNoeSBvZiB0aGUgZ2l2ZW4gdHlwZSBhbmQg
dG8gYSBnaXZlbiBwcm9qZWN0LgorCSAqIFRoZSBKYXZhIGVsZW1lbnRzIHJlc3VsdGluZyBmcm9t
IGEgc2VhcmNoIHdpdGggdGhpcyBzY29wZSB3aWxsIGJlIHR5cGVzIGluIHRoaXMgaGllcmFyY2h5
LAorCSAqIG9yIG1lbWJlcnMgb3IgZW5jbG9zaW5nIHR5cGVzIG9mIHRoZSB0eXBlcyBpbiB0aGlz
IGhpZXJhcmNoeS4KKwkgKiA8cD4KKwkgKiBCeSBkZWZhdWx0LCBoaWVyYXJjaHkgc2NvcGVzIGlu
Y2x1ZGUgYWxsIGRpcmVjdCBhbmQgaW5kaXJlY3Qgc3VwZXJ0eXBlcyBhbmQgc3VidHlwZXMgb2Yg
dGhlCisJICogZm9jdXMgdHlwZS4gVGhpcyBtZXRob2QsIGhvd2V2ZXIsIGFsbG93cyB0byByZXN0
cmljdCB0aGUgaGllcmFyY2h5IHRvIHRydWUgc3VidHlwZXMsCisJICogbmVpdGhlciBpbmNsdWRp
bmcgc3VwZXJ0eXBlcyBub3IgdGhlIGZvY3VzIHR5cGUgaXRzZWxmLgorCSAqIDwvcD4KKwkgKiA8
cD4KKwkgKiBCeSBkZWZhdWx0LCBoaWVyYXJjaHkgc2NvcGVzIGluY2x1ZGUgYWxzbyBtZW1iZXIg
dHlwZXMgYW5kIGVuY2xvc2luZyB0eXBlcyBvZiB0aG9zZSB0eXBlcworCSAqIHRoYXQgYWN0dWFs
bHkgc3BhbiB0aGUgaGllcmFyY2h5LiBUaGlzIG1ldGhvZCwgaG93ZXZlciwgYWxsb3dzIHRvIGlu
aGliaXQgdGhpcyBiZWhhdmlvciwKKwkgKiBieSBwYXNzaW5nIDxjb2RlPnRydWU8L2NvZGU+IHRv
IHRoZSBwYXJhbWV0ZXIgPGNvZGU+bm9NZW1iZXJUeXBlczwvY29kZT4uCisJICogPC9wPgorCSAq
IAorCSAqIEBwYXJhbSBwcm9qZWN0IHRoZSBwcm9qZWN0IHRvIHdoaWNoIHRvIGNvbnN0cmFpbiB0
aGUgc2VhcmNoLCBvciA8Y29kZT5udWxsPC9jb2RlPiBpZgorCSAqICAgICAgICBzZWFyY2ggc2hv
dWxkIGNvbnNpZGVyIGFsbCB0eXBlcyBpbiB0aGUgd29ya3NwYWNlIAorCSAqIEBwYXJhbSB0eXBl
IHRoZSBmb2N1cyBvZiB0aGUgaGllcmFyY2h5IHNjb3BlCisJICogQHBhcmFtIG9ubHlTdWJ0eXBl
cyBpZiB0cnVlIG9ubHkgc3VidHlwZXMgb2YgPGNvZGU+dHlwZTwvY29kZT4gYXJlIGNvbnNpZGVy
ZWQKKwkgKiBAcGFyYW0gbm9NZW1iZXJUeXBlcyBpZiB0cnVlIGRvIG5vdCBjb25zaWRlciBtZW1i
ZXIgb3IgZW5jbG9zaW5nIHR5cGVzIG9mIHR5cGVzIGluIHRoZSBnaXZlbiB0eXBlIGhpZWFyY2h5
CisJICogQHBhcmFtIG93bmVyIHRoZSBvd25lciBvZiB3b3JraW5nIGNvcGllcyB0aGF0IHRha2Ug
cHJlY2VkZW5jZSBvdmVyIG9yaWdpbmFsIGNvbXBpbGF0aW9uIHVuaXRzLCAKKwkgKiAgICAgICAg
b3IgPGNvZGU+bnVsbDwvY29kZT4gaWYgdGhlIHByaW1hcnkgd29ya2luZyBjb3B5IG93bmVyIHNo
b3VsZCBiZSB1c2VkCisJICogQHJldHVybiBhIG5ldyBoaWVyYXJjaHkgc2NvcGUKKwkgKiBAZXhj
ZXB0aW9uIEphdmFNb2RlbEV4Y2VwdGlvbiBpZiB0aGUgaGllcmFyY2h5IGNvdWxkIG5vdCBiZSBj
b21wdXRlZCBvbiB0aGUgZ2l2ZW4gdHlwZQorCSAqIEBzaW5jZSAzLjYKKwkgKi8KKwlwdWJsaWMg
c3RhdGljIElKYXZhU2VhcmNoU2NvcGUgY3JlYXRlSGllcmFyY2h5U2NvcGUoSUphdmFQcm9qZWN0
IHByb2plY3QsIElUeXBlIHR5cGUsIGJvb2xlYW4gb25seVN1YnR5cGVzLCBib29sZWFuIG5vTWVt
YmVyVHlwZXMsIFdvcmtpbmdDb3B5T3duZXIgb3duZXIpIHRocm93cyBKYXZhTW9kZWxFeGNlcHRp
b24geworCQlyZXR1cm4gQmFzaWNTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUocHJv
amVjdCwgdHlwZSwgb25seVN1YnR5cGVzLCBub01lbWJlclR5cGVzLCBvd25lcik7CisJfQorCisJ
LyoqCiAJICogUmV0dXJucyBhIEphdmEgc2VhcmNoIHNjb3BlIGxpbWl0ZWQgdG8gdGhlIGdpdmVu
IHJlc291cmNlcy4KIAkgKiBUaGUgSmF2YSBlbGVtZW50cyByZXN1bHRpbmcgZnJvbSBhIHNlYXJj
aCB3aXRoIHRoaXMgc2NvcGUgd2lsbAogCSAqIGhhdmUgdGhlaXIgdW5kZXJseWluZyByZXNvdXJj
ZSBpbmNsdWRlZCBpbiBvciBlcXVhbHMgdG8gb25lIG9mIHRoZSBnaXZlbgojUCBvcmcuZWNsaXBz
ZS5qZHQuY29yZS50ZXN0cy5tb2RlbApJbmRleDogc3JjL29yZy9lY2xpcHNlL2pkdC9jb3JlL3Rl
c3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNy
b290L2VjbGlwc2Uvb3JnLmVjbGlwc2UuamR0LmNvcmUudGVzdHMubW9kZWwvc3JjL29yZy9lY2xp
cHNlL2pkdC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhLHYKcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjE4MgpkaWZmIC11IC1yMS4xODIgSmF2YVNlYXJjaFRlc3RzLmphdmEKLS0t
IHNyYy9vcmcvZWNsaXBzZS9qZHQvY29yZS90ZXN0cy9tb2RlbC9KYXZhU2VhcmNoVGVzdHMuamF2
YQkyOCBBcHIgMjAwOSAxNzo0NjowNiAtMDAwMAkxLjE4MgorKysgc3JjL29yZy9lY2xpcHNlL2pk
dC9jb3JlL3Rlc3RzL21vZGVsL0phdmFTZWFyY2hUZXN0cy5qYXZhCTYgT2N0IDIwMDkgMTA6MjI6
NDYgLTAwMDAKQEAgLTcsNiArNyw3IEBACiAgKgogICogQ29udHJpYnV0b3JzOgogICogICAgIElC
TSBDb3Jwb3JhdGlvbiAtIGluaXRpYWwgQVBJIGFuZCBpbXBsZW1lbnRhdGlvbgorICogICAgIFN0
ZXBoYW4gSGVycm1hbm4gLSBDb250cmlidXRpb24gZm9yIGJ1ZyAyMTUxMzkKICAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqLwogcGFja2FnZSBvcmcuZWNsaXBzZS5qZHQuY29yZS50ZXN0cy5tb2RlbDsK
IApAQCAtMTM1NSw2ICsxMzU2LDcgQEAKIH0KIC8qKgogICogTWV0aG9kIGRlY2xhcmF0aW9uIGlu
IGhpZXJhcmNoeSB0ZXN0LgorICogRXhwbGljaXRseSByZXF1ZXN0IGJlaGF2aW9yIHByZSBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjE1MTM5CiAgKi8KIHB1
YmxpYyB2b2lkIHRlc3RNZXRob2REZWNsYXJhdGlvbjA0KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eyAvLyB3YXMgdGVzdE1ldGhvZERlY2xhcmF0aW9uSW5IaWVyYXJjaHlTY29wZTEKIAlJVHlwZSB0
eXBlID0gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJwIiwgIlguamF2
YSIpLmdldFR5cGUoIlgiKTsKQEAgLTEzNjMsMTAgKzEzNjUsMjkgQEAKIAkJImZvbyIsCiAJCU1F
VEhPRCwKIAkJREVDTEFSQVRJT05TLAorCQlTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2Nv
cGUobnVsbCwgdHlwZSwgZmFsc2UsIHRydWUsIG51bGwpLAorCQl0aGlzLnJlc3VsdENvbGxlY3Rv
cik7CisJYXNzZXJ0U2VhcmNoUmVzdWx0cygKKwkJInNyYy9wL1guamF2YSB2b2lkIHAuWC5mb28o
aW50LCBTdHJpbmcsIFgpIFtmb29dXG4iICsKKwkJInNyYy9wL1ouamF2YSB2b2lkIHAuWi5mb28o
aW50LCBTdHJpbmcsIFgpIFtmb29dIiwKKwkJdGhpcy5yZXN1bHRDb2xsZWN0b3IpOworfQorLyoq
CisgKiBNZXRob2QgZGVjbGFyYXRpb24gaW4gaGllcmFyY2h5IHRlc3QuCisgKiBBZnRlciBodHRw
czovL2J1Z3MuZWNsaXBzZS5vcmcvYnVncy9zaG93X2J1Zy5jZ2k/aWQ9MjE1MTM5IHJlc3VsdCBj
b250YWlucyBtb3JlIHR5cGVzLgorICovCitwdWJsaWMgdm9pZCB0ZXN0TWV0aG9kRGVjbGFyYXRp
b24wNGEoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7IC8vIHdhcyB0ZXN0TWV0aG9kRGVjbGFyYXRp
b25JbkhpZXJhcmNoeVNjb3BlMQorCUlUeXBlIHR5cGUgPSBnZXRDb21waWxhdGlvblVuaXQoIkph
dmFTZWFyY2giLCAic3JjIiwgInAiLCAiWC5qYXZhIikuZ2V0VHlwZSgiWCIpOworCisJc2VhcmNo
KAorCQkiZm9vIiwKKwkJTUVUSE9ELAorCQlERUNMQVJBVElPTlMsCiAJCVNlYXJjaEVuZ2luZS5j
cmVhdGVIaWVyYXJjaHlTY29wZSh0eXBlKSwKIAkJdGhpcy5yZXN1bHRDb2xsZWN0b3IpOwogCWFz
c2VydFNlYXJjaFJlc3VsdHMoCiAJCSJzcmMvcC9YLmphdmEgdm9pZCBwLlguZm9vKGludCwgU3Ry
aW5nLCBYKSBbZm9vXVxuIiArCisJCSJzcmMvcC9YLmphdmEgU3RyaW5nIHAuWCRJbm5lci5mb28o
KSBbZm9vXVxuIiArCiAJCSJzcmMvcC9aLmphdmEgdm9pZCBwLlouZm9vKGludCwgU3RyaW5nLCBY
KSBbZm9vXSIsCiAJCXRoaXMucmVzdWx0Q29sbGVjdG9yKTsKIH0KQEAgLTI0MjIsNiArMjQ0Mywy
MjcgQEAKIAogfQogLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBl
bmhhbmNlbWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisg
Ki8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTA2KCkgdGhyb3dzIENvcmVFeGNlcHRpb24g
eworICAgIAlJQ29tcGlsYXRpb25Vbml0IGN1QiA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgi
SmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkIuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRp
b25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMi
LCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMi
KTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVI
aWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisg
ICAgICAgIC8vIGRvbid0IGluY2x1ZGUgc3VwZXItY2xhc3NlczoKKyAgICAgICAgYXNzZXJ0RmFs
c2UoImExMC5BIHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2Nv
cGUuZW5jbG9zZXMoY3VCLmdldFR5cGUoIkEiKSkpOworICAgICAgICBhc3NlcnRGYWxzZSgiYTEw
LkIgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBzY29wZS5lbmNs
b3NlcyhjdUIuZ2V0VHlwZSgiQiIpKSk7CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAvQi5qYXZh
IHNob3VsZCBub3QgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VCLmdldFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1bGxQYXRoKCkudG9TdHJpbmcoKSkp
OworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNl
bWVudCBidWcgMjE1MTM5IGVuY2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8KK3B1
YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTA3KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAg
IAlJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNl
YXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJVHlwZSB0eXBlID0gY3VD
LmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVu
Z2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsK
KyAgICAgICAgCisgICAgICAgIC8vIGRvbid0IGluY2x1ZGUgZm9jdXMgdHlwZToKKyAgICAgICAg
YXNzZXJ0RmFsc2UoImExMC5DIHNob3VsZCBiZSBub3QgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNj
b3BlIiwgc2NvcGUuZW5jbG9zZXModHlwZSkpOworICAgICAgICBhc3NlcnRGYWxzZSgiYTEwL0Mu
amF2YSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9z
ZXMoY3VDLmdldFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1bGxQYXRoKCkudG9TdHJpbmcoKSkp
OyAgICAgICAKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVzdCBmb3Ig
ZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3VidHlwZXMpLgor
ICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUwOCgpIHRocm93cyBDb3JlRXhjZXB0aW9u
IHsKKyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQo
IkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0
aW9uVW5pdCBjdUQgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3Jj
IiwgImExMCIsICJELmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUUgPSB0aGlz
LiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJFLmphdmEi
KTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZh
U2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVs
bCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICAvLyByZWd1bGFy
IHN1Yi10eXBlczoKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkQgc2hvdWxkIGJlIGluY2x1ZGVk
IGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RC5nZXRUeXBlKCJEIikpKTsK
KyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwL0QuamF2YSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGll
cmFyY2h5IHNjb3BlIiwgc2NvcGUuZW5jbG9zZXMoY3VELmdldFVuZGVybHlpbmdSZXNvdXJjZSgp
LmdldEZ1bGxQYXRoKCkudG9TdHJpbmcoKSkpOworICAgICAgICAKKyAgICAgICAgYXNzZXJ0VHJ1
ZSgiYTEwLkUgc2hvdWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVu
Y2xvc2VzKGN1RS5nZXRUeXBlKCJFIikpKTsKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkYgc2hv
dWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5n
ZXRUeXBlKCJGIikpKTsKK30KKy8qKgorICogSGllcmFyY2h5IHNjb3BlIHRlc3QuCisgKiAodGVz
dCBmb3IgZW5oYW5jZW1lbnQgYnVnIDIxNTEzOSBlbmNsb3NlcygpOiBmaW5kIG9ubHkgc3VidHlw
ZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUwOSgpIHRocm93cyBDb3JlRXhj
ZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlv
blVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNv
bXBpbGF0aW9uVW5pdCBjdUUgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2gi
LCAic3JjIiwgImExMCIsICJFLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRU
eXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUu
Y3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAg
ICAgIAorICAgICAgICAvLyBzdWItdHlwZSBpcyBhIG5lc3RlZCB0eXBlOgorICAgICAgICBhc3Nl
cnRUcnVlKCJhMTAuSCRJIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBoaWVyYXJjaHkgc2NvcGUiLCBz
Y29wZS5lbmNsb3NlcyhjdUUuZ2V0VHlwZSgiSCIpLmdldFR5cGUoIkkiKSkpOworfQorLyoqCisg
KiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1
MTM5IGVuY2xvc2VzKCk6IGZpbmQgb25seSBzdWJ0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRl
c3RTZWFyY2hTY29wZTEwKCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRp
b25Vbml0IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMi
LCAiYTEwIiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMu
IGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIp
OworICAgICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFT
ZWFyY2hTY29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxs
LCB0eXBlLCB0cnVlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIC8vIG1lbWJlciBv
ZiBhIHN1Yi10eXBlOgorICAgICAgICBhc3NlcnRGYWxzZSgiYTEwLkYkRyBzaG91bGQgbm90IGJl
IGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBl
KCJGIikuZ2V0VHlwZSgiRyIpKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0Lgor
ICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTogZmluZCBvbmx5
IHN1YnR5cGVzIGFuZCB0aGVpciBtZW1iZXIgdHlwZXMpLgorICovCitwdWJsaWMgdm9pZCB0ZXN0
U2VhcmNoU2NvcGUxMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAJSUNvbXBpbGF0aW9u
VW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwg
ImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSUNvbXBpbGF0aW9uVW5pdCBjdUUgPSB0aGlzLiBn
ZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAic3JjIiwgImExMCIsICJFLmphdmEiKTsK
KyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2Vh
cmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwg
dHlwZSwgdHJ1ZSwgZmFsc2UsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gbWVtYmVyIG9m
IGEgc3ViLXR5cGU6CisgICAgICAgIGFzc2VydFRydWUoImExMC5GJEcgc2hvdWxkIGJlIGluY2x1
ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBlKCJGIiku
Z2V0VHlwZSgiRyIpKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRl
c3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMoKTogZmluZCBvbmx5IHN1YnR5
cGVzKS4KKyAqLworcHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTIoKSB0aHJvd3MgQ29yZUV4
Y2VwdGlvbiB7CisgICAgCUlDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRp
b25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElD
b21waWxhdGlvblVuaXQgY3VFID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNo
IiwgInNyYyIsICJhMTAiLCAiRS5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0
VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5l
LmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAg
ICAgICAKKyAgICAgICAgLy8gZW5jbG9zaW5nIG9mIGEgc3ViLXR5cGU6CisgICAgICAgIGFzc2Vy
dEZhbHNlKCJhMTAuSCBzaG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIs
IHNjb3BlLmVuY2xvc2VzKGN1RS5nZXRUeXBlKCJIIikpKTsKKyAgICAgICAgYXNzZXJ0VHJ1ZSgi
YTEwL0UuamF2YSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gaGllcmFyY2h5IHNjb3BlIiwgc2NvcGUu
ZW5jbG9zZXMoY3VFLmdldFVuZGVybHlpbmdSZXNvdXJjZSgpLmdldEZ1bGxQYXRoKCkudG9TdHJp
bmcoKSkpOworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBl
bmhhbmNlbWVudCBidWcgMjE1MTM5IHNlYXJjaDogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLwor
cHVibGljIHZvaWQgdGVzdFNlYXJjaFNjb3BlMTMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7Cisg
ICAgICAgIElDb21waWxhdGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJK
YXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElUeXBlIHR5cGUg
PSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2YVNlYXJjaFNjb3BlIHNjb3BlID0gU2Vh
cmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51bGwsIHR5cGUsIHRydWUsIHRydWUsIG51
bGwpOworICAgICAgICAKKyAgICAgICAgc2VhcmNoKCIqKiIsIFRZUEUsIERFQ0xBUkFUSU9OUywg
c2NvcGUpOworICAgICAgICBhc3NlcnRTZWFyY2hSZXN1bHRzKAorICAgICAgICAJCSJzcmMvYTEw
L0QuamF2YSBhMTAuRCBbRF1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkUg
W0VdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAvRS5qYXZhIGExMC5GIFtGXVxuIiArIAorICAg
ICAgICAJCSJzcmMvYTEwL0UuamF2YSBhMTAuSCRJIFtJXSIKKyAgICAgICAgCQkpOworfQorLyoq
CisgKiBIaWVyYXJjaHkgc2NvcGUgdGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcg
MjE1MTM5IHNlYXJjaDogZmluZCBvbmx5IHN1YnR5cGVzIC0gZGlzYWJsZWQpLgorICovCitwdWJs
aWMgdm9pZCB0ZXN0U2VhcmNoU2NvcGUxNCgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAg
ICAgSUNvbXBpbGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFT
ZWFyY2giLCAic3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1
Qy5nZXRUeXBlKCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hF
bmdpbmUuY3JlYXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgLypvbmx5U3ViVHlwZXMqL2Zh
bHNlLCB0cnVlLCBudWxsKTsKKyAgICAgICAgCisgICAgICAgIHNlYXJjaCgiKioiLCBUWVBFLCBE
RUNMQVJBVElPTlMsIHNjb3BlKTsKKyAgICAgICAgYXNzZXJ0U2VhcmNoUmVzdWx0cygKKyAgICAg
ICAgCQkic3JjL2ExMC9CLmphdmEgYTEwLkEgW0FdXG4iICsgCisgICAgICAgIAkJInNyYy9hMTAv
Qi5qYXZhIGExMC5CIFtCXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEwL0MuamF2YSBhMTAuQyBb
Q11cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9ELmphdmEgYTEwLkQgW0RdXG4iICsgCisgICAg
ICAgIAkJInNyYy9hMTAvRS5qYXZhIGExMC5FIFtFXVxuIiArIAorICAgICAgICAJCSJzcmMvYTEw
L0UuamF2YSBhMTAuRiBbRl1cbiIgKyAKKyAgICAgICAgCQkic3JjL2ExMC9FLmphdmEgYTEwLkgk
SSBbSV1cbiIgKyAKKyAgICAgICAgCQlnZXRFeHRlcm5hbEpDTFBhdGhTdHJpbmcoKSArICIgamF2
YS5sYW5nLk9iamVjdCIKKyAgICAgICAgCQkpOworfQorLyoqCisgKiBIaWVyYXJjaHkgc2NvcGUg
dGVzdC4KKyAqICh0ZXN0IGZvciBlbmhhbmNlbWVudCBidWcgMjE1MTM5IHNlYXJjaDogZmluZCBv
bmx5IHN1YnR5cGVzIC0gZGlmZmVyZW50IGNhbGwgY2hhaW4pLgorICovCitwdWJsaWMgdm9pZCB0
ZXN0U2VhcmNoU2NvcGUxNSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsKKyAgICAgICAgSUNvbXBp
bGF0aW9uVW5pdCBjdUMgPSB0aGlzLiBnZXRDb21waWxhdGlvblVuaXQoIkphdmFTZWFyY2giLCAi
c3JjIiwgImExMCIsICJDLmphdmEiKTsKKyAgICAgICAgSVR5cGUgdHlwZSA9IGN1Qy5nZXRUeXBl
KCJDIik7CisgICAgICAgIElKYXZhU2VhcmNoU2NvcGUgc2NvcGUgPSBTZWFyY2hFbmdpbmUuY3Jl
YXRlSGllcmFyY2h5U2NvcGUobnVsbCwgdHlwZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7CisgICAgCVR5
cGVOYW1lTWF0Y2hDb2xsZWN0b3IgY29sbGVjdG9yID0gbmV3IFR5cGVOYW1lTWF0Y2hDb2xsZWN0
b3IoKSB7CisgICAgCQlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCl7CisgICAgCQkJcmV0dXJuIHRv
RnVsbHlRdWFsaWZpZWROYW1lc1N0cmluZygpOworICAgIAkJfQorICAgIAl9OworICAgIAluZXcg
U2VhcmNoRW5naW5lKCkuc2VhcmNoQWxsVHlwZU5hbWVzKAorICAgIAkJbnVsbCwKKyAgICAJCW51
bGwsCisgICAgCQlzY29wZSwKKyAgICAJCWNvbGxlY3RvciwKKyAgICAJCUlKYXZhU2VhcmNoQ29u
c3RhbnRzLldBSVRfVU5USUxfUkVBRFlfVE9fU0VBUkNILAorICAgIAkJbnVsbCk7CisgICAgCVN0
cmluZyBleHBlY3RlZCA9IAorICAgIAkJCSJhMTAuRFxuIiArCisgICAgCQkJImExMC5FXG4iICsK
KyAgICAJCQkiYTEwLkZcbiIgKworICAgIAkJCSJhMTAuSCRJIjsKKyAgICAJYXNzZXJ0VHJ1ZSgi
V2Ugc2hvdWxkIGdldCBzb21lIHR5cGVzISIsIGNvbGxlY3Rvci5zaXplKCkgPiAwKTsKKyAgICAJ
YXNzZXJ0RXF1YWxzKCJGb3VuZCB0eXBlcyBzb3VuZCBub3QgdG8gYmUgY29ycmVjdCIsIGV4cGVj
dGVkLCBjb2xsZWN0b3IudG9TdHJpbmcoKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0
ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgc2VhcmNoOiBmaW5kIG9u
bHkgc3VidHlwZXMgcGx1cyBtZW1iZXIgJiBlbmNsb3NpbmcgdHlwZXMgLSBkaWZmZXJlbnQgY2Fs
bCBjaGFpbikuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFyY2hTY29wZTE2KCkgdGhyb3dzIENv
cmVFeGNlcHRpb24geworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1QyA9IHRoaXMuIGdldENv
bXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkMuamF2YSIpOworICAg
ICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hT
Y29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBl
LCB0cnVlLCBmYWxzZSwgbnVsbCk7CisgICAgCVR5cGVOYW1lTWF0Y2hDb2xsZWN0b3IgY29sbGVj
dG9yID0gbmV3IFR5cGVOYW1lTWF0Y2hDb2xsZWN0b3IoKSB7CisgICAgCQlwdWJsaWMgU3RyaW5n
IHRvU3RyaW5nKCl7CisgICAgCQkJcmV0dXJuIHRvRnVsbHlRdWFsaWZpZWROYW1lc1N0cmluZygp
OworICAgIAkJfQorICAgIAl9OworICAgIAluZXcgU2VhcmNoRW5naW5lKCkuc2VhcmNoQWxsVHlw
ZU5hbWVzKAorICAgIAkJbnVsbCwKKyAgICAJCW51bGwsCisgICAgCQlzY29wZSwKKyAgICAJCWNv
bGxlY3RvciwKKyAgICAJCUlKYXZhU2VhcmNoQ29uc3RhbnRzLldBSVRfVU5USUxfUkVBRFlfVE9f
U0VBUkNILAorICAgIAkJbnVsbCk7CisgICAgCVN0cmluZyBleHBlY3RlZCA9IAorICAgIAkJCSJh
MTAuRFxuIiArCisgICAgCQkJImExMC5FXG4iICsKKyAgICAJCQkiYTEwLkZcbiIgKworICAgIAkJ
CSJhMTAuRiRHXG4iICsKKyAgICAJCQkiYTEwLkhcbiIgKworICAgIAkJCSJhMTAuSCRJIjsKKyAg
ICAJYXNzZXJ0VHJ1ZSgiV2Ugc2hvdWxkIGdldCBzb21lIHR5cGVzISIsIGNvbGxlY3Rvci5zaXpl
KCkgPiAwKTsKKyAgICAJYXNzZXJ0RXF1YWxzKCJGb3VuZCB0eXBlcyBzb3VuZCBub3QgdG8gYmUg
Y29ycmVjdCIsIGV4cGVjdGVkLCBjb2xsZWN0b3IudG9TdHJpbmcoKSk7Cit9CisvKioKKyAqIEhp
ZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3QgZm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkg
ZW5jbG9zZXMobWV0aG9kKTogZmluZCBvbmx5IHN1YnR5cGVzKS4KKyAqLworcHVibGljIHZvaWQg
dGVzdFNlYXJjaFNjb3BlMTcoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7CisgICAgCUlDb21waWxh
dGlvblVuaXQgY3VDID0gdGhpcy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNy
YyIsICJhMTAiLCAiQy5qYXZhIik7CisgICAgICAgIElDb21waWxhdGlvblVuaXQgY3VFID0gdGhp
cy4gZ2V0Q29tcGlsYXRpb25Vbml0KCJKYXZhU2VhcmNoIiwgInNyYyIsICJhMTAiLCAiRS5qYXZh
Iik7CisgICAgICAgIElUeXBlIHR5cGUgPSBjdUMuZ2V0VHlwZSgiQyIpOworICAgICAgICBJSmF2
YVNlYXJjaFNjb3BlIHNjb3BlID0gU2VhcmNoRW5naW5lLmNyZWF0ZUhpZXJhcmNoeVNjb3BlKG51
bGwsIHR5cGUsIHRydWUsIHRydWUsIG51bGwpOworICAgICAgICAKKyAgICAgICAgLy8gbWV0aG9k
IG9mIGEgbWVtYmVyIG9mIGEgc3ViLXR5cGU6CisgICAgICAgIGFzc2VydEZhbHNlKCJhMTAuRiRH
Lm0oKSBzaG91bGQgbm90IGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVu
Y2xvc2VzKGN1RS5nZXRUeXBlKCJGIikuZ2V0VHlwZSgiRyIpLmdldE1ldGhvZCgibSIsIG5ldyBT
dHJpbmdbMF0pKSk7Cit9CisvKioKKyAqIEhpZXJhcmNoeSBzY29wZSB0ZXN0LgorICogKHRlc3Qg
Zm9yIGVuaGFuY2VtZW50IGJ1ZyAyMTUxMzkgZW5jbG9zZXMobWV0aG9kKTogZmluZCBvbmx5IHN1
YnR5cGVzIGJ1dCBhbHNvIG1lbWJlciB0eXBlcykuCisgKi8KK3B1YmxpYyB2b2lkIHRlc3RTZWFy
Y2hTY29wZTE4KCkgdGhyb3dzIENvcmVFeGNlcHRpb24geworICAgIAlJQ29tcGlsYXRpb25Vbml0
IGN1QyA9IHRoaXMuIGdldENvbXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEw
IiwgIkMuamF2YSIpOworICAgICAgICBJQ29tcGlsYXRpb25Vbml0IGN1RSA9IHRoaXMuIGdldENv
bXBpbGF0aW9uVW5pdCgiSmF2YVNlYXJjaCIsICJzcmMiLCAiYTEwIiwgIkUuamF2YSIpOworICAg
ICAgICBJVHlwZSB0eXBlID0gY3VDLmdldFR5cGUoIkMiKTsKKyAgICAgICAgSUphdmFTZWFyY2hT
Y29wZSBzY29wZSA9IFNlYXJjaEVuZ2luZS5jcmVhdGVIaWVyYXJjaHlTY29wZShudWxsLCB0eXBl
LCB0cnVlLCBmYWxzZSwgbnVsbCk7CisgICAgICAgIAorICAgICAgICAvLyBtZXRob2Qgb2YgYSBt
ZW1iZXIgb2YgYSBzdWItdHlwZToKKyAgICAgICAgYXNzZXJ0VHJ1ZSgiYTEwLkYkRy5tKCkgc2hv
dWxkIGJlIGluY2x1ZGVkIGluIGhpZXJhcmNoeSBzY29wZSIsIHNjb3BlLmVuY2xvc2VzKGN1RS5n
ZXRUeXBlKCJGIikuZ2V0VHlwZSgiRyIpLmdldE1ldGhvZCgibSIsIG5ldyBTdHJpbmdbMF0pKSk7
Cit9CisvKioKICAqIFNpbXBsZSB0eXBlIGRlY2xhcmF0aW9uIHRlc3QuCiAgKi8KIHB1YmxpYyB2
b2lkIHRlc3RUeXBlRGVjbGFyYXRpb24wMSgpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsgLy8gd2Fz
IHRlc3RTaW1wbGVUeXBlRGVjbGFyYXRpb24KSW5kZXg6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3Ny
Yy9hMTAvQy5qYXZhCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IHdvcmtzcGFjZS9KYXZhU2VhcmNoL3Ny
Yy9hMTAvQy5qYXZhCmRpZmYgLU4gd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9DLmphdmEK
LS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCisrKyB3b3Jrc3BhY2UvSmF2
YVNlYXJjaC9zcmMvYTEwL0MuamF2YQkxIEphbiAxOTcwIDAwOjAwOjAwIC0wMDAwCkBAIC0wLDAg
KzEsMyBAQAorcGFja2FnZSBhMTA7CisKK3B1YmxpYyBjbGFzcyBDIGV4dGVuZHMgQiB7fQpJbmRl
eDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmls
ZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2ExMC9ELmphdmEKZGlmZiAtTiB3b3Jrc3BhY2Uv
SmF2YVNlYXJjaC9zcmMvYTEwL0QuamF2YQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6
MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2VhcmNoL3NyYy9hMTAvRC5qYXZhCTEgSmFuIDE5
NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwzIEBACitwYWNrYWdlIGExMDsKKworcHVibGlj
IGNsYXNzIEQgZXh0ZW5kcyBDIHsgfQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9FLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFyY2gvc3JjL2Ex
MC9FLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0UuamF2YQotLS0g
L2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFjZS9KYXZhU2Vh
cmNoL3NyYy9hMTAvRS5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAgLTAsMCArMSwx
MyBAQAorcGFja2FnZSBhMTA7CisKK3B1YmxpYyBjbGFzcyBFIGV4dGVuZHMgRCB7fQorCitjbGFz
cyBGIGV4dGVuZHMgQyB7CisJY2xhc3MgRyB7CisJCXZvaWQgbSgpe30KKwl9Cit9CisKK2NsYXNz
IEggeyAKKwljbGFzcyBJIGV4dGVuZHMgRSB7fQorfQpJbmRleDogd29ya3NwYWNlL0phdmFTZWFy
Y2gvc3JjL2ExMC9CLmphdmEKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogd29ya3NwYWNlL0phdmFTZWFy
Y2gvc3JjL2ExMC9CLmphdmEKZGlmZiAtTiB3b3Jrc3BhY2UvSmF2YVNlYXJjaC9zcmMvYTEwL0Iu
amF2YQotLS0gL2Rldi9udWxsCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKKysrIHdvcmtzcGFj
ZS9KYXZhU2VhcmNoL3NyYy9hMTAvQi5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAKQEAg
LTAsMCArMSw1IEBACitwYWNrYWdlIGExMDsKKworY2xhc3MgQSB7IH0KKworcHVibGljIGNsYXNz
IEIgZXh0ZW5kcyBBIHsgfQo=
</data>
<flag name="iplog"
          id="23136"
          type_id="7"
          status="+"
          setter="frederic_fusier"
    />
    <flag name="review"
          id="23137"
          type_id="6"
          status="+"
          setter="frederic_fusier"
    />
          </attachment>
      

    </bug>

</bugzilla>