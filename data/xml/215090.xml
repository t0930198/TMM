<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.1"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>215090</bug_id>
          
          <creation_ts>2008-01-11 16:36:00 -0500</creation_ts>
          <short_desc>[api tooling] should not allow @noextend tag on interface method</short_desc>
          <delta_ts>2008-01-29 11:08:00 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>PDE</product>
          <component>Incubators</component>
          <version>3.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.4 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Darin Wright">darin.eclipse</reporter>
          <assigned_to name="Michael Rennie">Michael_Rennie</assigned_to>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1129966</commentid>
    <comment_count>0</comment_count>
    <who name="Darin Wright">darin.eclipse</who>
    <bug_when>2008-01-11 16:36:14 -0500</bug_when>
    <thetext>Currently, with the fix to allow @noreference on an interface method, we now incorrectly allow @noextend on interface methods. Since classes implement interfaces, they have to be able to extend/override interface methods.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1134257</commentid>
    <comment_count>1</comment_count>
    <who name="Darin Wright">darin.eclipse</who>
    <bug_when>2008-01-18 17:20:06 -0500</bug_when>
    <thetext>Fixed - although it was more involved than I thought it would be.

I modified the api javadoc tag extension point to allow a tag to be contributed to a specific kind of member - i.e. a class, or interface, or method within a class or within an interface, etc.. We needed to be specific on the types of locations where a tag can be placed, as a @noextend tag is not applicable to all methods - just methods in classes.

This modified API on retrieving tags. Clients now need to specify the location of tags as a (type, member) pair. It also allowed me to remove the IElementDescriptor.T_INTERFACE constant - the only place this was used was in inheriting restrictions in the API description (but restrictions are not inherited - only visibility).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1134258</commentid>
    <comment_count>2</comment_count>
    <who name="Darin Wright">darin.eclipse</who>
    <bug_when>2008-01-18 17:20:44 -0500</bug_when>
    <thetext>Please verify, Mike.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1144430</commentid>
    <comment_count>3</comment_count>
    <who name="Michael Rennie">Michael_Rennie</who>
    <bug_when>2008-01-29 11:08:00 -0500</bug_when>
    <thetext>verified</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>