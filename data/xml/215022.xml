<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.1"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>215022</bug_id>
          
          <creation_ts>2008-01-11 09:34:00 -0500</creation_ts>
          <short_desc>[api tooling] removes source bundles from API profile</short_desc>
          <delta_ts>2008-01-30 11:30:32 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Eclipse</classification>
          <product>PDE</product>
          <component>Incubators</component>
          <version>3.4</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>3.4 M5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Darin Wright">darin.eclipse</reporter>
          <assigned_to name="Olivier Thomann">Olivier_Thomann</assigned_to>
          <cc>Olivier_Thomann</cc>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1129622</commentid>
    <comment_count>0</comment_count>
    <who name="Darin Wright">darin.eclipse</who>
    <bug_when>2008-01-11 09:34:22 -0500</bug_when>
    <thetext>When we populate a profile with bundles, we are picking up source bundles. They shouldn&apos;t really be part of the API profile.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1144546</commentid>
    <comment_count>1</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2008-01-29 12:58:29 -0500</bug_when>
    <thetext>Source bundles have two formats:
1) old style that is using an extension point for org.eclipse.pde.core.source inside the plugin.xml
2) new style that has a Eclipse-SourceBundle: entry in the manifest.

If one of these is true, it should be discarded from the Api profile.
I&apos;ll see what I can do.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1144991</commentid>
    <comment_count>2</comment_count>
      <attachid>88237</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2008-01-29 22:22:23 -0500</bug_when>
    <thetext>Created attachment 88237
First draft

Darin,

This is not using the registry. It is using a lightweight sax parser.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1145397</commentid>
    <comment_count>3</comment_count>
      <attachid>88299</attachid>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2008-01-30 11:30:14 -0500</bug_when>
    <thetext>Created attachment 88299
Proposed fix

It handles fragments and plugins with old and new source bundle format.

Darin, please verify.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1145398</commentid>
    <comment_count>4</comment_count>
    <who name="Olivier Thomann">Olivier_Thomann</who>
    <bug_when>2008-01-30 11:30:32 -0500</bug_when>
    <thetext>Released for 3.4M5.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>88237</attachid>
            <date>2008-01-29 22:22:00 -0500</date>
            <delta_ts>2008-01-30 11:30:14 -0500</delta_ts>
            <desc>First draft</desc>
            <filename>patch_215022.txt</filename>
            <type>text/plain</type>
            <size>10939</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UucGRlLmFwaS50
b29scw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL1N5c3Rl
bUxpYnJhcnlBcGlDb21wb25lbnQuamF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290
L2VjbGlwc2UvcGRlLWluY3ViYXRvci9hcGktdG9vbGluZy9wbHVnaW5zL29yZy5lY2xpcHNlLnBk
ZS5hcGkudG9vbHMvc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvU3lzdGVt
TGlicmFyeUFwaUNvbXBvbmVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS40DQpkaWZm
IC11IC1yMS40IFN5c3RlbUxpYnJhcnlBcGlDb21wb25lbnQuamF2YQ0KLS0tIHNyYy9vcmcvZWNs
aXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL1N5c3RlbUxpYnJhcnlBcGlDb21wb25lbnQuamF2
YQkyNCBKYW4gMjAwOCAxNzo0MToxNSAtMDAwMAkxLjQNCisrKyBzcmMvb3JnL2VjbGlwc2UvcGRl
L2FwaS90b29scy9pbnRlcm5hbC9TeXN0ZW1MaWJyYXJ5QXBpQ29tcG9uZW50LmphdmEJMzAgSmFu
IDIwMDggMDM6MjE6MTMgLTAwMDANCkBAIC0xODAsNCArMTgwLDExIEBADQogCXB1YmxpYyB2b2lk
IGV4cG9ydChNYXAgb3B0aW9ucywgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7DQogCQlhYm9ydCgiU3lzdGVtIGxpYnJhcnkgZG9lcyBub3Qgc3VwcG9ydCBl
eHBvcnQuIiwgbnVsbCk7IC8vJE5PTi1OTFMtMSQNCiAJfQ0KKwkNCisJLyogKG5vbi1KYXZhZG9j
KQ0KKwkgKiBAc2VlIElBcGlDb21wb25lbnQjaXNTb3VyY2VDb21wb25lbnQoKQ0KKwkgKi8NCisJ
cHVibGljIGJvb2xlYW4gaXNTb3VyY2VDb21wb25lbnQoKSB7DQorCQlyZXR1cm4gZmFsc2U7DQor
CX0NCiB9DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQnVu
ZGxlQXBpQ29tcG9uZW50LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL3BkZS1pbmN1YmF0b3IvYXBpLXRvb2xpbmcvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYXBp
LnRvb2xzL3NyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL0J1bmRsZUFwaUNv
bXBvbmVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNA0KZGlmZiAtdSAtcjEuMTQg
QnVuZGxlQXBpQ29tcG9uZW50LmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29s
cy9pbnRlcm5hbC9CdW5kbGVBcGlDb21wb25lbnQuamF2YQkyOSBKYW4gMjAwOCAyMDoxMDozNiAt
MDAwMAkxLjE0DQorKysgc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQnVu
ZGxlQXBpQ29tcG9uZW50LmphdmEJMzAgSmFuIDIwMDggMDM6MjE6MTMgLTAwMDANCkBAIC0xMSw2
ICsxMSw3IEBADQogcGFja2FnZSBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLmludGVybmFsOw0K
IA0KIGltcG9ydCBqYXZhLmlvLkJ1ZmZlcmVkT3V0cHV0U3RyZWFtOw0KK2ltcG9ydCBqYXZhLmlv
LkJ1ZmZlcmVkUmVhZGVyOw0KIGltcG9ydCBqYXZhLmlvLkJ5dGVBcnJheU91dHB1dFN0cmVhbTsN
CiBpbXBvcnQgamF2YS5pby5GaWxlOw0KIGltcG9ydCBqYXZhLmlvLkZpbGVJbnB1dFN0cmVhbTsN
CkBAIC0xOCw2ICsxOSw3IEBADQogaW1wb3J0IGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbTsNCiBp
bXBvcnQgamF2YS5pby5JT0V4Y2VwdGlvbjsNCiBpbXBvcnQgamF2YS5pby5JbnB1dFN0cmVhbTsN
CitpbXBvcnQgamF2YS5pby5TdHJpbmdSZWFkZXI7DQogaW1wb3J0IGphdmEubmV0Lk1hbGZvcm1l
ZFVSTEV4Y2VwdGlvbjsNCiBpbXBvcnQgamF2YS5uZXQuVVJMOw0KIGltcG9ydCBqYXZhLm5ldC5V
UkxDb25uZWN0aW9uOw0KQEAgLTM0LDYgKzM2LDEwIEBADQogaW1wb3J0IGphdmEudXRpbC56aXAu
WmlwRmlsZTsNCiBpbXBvcnQgamF2YS51dGlsLnppcC5aaXBPdXRwdXRTdHJlYW07DQogDQoraW1w
b3J0IGphdmF4LnhtbC5wYXJzZXJzLlBhcnNlckNvbmZpZ3VyYXRpb25FeGNlcHRpb247DQoraW1w
b3J0IGphdmF4LnhtbC5wYXJzZXJzLlNBWFBhcnNlcjsNCitpbXBvcnQgamF2YXgueG1sLnBhcnNl
cnMuU0FYUGFyc2VyRmFjdG9yeTsNCisNCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1l
LkNvcmVFeGNlcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JUHJvZ3Jl
c3NNb25pdG9yOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuUGF0aDsNCkBAIC01
OCw2ICs2NCwxMSBAQA0KIGltcG9ydCBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLnNjYW5uZXIu
QXBpRGVzY3JpcHRpb25Qcm9jZXNzb3I7DQogaW1wb3J0IG9yZy5vc2dpLmZyYW1ld29yay5CdW5k
bGVFeGNlcHRpb247DQogaW1wb3J0IG9yZy5vc2dpLmZyYW1ld29yay5Db25zdGFudHM7DQoraW1w
b3J0IG9yZy54bWwuc2F4LkF0dHJpYnV0ZXM7DQoraW1wb3J0IG9yZy54bWwuc2F4LklucHV0U291
cmNlOw0KK2ltcG9ydCBvcmcueG1sLnNheC5TQVhFeGNlcHRpb247DQoraW1wb3J0IG9yZy54bWwu
c2F4LlNBWFBhcnNlRXhjZXB0aW9uOw0KK2ltcG9ydCBvcmcueG1sLnNheC5oZWxwZXJzLkRlZmF1
bHRIYW5kbGVyOw0KIA0KIC8qKg0KICAqIEltcGxlbWVudGF0aW9uIG9mIGFuIEFQSSBjb21wb25l
bnQgYmFzZWQgb24gYSBidW5kbGUgaW4gdGhlIGZpbGUgc3lzdGVtLg0KQEAgLTY2LDYgKzc3LDI2
IEBADQogICovDQogcHVibGljIGNsYXNzIEJ1bmRsZUFwaUNvbXBvbmVudCBleHRlbmRzIEFic3Ry
YWN0QXBpQ29tcG9uZW50IHsNCiAJDQorCXB1YmxpYyBzdGF0aWMgY2xhc3MgU291cmNlRGVmYXVs
dEhhbmRsZXIgZXh0ZW5kcyBEZWZhdWx0SGFuZGxlciB7DQorCQlwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgT1JHX0VDTElQU0VfUERFX0NPUkVfU09VUkNFX0VYVEVOU0lPTl9QT0lOVF9OQU1F
ID0gIm9yZy5lY2xpcHNlLnBkZS5jb3JlLnNvdXJjZSI7IC8vJE5PTi1OTFMtMSQNCisJCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBFWFRFTlNJT05fTkFNRSA9ICJleHRlbnNpb24iOyAvLyRO
T04tTkxTLTEkDQorCQlib29sZWFuIGlzU291cmNlID0gZmFsc2U7DQorCQlwdWJsaWMgdm9pZCBl
cnJvcihTQVhQYXJzZUV4Y2VwdGlvbiBlKSB0aHJvd3MgU0FYRXhjZXB0aW9uIHsNCisJCQllLnBy
aW50U3RhY2tUcmFjZSgpOw0KKwkJfQ0KKwkJcHVibGljIHZvaWQgc3RhcnRFbGVtZW50KFN0cmlu
ZyB1cmksIFN0cmluZyBsb2NhbE5hbWUsIFN0cmluZyBuYW1lLCBBdHRyaWJ1dGVzIGF0dHJpYnV0
ZXMpDQorCQkJCXRocm93cyBTQVhFeGNlcHRpb24gew0KKwkJCWlmICh0aGlzLmlzU291cmNlKSBy
ZXR1cm47DQorCQkJdGhpcy5pc1NvdXJjZSA9IEVYVEVOU0lPTl9OQU1FLmVxdWFscyhuYW1lKQ0K
KwkJCQkJJiYgYXR0cmlidXRlcy5nZXRMZW5ndGgoKSA9PSAxDQorCQkJCQkmJiBPUkdfRUNMSVBT
RV9QREVfQ09SRV9TT1VSQ0VfRVhURU5TSU9OX1BPSU5UX05BTUUuZXF1YWxzKGF0dHJpYnV0ZXMu
Z2V0VmFsdWUoMCkpOw0KKwkJfQ0KKwl9DQorDQorCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBQTFVHSU5fWE1MX05BTUUgPSAicGx1Z2luLnhtbCI7IC8vJE5PTi1OTFMtMSQNCisNCisJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVDTElQU0VfU09VUkNFX0JVTkRMRSA9ICJFY2xpcHNl
LVNvdXJjZUJ1bmRsZSI7IC8vJE5PTi1OTFMtMSQNCisNCiAJLyoqDQogCSAqIERpY3Rpb25hcnkg
cGFyc2VkIGZyb20gTUFOSUZFU1QuTUYNCiAJICovDQpAQCAtNDEyLDYgKzQ0MywxMSBAQA0KIAkJ
fSBjYXRjaCAoQnVuZGxlRXhjZXB0aW9uIGUpIHsNCiAJCX0gZmluYWxseSB7DQogCQkJdHJ5IHsN
CisJCQkJbWFuaWZlc3RTdHJlYW0uY2xvc2UoKTsNCisJCQl9IGNhdGNoKElPRXhjZXB0aW9uIGUy
KSB7DQorCQkJCS8vIGlnbm9yZQ0KKwkJCX0NCisJCQl0cnkgew0KIAkJCQlpZiAoamFyRmlsZSAh
PSBudWxsKQ0KIAkJCQkJamFyRmlsZS5jbG9zZSgpOw0KIAkJCX0gY2F0Y2ggKElPRXhjZXB0aW9u
IGUyKSB7DQpAQCAtNDUwLDYgKzQ4NiwxMSBAQA0KIAkJCXJldHVybiBuZXcgTWFuaWZlc3QobWFu
aWZlc3RTdHJlYW0pOw0KIAkJfSBmaW5hbGx5IHsNCiAJCQl0cnkgew0KKwkJCQltYW5pZmVzdFN0
cmVhbS5jbG9zZSgpOw0KKwkJCX0gY2F0Y2goSU9FeGNlcHRpb24gZTIpIHsNCisJCQkJLy8gaWdu
b3JlDQorCQkJfQ0KKwkJCXRyeSB7DQogCQkJCWlmIChqYXJGaWxlICE9IG51bGwpIHsNCiAJCQkJ
CWphckZpbGUuY2xvc2UoKTsNCiAJCQkJfQ0KQEAgLTQ1Nyw4ICs0OTgsNTMgQEANCiAJCQkJLy8g
aWdub3JlDQogCQkJfQ0KIAkJfQ0KLQl9CQ0KLQkNCisJfQ0KKw0KKwkvKioNCisJICogUmVhZHMg
YW5kIHJldHVybnMgdGhpcyBidW5kbGUncyBwbHVnaW4ueG1sIGNvbnRlbnRzLg0KKwkgKiBUaGUg
YnVuZGxlIG1heSBiZSBpbiBhIGphciBvciBpbiBhIGRpcmVjdG9yeSBhdCB0aGUgc3BlY2lmaWVk
IGxvY2F0aW9uLg0KKwkgKiANCisJICogQHBhcmFtIGJ1bmRsZUxvY2F0aW9uIHRoZSByb290IGxv
Y2F0aW9uIG9mIHRoZSBidW5kbGUNCisJICogQHJldHVybiBtYW5pZmVzdCBvciA8Y29kZT5udWxs
PC9jb2RlPiBpZiBub3QgcHJlc2VudA0KKwkgKiBAdGhyb3dzIElPRXhjZXB0aW9uIGlmIHVuYWJs
ZSB0byBwYXJzZQ0KKwkgKi8NCisJcHJvdGVjdGVkIFN0cmluZyByZWFkUGx1Z2luWE1MQ29udGVu
dHMoRmlsZSBidW5kbGVMb2NhdGlvbikgdGhyb3dzIElPRXhjZXB0aW9uIHsNCisJCVppcEZpbGUg
amFyRmlsZSA9IG51bGw7DQorCQlJbnB1dFN0cmVhbSBzdHJlYW0gPSBudWxsOw0KKwkJU3RyaW5n
IGV4dGVuc2lvbiA9IG5ldyBQYXRoKGJ1bmRsZUxvY2F0aW9uLmdldE5hbWUoKSkuZ2V0RmlsZUV4
dGVuc2lvbigpOw0KKwkJaWYgKGV4dGVuc2lvbiAhPSBudWxsICYmIGV4dGVuc2lvbi5lcXVhbHMo
ImphciIpICYmIGJ1bmRsZUxvY2F0aW9uLmlzRmlsZSgpKSB7IC8vJE5PTi1OTFMtMSQNCisJCQlq
YXJGaWxlID0gbmV3IFppcEZpbGUoYnVuZGxlTG9jYXRpb24sIFppcEZpbGUuT1BFTl9SRUFEKTsN
CisJCQlaaXBFbnRyeSBtYW5pZmVzdEVudHJ5ID0gamFyRmlsZS5nZXRFbnRyeShQTFVHSU5fWE1M
X05BTUUpOw0KKwkJCWlmIChtYW5pZmVzdEVudHJ5ICE9IG51bGwpIHsNCisJCQkJc3RyZWFtID0g
amFyRmlsZS5nZXRJbnB1dFN0cmVhbShtYW5pZmVzdEVudHJ5KTsNCisJCQl9DQorCQl9IGVsc2Ug
ew0KKwkJCUZpbGUgZmlsZSA9IG5ldyBGaWxlKGJ1bmRsZUxvY2F0aW9uLCBQTFVHSU5fWE1MX05B
TUUpOw0KKwkJCWlmIChmaWxlLmV4aXN0cygpKSB7DQorCQkJCXN0cmVhbSA9IG5ldyBGaWxlSW5w
dXRTdHJlYW0oZmlsZSk7DQorCQkJfQ0KKwkJfQ0KKwkJaWYgKHN0cmVhbSA9PSBudWxsKSB7DQor
CQkJcmV0dXJuIG51bGw7DQorCQl9DQorCQl0cnkgew0KKwkJCXJldHVybiBuZXcgU3RyaW5nKFV0
aWwuZ2V0SW5wdXRTdHJlYW1Bc0NoYXJBcnJheShzdHJlYW0sIC0xLCAiVVRGLTgiKSk7IC8vJE5P
Ti1OTFMtMSQNCisJCX0gZmluYWxseSB7DQorCQkJdHJ5IHsNCisJCQkJc3RyZWFtLmNsb3NlKCk7
DQorCQkJfSBjYXRjaChJT0V4Y2VwdGlvbiBlKSB7DQorCQkJCS8vIGlnbm9yZQ0KKwkJCX0NCisJ
CQl0cnkgew0KKwkJCQlpZiAoamFyRmlsZSAhPSBudWxsKSB7DQorCQkJCQlqYXJGaWxlLmNsb3Nl
KCk7DQorCQkJCX0NCisJCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7DQorCQkJCS8vIGlnbm9y
ZQ0KKwkJCX0NCisJCX0NCisJfQ0KKw0KIAkvKioNCiAJICogUGFyc2VzIGEgYnVuZGxlJ3MgY29t
cG9uZW50IFhNTCBpbnRvIGEgc3RyaW5nLiBUaGUgZmlsZSBtYXkgYmUgaW4gYSBqYXINCiAJICog
b3IgaW4gYSBkaXJlY3RvcnkgYXQgdGhlIHNwZWNpZmllZCBsb2NhdGlvbi4NCkBAIC03MjgsNyAr
ODE0LDcgQEANCiAJCQl3cml0ZVppcEZpbGVFbnRyeShvdXRwdXRTdHJlYW0sICJjb21wb25lbnQu
eG1sIiwgeG1sLmdldEJ5dGVzKCJVVEYtOCIpLCBjb21wcmVzcyk7ICAvLyROT04tTkxTLTEkLy8k
Tk9OLU5MUy0yJCANCiAJCQkNCiAJCQkvLyBhZGQgcmVxdWlyZWQgZmlsZXM6DQotCQkJZXhwb3J0
RmlsZUZyb21CdW5kbGUob3V0cHV0U3RyZWFtLCAicGx1Z2luLnhtbCIsIGNvbXByZXNzLCB0cnVl
KTsgLy8kTk9OLU5MUy0xJA0KKwkJCWV4cG9ydEZpbGVGcm9tQnVuZGxlKG91dHB1dFN0cmVhbSwg
UExVR0lOX1hNTF9OQU1FLCBjb21wcmVzcywgdHJ1ZSk7DQogCQkJZXhwb3J0RmlsZUZyb21CdW5k
bGUob3V0cHV0U3RyZWFtLCAicGx1Z2luLnByb3BlcnRpZXMiLCBjb21wcmVzcywgdHJ1ZSk7IC8v
JE5PTi1OTFMtMSQNCiAJCQlleHBvcnRGaWxlRnJvbUJ1bmRsZShvdXRwdXRTdHJlYW0sICJhYm91
dC5odG1sIiwgY29tcHJlc3MsIHRydWUpOyAvLyROT04tTkxTLTEkDQogCQkJLy8gVE9ETzogYWJv
dXRfZmlsZXMNCkBAIC04MDMsNSArODg5LDU0IEBADQogCQkJfQ0KIAkJfQ0KIAl9DQotCQ0KKw0K
KwkvKiAobm9uLUphdmFkb2MpDQorCSAqIEBzZWUgSUFwaUNvbXBvbmVudCNpc1NvdXJjZUNvbXBv
bmVudCgpDQorCSAqLw0KKwlwdWJsaWMgYm9vbGVhbiBpc1NvdXJjZUNvbXBvbmVudCgpIHsNCisJ
CU1hbmlmZXN0RWxlbWVudFtdIHNvdXJjZUJ1bmRsZSA9IG51bGw7DQorCQl0cnkgew0KKwkJCXNv
dXJjZUJ1bmRsZSA9IE1hbmlmZXN0RWxlbWVudC5wYXJzZUhlYWRlcihFQ0xJUFNFX1NPVVJDRV9C
VU5ETEUsIChTdHJpbmcpIGZNYW5pZmVzdC5nZXQoRUNMSVBTRV9TT1VSQ0VfQlVORExFKSk7DQor
CQl9IGNhdGNoIChCdW5kbGVFeGNlcHRpb24gZSkgew0KKwkJCS8vIGlnbm9yZQ0KKwkJfQ0KKwkJ
aWYgKHNvdXJjZUJ1bmRsZSAhPSBudWxsKSB7DQorCQkJLy8gdGhpcyBpcyBhIHNvdXJjZSBidW5k
bGUgd2l0aCB0aGUgbmV3IGZvcm1hdA0KKwkJCXJldHVybiB0cnVlOw0KKwkJfQ0KKwkJLy8gY2hl
Y2sgZm9yIHRoZSBvbGQgZm9ybWF0DQorCQlTdHJpbmcgcGx1Z2luWE1MQ29udGVudHMgPSBudWxs
Ow0KKwkJdHJ5IHsNCisJCQlwbHVnaW5YTUxDb250ZW50cyA9IHJlYWRQbHVnaW5YTUxDb250ZW50
cyhuZXcgRmlsZShnZXRMb2NhdGlvbigpKSk7DQorCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7
DQorCQkJLy8gaWdub3JlDQorCQl9DQorCQlpZiAocGx1Z2luWE1MQ29udGVudHMgIT0gbnVsbCkg
ew0KKwkJCVNBWFBhcnNlckZhY3RvcnkgZmFjdG9yeSA9IFNBWFBhcnNlckZhY3RvcnkubmV3SW5z
dGFuY2UoKTsNCisJCQlTQVhQYXJzZXIgc2F4UGFyc2VyID0gbnVsbDsNCisJCQl0cnkgew0KKwkJ
CQlzYXhQYXJzZXIgPSBmYWN0b3J5Lm5ld1NBWFBhcnNlcigpOw0KKwkJCX0gY2F0Y2ggKFBhcnNl
ckNvbmZpZ3VyYXRpb25FeGNlcHRpb24gZSkgew0KKwkJCQkvLyBpZ25vcmUNCisJCQl9IGNhdGNo
IChTQVhFeGNlcHRpb24gZSkgew0KKwkJCQkvLyBpZ25vcmUNCisJCQl9DQorDQorCQkJaWYgKHNh
eFBhcnNlciA9PSBudWxsKSByZXR1cm4gZmFsc2U7DQorDQorCQkJLy8gUGFyc2UNCisJCQlJbnB1
dFNvdXJjZSBpbnB1dFNvdXJjZSA9IG5ldyBJbnB1dFNvdXJjZShuZXcgQnVmZmVyZWRSZWFkZXIo
bmV3IFN0cmluZ1JlYWRlcihwbHVnaW5YTUxDb250ZW50cykpKTsNCisJCQl0cnkgew0KKwkJCQlT
b3VyY2VEZWZhdWx0SGFuZGxlciBkZWZhdWx0SGFuZGxlciA9IG5ldyBTb3VyY2VEZWZhdWx0SGFu
ZGxlcigpOw0KKwkJCQlzYXhQYXJzZXIucGFyc2UoaW5wdXRTb3VyY2UsIGRlZmF1bHRIYW5kbGVy
KTsNCisJCQkJcmV0dXJuIGRlZmF1bHRIYW5kbGVyLmlzU291cmNlOw0KKwkJCX0gY2F0Y2ggKFNB
WEV4Y2VwdGlvbiBlKSB7DQorCQkJCS8vIGlnbm9yZQ0KKwkJCX0gY2F0Y2ggKElPRXhjZXB0aW9u
IGUpIHsNCisJCQkJLy8gaWdub3JlDQorCQkJfQ0KKwkJfQ0KKwkJLy8gcGFyc2UgWE1MIGNvbnRl
bnRzIHRvIGZpbmQgZXh0ZW5zaW9uIHBvaW50cw0KKwkJcmV0dXJuIGZhbHNlOw0KKwl9DQogfQ0K
SW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL0FwaVByb2ZpbGUu
amF2YQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2UvcGRlLWluY3ViYXRv
ci9hcGktdG9vbGluZy9wbHVnaW5zL29yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMvc3JjL29yZy9l
Y2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQXBpUHJvZmlsZS5qYXZhLHYNCnJldHJpZXZp
bmcgcmV2aXNpb24gMS4xNQ0KZGlmZiAtdSAtcjEuMTUgQXBpUHJvZmlsZS5qYXZhDQotLS0gc3Jj
L29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQXBpUHJvZmlsZS5qYXZhCTI5IEph
biAyMDA4IDE2OjAwOjQ3IC0wMDAwCTEuMTUNCisrKyBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90
b29scy9pbnRlcm5hbC9BcGlQcm9maWxlLmphdmEJMzAgSmFuIDIwMDggMDM6MjE6MTMgLTAwMDAN
CkBAIC0zNzgsNiArMzc4LDcgQEANCiAJcHVibGljIHZvaWQgYWRkQXBpQ29tcG9uZW50cyhJQXBp
Q29tcG9uZW50W10gY29tcG9uZW50cywgYm9vbGVhbiBlbmFibGVkKSB7DQogCQlmb3IgKGludCBp
ID0gMDsgaSA8IGNvbXBvbmVudHMubGVuZ3RoOyBpKyspIHsNCiAJCQlCdW5kbGVBcGlDb21wb25l
bnQgY29tcG9uZW50ID0gKEJ1bmRsZUFwaUNvbXBvbmVudCkgY29tcG9uZW50c1tpXTsNCisJCQlp
ZiAoY29tcG9uZW50LmlzU291cmNlQ29tcG9uZW50KCkpIGNvbnRpbnVlOw0KIAkJCUJ1bmRsZURl
c2NyaXB0aW9uIGRlc2NyaXB0aW9uID0gY29tcG9uZW50LmdldEJ1bmRsZURlc2NyaXB0aW9uKCk7
DQogCQkJZlN0YXRlLmFkZEJ1bmRsZShkZXNjcmlwdGlvbik7DQogCQkJdGhpcy5zdG9yZUJ1bmRs
ZURlc2NyaXB0aW9uKGRlc2NyaXB0aW9uLCBjb21wb25lbnQpOw0KSW5kZXg6IHNyYy9vcmcvZWNs
aXBzZS9wZGUvYXBpL3Rvb2xzL0lBcGlDb21wb25lbnQuamF2YQ0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KUkNTIGZp
bGU6IC9jdnNyb290L2VjbGlwc2UvcGRlLWluY3ViYXRvci9hcGktdG9vbGluZy9wbHVnaW5zL29y
Zy5lY2xpcHNlLnBkZS5hcGkudG9vbHMvc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvSUFw
aUNvbXBvbmVudC5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS42DQpkaWZmIC11IC1yMS42
IElBcGlDb21wb25lbnQuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL0lB
cGlDb21wb25lbnQuamF2YQkyOSBKYW4gMjAwOCAyMDoxMDozNiAtMDAwMAkxLjYNCisrKyBzcmMv
b3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9JQXBpQ29tcG9uZW50LmphdmEJMzAgSmFuIDIwMDgg
MDM6MjE6MTIgLTAwMDANCkBAIC0xMjEsNiArMTIxLDEzIEBADQogCXB1YmxpYyBib29sZWFuIGlz
U3lzdGVtQ29tcG9uZW50KCk7DQogCQ0KIAkvKioNCisJICogUmV0dXJucyBpZiB0aGUgY29tcG9u
ZW50IGlzIGEgc291cmNlIGNvbXBvbmVudCBvciBub3QuDQorCSAqIEEgc291cmNlIGNvbXBvbmVu
dCBpcyBub3QgcGVyc2lzdGVkIHdpdGggcHJvZmlsZXMsIGFzIHRoZXkgZG9uJ3QgY29udGFpbiBh
bnkgYmluYXJpZXMuDQorCSAqDQorCSAqIEByZXR1cm4gdHJ1ZSBpZiB0aGUgY29tcG9uZW50IGlz
IGEgc291cmNlIGNvbXBvbmVudCwgZmFsc2Ugb3RoZXJ3aXNlDQorCSAqLw0KKwlwdWJsaWMgYm9v
bGVhbiBpc1NvdXJjZUNvbXBvbmVudCgpOw0KKwkvKioNCiAJICogRGlzcG9zZXMgdGhpcyBBUEkg
Y29tcG9uZW50LiBDbGllbnRzIG11c3QgY2FsbCB0aGlzIG1ldGhvZCB3aGVuIGRvbmUNCiAJICog
d2l0aCBhbiBBUEkgY29tcG9uZW50LiBOb3RlIHRoYXQgZGlzcG9zaW5nIGFuIHtAbGluayBJQXBp
UHJvZmlsZX0gd2lsbCBkaXNwb3NlIGFsbCBvZg0KIAkgKiBpdHMgY29tcG9uZW50cy4gDQpJbmRl
eDogc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvSUFwaVByb2ZpbGUuamF2YQ0KPT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQ0KUkNTIGZpbGU6IC9jdnNyb290L2VjbGlwc2UvcGRlLWluY3ViYXRvci9hcGktdG9vbGlu
Zy9wbHVnaW5zL29yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMvc3JjL29yZy9lY2xpcHNlL3BkZS9h
cGkvdG9vbHMvSUFwaVByb2ZpbGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNA0KZGlm
ZiAtdSAtcjEuNCBJQXBpUHJvZmlsZS5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkv
dG9vbHMvSUFwaVByb2ZpbGUuamF2YQk0IEphbiAyMDA4IDE3OjE1OjMxIC0wMDAwCTEuNA0KKysr
IHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL0lBcGlQcm9maWxlLmphdmEJMzAgSmFuIDIw
MDggMDM6MjE6MTIgLTAwMDANCkBAIC03OCw3ICs3OCw4IEBADQogCXB1YmxpYyB2b2lkIHNldElk
KFN0cmluZyBpZCk7DQogCQ0KIAkvKioNCi0JICogQWRkcyB0aGUgZ2l2ZW4gQVBJIGNvbXBvbmVu
dHMgdG8gdGhpcyBwcm9maWxlLg0KKwkgKiBBZGRzIHRoZSBnaXZlbiBBUEkgY29tcG9uZW50cyB0
byB0aGlzIHByb2ZpbGUuIEFsbCBjb21wb25lbnRzIHRoYXQgYXJlIHNvdXJjZSBjb21wb25lbnRz
DQorCSAqIHdvbid0IGJlIGFkZGVkIHRvIHRoZSBhcGkgcHJvZmlsZS4NCiAJICogDQogCSAqIEBw
YXJhbSBjb21wb25lbnRzIGNvbXBvbmVudHMgdG8gYWRkDQogCSAqIEBwYXJhbSBlbmFibGVkIHdo
ZXRoZXIgdGhlIGNvbXBvbmVudHMgc2hvdWxkIGJlIGVuYWJsZWQgb3IgZGlzYWJsZWQNCg==
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>88299</attachid>
            <date>2008-01-30 11:30:00 -0500</date>
            <delta_ts>2008-01-30 11:30:14 -0500</delta_ts>
            <desc>Proposed fix</desc>
            <filename>patch_215022.txt</filename>
            <type>text/plain</type>
            <size>20407</size>
            <attacher name="Olivier Thomann">Olivier_Thomann</attacher>
            
              <data encoding="base64">IyMjIEVjbGlwc2UgV29ya3NwYWNlIFBhdGNoIDEuMA0KI1Agb3JnLmVjbGlwc2UucGRlLmFwaS50
b29scw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL0J1bmRs
ZUFwaUNvbXBvbmVudC5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBz
ZS9wZGUtaW5jdWJhdG9yL2FwaS10b29saW5nL3BsdWdpbnMvb3JnLmVjbGlwc2UucGRlLmFwaS50
b29scy9zcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9pbnRlcm5hbC9CdW5kbGVBcGlDb21w
b25lbnQuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTQNCmRpZmYgLXUgLXIxLjE0IEJ1
bmRsZUFwaUNvbXBvbmVudC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMv
aW50ZXJuYWwvQnVuZGxlQXBpQ29tcG9uZW50LmphdmEJMjkgSmFuIDIwMDggMjA6MTA6MzYgLTAw
MDAJMS4xNA0KKysrIHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL0J1bmRs
ZUFwaUNvbXBvbmVudC5qYXZhCTMwIEphbiAyMDA4IDE2OjI4OjU4IC0wMDAwDQpAQCAtMTEsNiAr
MTEsNyBAQA0KIHBhY2thZ2Ugb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5pbnRlcm5hbDsNCiAN
CiBpbXBvcnQgamF2YS5pby5CdWZmZXJlZE91dHB1dFN0cmVhbTsNCitpbXBvcnQgamF2YS5pby5C
dWZmZXJlZFJlYWRlcjsNCiBpbXBvcnQgamF2YS5pby5CeXRlQXJyYXlPdXRwdXRTdHJlYW07DQog
aW1wb3J0IGphdmEuaW8uRmlsZTsNCiBpbXBvcnQgamF2YS5pby5GaWxlSW5wdXRTdHJlYW07DQpA
QCAtMTgsNiArMTksNyBAQA0KIGltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07DQogaW1w
b3J0IGphdmEuaW8uSU9FeGNlcHRpb247DQogaW1wb3J0IGphdmEuaW8uSW5wdXRTdHJlYW07DQor
aW1wb3J0IGphdmEuaW8uU3RyaW5nUmVhZGVyOw0KIGltcG9ydCBqYXZhLm5ldC5NYWxmb3JtZWRV
UkxFeGNlcHRpb247DQogaW1wb3J0IGphdmEubmV0LlVSTDsNCiBpbXBvcnQgamF2YS5uZXQuVVJM
Q29ubmVjdGlvbjsNCkBAIC0zNCw2ICszNiwxMSBAQA0KIGltcG9ydCBqYXZhLnV0aWwuemlwLlpp
cEZpbGU7DQogaW1wb3J0IGphdmEudXRpbC56aXAuWmlwT3V0cHV0U3RyZWFtOw0KIA0KK2ltcG9y
dCBqYXZheC54bWwucGFyc2Vycy5GYWN0b3J5Q29uZmlndXJhdGlvbkVycm9yOw0KK2ltcG9ydCBq
YXZheC54bWwucGFyc2Vycy5QYXJzZXJDb25maWd1cmF0aW9uRXhjZXB0aW9uOw0KK2ltcG9ydCBq
YXZheC54bWwucGFyc2Vycy5TQVhQYXJzZXI7DQoraW1wb3J0IGphdmF4LnhtbC5wYXJzZXJzLlNB
WFBhcnNlckZhY3Rvcnk7DQorDQogaW1wb3J0IG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5Db3Jl
RXhjZXB0aW9uOw0KIGltcG9ydCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9u
aXRvcjsNCiBpbXBvcnQgb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLlBhdGg7DQpAQCAtNTQsMTAg
KzYxLDEzIEBADQogaW1wb3J0IG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMuSVJlcXVpcmVkQ29t
cG9uZW50RGVzY3JpcHRpb247DQogaW1wb3J0IG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMuVmlz
aWJpbGl0eU1vZGlmaWVyczsNCiBpbXBvcnQgb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5kZXNj
cmlwdG9ycy5JUGFja2FnZURlc2NyaXB0b3I7DQoraW1wb3J0IG9yZy5lY2xpcHNlLnBkZS5hcGku
dG9vbHMuaW50ZXJuYWwudXRpbC5Tb3VyY2VEZWZhdWx0SGFuZGxlcjsNCiBpbXBvcnQgb3JnLmVj
bGlwc2UucGRlLmFwaS50b29scy5pbnRlcm5hbC51dGlsLlV0aWw7DQogaW1wb3J0IG9yZy5lY2xp
cHNlLnBkZS5hcGkudG9vbHMuc2Nhbm5lci5BcGlEZXNjcmlwdGlvblByb2Nlc3NvcjsNCiBpbXBv
cnQgb3JnLm9zZ2kuZnJhbWV3b3JrLkJ1bmRsZUV4Y2VwdGlvbjsNCiBpbXBvcnQgb3JnLm9zZ2ku
ZnJhbWV3b3JrLkNvbnN0YW50czsNCitpbXBvcnQgb3JnLnhtbC5zYXguSW5wdXRTb3VyY2U7DQor
aW1wb3J0IG9yZy54bWwuc2F4LlNBWEV4Y2VwdGlvbjsNCiANCiAvKioNCiAgKiBJbXBsZW1lbnRh
dGlvbiBvZiBhbiBBUEkgY29tcG9uZW50IGJhc2VkIG9uIGEgYnVuZGxlIGluIHRoZSBmaWxlIHN5
c3RlbS4NCkBAIC02Niw2ICs3NiwxMSBAQA0KICAqLw0KIHB1YmxpYyBjbGFzcyBCdW5kbGVBcGlD
b21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdEFwaUNvbXBvbmVudCB7DQogCQ0KKwlwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgUExVR0lOX1hNTF9OQU1FID0gInBsdWdpbi54bWwiOyAvLyROT04t
TkxTLTEkDQorCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBGUkFHTUVOVF9YTUxfTkFNRSA9
ICJmcmFnbWVudC54bWwiOyAvLyROT04tTkxTLTEkDQorDQorCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBFQ0xJUFNFX1NPVVJDRV9CVU5ETEUgPSAiRWNsaXBzZS1Tb3VyY2VCdW5kbGUiOyAv
LyROT04tTkxTLTEkDQorDQogCS8qKg0KIAkgKiBEaWN0aW9uYXJ5IHBhcnNlZCBmcm9tIE1BTklG
RVNULk1GDQogCSAqLw0KQEAgLTQxMiw2ICs0MjcsMTEgQEANCiAJCX0gY2F0Y2ggKEJ1bmRsZUV4
Y2VwdGlvbiBlKSB7DQogCQl9IGZpbmFsbHkgew0KIAkJCXRyeSB7DQorCQkJCW1hbmlmZXN0U3Ry
ZWFtLmNsb3NlKCk7DQorCQkJfSBjYXRjaChJT0V4Y2VwdGlvbiBlMikgew0KKwkJCQkvLyBpZ25v
cmUNCisJCQl9DQorCQkJdHJ5IHsNCiAJCQkJaWYgKGphckZpbGUgIT0gbnVsbCkNCiAJCQkJCWph
ckZpbGUuY2xvc2UoKTsNCiAJCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlMikgew0KQEAgLTQ1MCw2
ICs0NzAsMTEgQEANCiAJCQlyZXR1cm4gbmV3IE1hbmlmZXN0KG1hbmlmZXN0U3RyZWFtKTsNCiAJ
CX0gZmluYWxseSB7DQogCQkJdHJ5IHsNCisJCQkJbWFuaWZlc3RTdHJlYW0uY2xvc2UoKTsNCisJ
CQl9IGNhdGNoKElPRXhjZXB0aW9uIGUyKSB7DQorCQkJCS8vIGlnbm9yZQ0KKwkJCX0NCisJCQl0
cnkgew0KIAkJCQlpZiAoamFyRmlsZSAhPSBudWxsKSB7DQogCQkJCQlqYXJGaWxlLmNsb3NlKCk7
DQogCQkJCX0NCkBAIC00NTcsOCArNDgyLDU4IEBADQogCQkJCS8vIGlnbm9yZQ0KIAkJCX0NCiAJ
CX0NCi0JfQkNCi0JDQorCX0NCisNCisJLyoqDQorCSAqIFJlYWRzIGFuZCByZXR1cm5zIHRoZSBm
aWxlIGNvbnRlbnRzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGdpdmVuIGZpbGUgbmFtZS4NCisJICog
VGhlIGJ1bmRsZSBtYXkgYmUgaW4gYSBqYXIgb3IgaW4gYSBkaXJlY3RvcnkgYXQgdGhlIHNwZWNp
ZmllZCBsb2NhdGlvbi4NCisJICogDQorCSAqIEBwYXJhbSB4bWxGaWxlTmFtZSB0aGUgZ2l2ZW4g
ZmlsZSBuYW1lDQorCSAqIEBwYXJhbSBidW5kbGVMb2NhdGlvbiB0aGUgcm9vdCBsb2NhdGlvbiBv
ZiB0aGUgYnVuZGxlDQorCSAqIEByZXR1cm4gdGhlIGZpbGUgY29udGVudHMgb3IgPGNvZGU+bnVs
bDwvY29kZT4gaWYgbm90IHByZXNlbnQNCisJICovDQorCXByb3RlY3RlZCBTdHJpbmcgcmVhZEZp
bGVDb250ZW50cyhTdHJpbmcgeG1sRmlsZU5hbWUsIEZpbGUgYnVuZGxlTG9jYXRpb24pIHsNCisJ
CXRyeSB7DQorCQkJWmlwRmlsZSBqYXJGaWxlID0gbnVsbDsNCisJCQlJbnB1dFN0cmVhbSBzdHJl
YW0gPSBudWxsOw0KKwkJCVN0cmluZyBleHRlbnNpb24gPSBuZXcgUGF0aChidW5kbGVMb2NhdGlv
bi5nZXROYW1lKCkpLmdldEZpbGVFeHRlbnNpb24oKTsNCisJCQlpZiAoZXh0ZW5zaW9uICE9IG51
bGwgJiYgZXh0ZW5zaW9uLmVxdWFscygiamFyIikgJiYgYnVuZGxlTG9jYXRpb24uaXNGaWxlKCkp
IHsgLy8kTk9OLU5MUy0xJA0KKwkJCQlqYXJGaWxlID0gbmV3IFppcEZpbGUoYnVuZGxlTG9jYXRp
b24sIFppcEZpbGUuT1BFTl9SRUFEKTsNCisJCQkJWmlwRW50cnkgbWFuaWZlc3RFbnRyeSA9IGph
ckZpbGUuZ2V0RW50cnkoeG1sRmlsZU5hbWUpOw0KKwkJCQlpZiAobWFuaWZlc3RFbnRyeSAhPSBu
dWxsKSB7DQorCQkJCQlzdHJlYW0gPSBqYXJGaWxlLmdldElucHV0U3RyZWFtKG1hbmlmZXN0RW50
cnkpOw0KKwkJCQl9DQorCQkJfSBlbHNlIHsNCisJCQkJRmlsZSBmaWxlID0gbmV3IEZpbGUoYnVu
ZGxlTG9jYXRpb24sIHhtbEZpbGVOYW1lKTsNCisJCQkJaWYgKGZpbGUuZXhpc3RzKCkpIHsNCisJ
CQkJCXN0cmVhbSA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oZmlsZSk7DQorCQkJCX0NCisJCQl9DQor
CQkJaWYgKHN0cmVhbSA9PSBudWxsKSB7DQorCQkJCXJldHVybiBudWxsOw0KKwkJCX0NCisJCQl0
cnkgew0KKwkJCQlyZXR1cm4gbmV3IFN0cmluZyhVdGlsLmdldElucHV0U3RyZWFtQXNDaGFyQXJy
YXkoc3RyZWFtLCAtMSwgIlVURi04IikpOyAvLyROT04tTkxTLTEkDQorCQkJfSBmaW5hbGx5IHsN
CisJCQkJdHJ5IHsNCisJCQkJCXN0cmVhbS5jbG9zZSgpOw0KKwkJCQl9IGNhdGNoKElPRXhjZXB0
aW9uIGUpIHsNCisJCQkJCS8vIGlnbm9yZQ0KKwkJCQl9DQorCQkJCXRyeSB7DQorCQkJCQlpZiAo
amFyRmlsZSAhPSBudWxsKSB7DQorCQkJCQkJamFyRmlsZS5jbG9zZSgpOw0KKwkJCQkJfQ0KKwkJ
CQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7DQorCQkJCQkvLyBpZ25vcmUNCisJCQkJfQ0KKwkJ
CX0NCisJCX0gY2F0Y2goSU9FeGNlcHRpb24gZSkgew0KKwkJCS8vIGlnbm9yZQ0KKwkJfQ0KKwkJ
cmV0dXJuIG51bGw7DQorCX0NCisNCiAJLyoqDQogCSAqIFBhcnNlcyBhIGJ1bmRsZSdzIGNvbXBv
bmVudCBYTUwgaW50byBhIHN0cmluZy4gVGhlIGZpbGUgbWF5IGJlIGluIGEgamFyDQogCSAqIG9y
IGluIGEgZGlyZWN0b3J5IGF0IHRoZSBzcGVjaWZpZWQgbG9jYXRpb24uDQpAQCAtNzI4LDcgKzgw
Myw3IEBADQogCQkJd3JpdGVaaXBGaWxlRW50cnkob3V0cHV0U3RyZWFtLCAiY29tcG9uZW50Lnht
bCIsIHhtbC5nZXRCeXRlcygiVVRGLTgiKSwgY29tcHJlc3MpOyAgLy8kTk9OLU5MUy0xJC8vJE5P
Ti1OTFMtMiQgDQogCQkJDQogCQkJLy8gYWRkIHJlcXVpcmVkIGZpbGVzOg0KLQkJCWV4cG9ydEZp
bGVGcm9tQnVuZGxlKG91dHB1dFN0cmVhbSwgInBsdWdpbi54bWwiLCBjb21wcmVzcywgdHJ1ZSk7
IC8vJE5PTi1OTFMtMSQNCisJCQlleHBvcnRGaWxlRnJvbUJ1bmRsZShvdXRwdXRTdHJlYW0sIFBM
VUdJTl9YTUxfTkFNRSwgY29tcHJlc3MsIHRydWUpOw0KIAkJCWV4cG9ydEZpbGVGcm9tQnVuZGxl
KG91dHB1dFN0cmVhbSwgInBsdWdpbi5wcm9wZXJ0aWVzIiwgY29tcHJlc3MsIHRydWUpOyAvLyRO
T04tTkxTLTEkDQogCQkJZXhwb3J0RmlsZUZyb21CdW5kbGUob3V0cHV0U3RyZWFtLCAiYWJvdXQu
aHRtbCIsIGNvbXByZXNzLCB0cnVlKTsgLy8kTk9OLU5MUy0xJA0KIAkJCS8vIFRPRE86IGFib3V0
X2ZpbGVzDQpAQCAtODAzLDUgKzg3OCw3NiBAQA0KIAkJCX0NCiAJCX0NCiAJfQ0KLQkNCisNCisJ
LyogKG5vbi1KYXZhZG9jKQ0KKwkgKiBAc2VlIElBcGlDb21wb25lbnQjaXNTb3VyY2VDb21wb25l
bnQoKQ0KKwkgKi8NCisJcHVibGljIGJvb2xlYW4gaXNTb3VyY2VDb21wb25lbnQoKSB7DQorCQlN
YW5pZmVzdEVsZW1lbnRbXSBzb3VyY2VCdW5kbGUgPSBudWxsOw0KKwkJdHJ5IHsNCisJCQlzb3Vy
Y2VCdW5kbGUgPSBNYW5pZmVzdEVsZW1lbnQucGFyc2VIZWFkZXIoRUNMSVBTRV9TT1VSQ0VfQlVO
RExFLCAoU3RyaW5nKSBmTWFuaWZlc3QuZ2V0KEVDTElQU0VfU09VUkNFX0JVTkRMRSkpOw0KKwkJ
fSBjYXRjaCAoQnVuZGxlRXhjZXB0aW9uIGUpIHsNCisJCQkvLyBpZ25vcmUNCisJCX0NCisJCWlm
IChzb3VyY2VCdW5kbGUgIT0gbnVsbCkgew0KKwkJCS8vIHRoaXMgaXMgYSBzb3VyY2UgYnVuZGxl
IHdpdGggdGhlIG5ldyBmb3JtYXQNCisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJCS8vIGNoZWNr
IGZvciB0aGUgb2xkIGZvcm1hdA0KKwkJU3RyaW5nIHBsdWdpblhNTENvbnRlbnRzID0gcmVhZEZp
bGVDb250ZW50cyhQTFVHSU5fWE1MX05BTUUsbmV3IEZpbGUoZ2V0TG9jYXRpb24oKSkpOw0KKwkJ
aWYgKHBsdWdpblhNTENvbnRlbnRzICE9IG51bGwpIHsNCisJCQlpZiAoY29udGFpbnNTb3VyY2VF
eHRlbnNpb25Qb2ludChwbHVnaW5YTUxDb250ZW50cykpIHsNCisJCQkJcmV0dXJuIHRydWU7DQor
CQkJfQ0KKwkJfQ0KKwkJLy8gY2hlY2sgaWYgaXQgY29udGFpbnMgYSBmcmFnbWVudC54bWwgd2l0
aCB0aGUgYXBwcm9wcmlhdGUgZXh0ZW5zaW9uIHBvaW50DQorCQlwbHVnaW5YTUxDb250ZW50cyA9
IHJlYWRGaWxlQ29udGVudHMoRlJBR01FTlRfWE1MX05BTUUsbmV3IEZpbGUoZ2V0TG9jYXRpb24o
KSkpOw0KKwkJaWYgKHBsdWdpblhNTENvbnRlbnRzICE9IG51bGwpIHsNCisJCQlpZiAoY29udGFp
bnNTb3VyY2VFeHRlbnNpb25Qb2ludChwbHVnaW5YTUxDb250ZW50cykpIHsNCisJCQkJcmV0dXJu
IHRydWU7DQorCQkJfQ0KKwkJfQ0KKwkJLy8gcGFyc2UgWE1MIGNvbnRlbnRzIHRvIGZpbmQgZXh0
ZW5zaW9uIHBvaW50cw0KKwkJcmV0dXJuIGZhbHNlOw0KKwl9DQorDQorCS8qKg0KKwkgKiBDaGVj
ayBpZiB0aGUgZ2l2ZW4gc291cmNlIGNvbnRhaW5zIGFuIHNvdXJjZSBleHRlbnNpb24gcG9pbnQu
DQorCSAqIA0KKwkgKiBAcGFyYW0gcGx1Z2luWE1MQ29udGVudHMgdGhlIGdpdmVuIGZpbGUgY29u
dGVudHMNCisJICogQHJldHVybiB0cnVlIGlmIGl0IGNvbnRhaW5zIGEgc291cmNlIGV4dGVuc2lv
biBwb2ludCwgZmFsc2Ugb3RoZXJ3aXNlDQorCSAqLw0KKwlwcml2YXRlIGJvb2xlYW4gY29udGFp
bnNTb3VyY2VFeHRlbnNpb25Qb2ludChTdHJpbmcgcGx1Z2luWE1MQ29udGVudHMpIHsNCisJCVNB
WFBhcnNlckZhY3RvcnkgZmFjdG9yeSA9IG51bGw7DQorCQl0cnkgew0KKwkJCWZhY3RvcnkgPSBT
QVhQYXJzZXJGYWN0b3J5Lm5ld0luc3RhbmNlKCk7DQorCQl9IGNhdGNoIChGYWN0b3J5Q29uZmln
dXJhdGlvbkVycm9yIGUpIHsNCisJCQlyZXR1cm4gZmFsc2U7DQorCQl9DQorCQlTQVhQYXJzZXIg
c2F4UGFyc2VyID0gbnVsbDsNCisJCXRyeSB7DQorCQkJc2F4UGFyc2VyID0gZmFjdG9yeS5uZXdT
QVhQYXJzZXIoKTsNCisJCX0gY2F0Y2ggKFBhcnNlckNvbmZpZ3VyYXRpb25FeGNlcHRpb24gZSkg
ew0KKwkJCS8vIGlnbm9yZQ0KKwkJfSBjYXRjaCAoU0FYRXhjZXB0aW9uIGUpIHsNCisJCQkvLyBp
Z25vcmUNCisJCX0NCisNCisJCWlmIChzYXhQYXJzZXIgPT0gbnVsbCkgew0KKwkJCXJldHVybiBm
YWxzZTsNCisJCX0NCisNCisJCS8vIFBhcnNlDQorCQlJbnB1dFNvdXJjZSBpbnB1dFNvdXJjZSA9
IG5ldyBJbnB1dFNvdXJjZShuZXcgQnVmZmVyZWRSZWFkZXIobmV3IFN0cmluZ1JlYWRlcihwbHVn
aW5YTUxDb250ZW50cykpKTsNCisJCXRyeSB7DQorCQkJU291cmNlRGVmYXVsdEhhbmRsZXIgZGVm
YXVsdEhhbmRsZXIgPSBuZXcgU291cmNlRGVmYXVsdEhhbmRsZXIoKTsNCisJCQlzYXhQYXJzZXIu
cGFyc2UoaW5wdXRTb3VyY2UsIGRlZmF1bHRIYW5kbGVyKTsNCisJCQlyZXR1cm4gZGVmYXVsdEhh
bmRsZXIuaXNTb3VyY2UoKTsNCisJCX0gY2F0Y2ggKFNBWEV4Y2VwdGlvbiBlKSB7DQorCQkJLy8g
aWdub3JlDQorCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7DQorCQkJLy8gaWdub3JlDQorCQl9
DQorCQlyZXR1cm4gZmFsc2U7DQorCX0NCiB9DQpJbmRleDogc3JjL29yZy9lY2xpcHNlL3BkZS9h
cGkvdG9vbHMvaW50ZXJuYWwvU3lzdGVtTGlicmFyeUFwaUNvbXBvbmVudC5qYXZhDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9wZGUtaW5jdWJhdG9yL2FwaS10b29saW5n
L3BsdWdpbnMvb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy9zcmMvb3JnL2VjbGlwc2UvcGRlL2Fw
aS90b29scy9pbnRlcm5hbC9TeXN0ZW1MaWJyYXJ5QXBpQ29tcG9uZW50LmphdmEsdg0KcmV0cmll
dmluZyByZXZpc2lvbiAxLjQNCmRpZmYgLXUgLXIxLjQgU3lzdGVtTGlicmFyeUFwaUNvbXBvbmVu
dC5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvU3lzdGVt
TGlicmFyeUFwaUNvbXBvbmVudC5qYXZhCTI0IEphbiAyMDA4IDE3OjQxOjE1IC0wMDAwCTEuNA0K
KysrIHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL1N5c3RlbUxpYnJhcnlB
cGlDb21wb25lbnQuamF2YQkzMCBKYW4gMjAwOCAxNjoyODo1OCAtMDAwMA0KQEAgLTQwLDkgKzQw
LDkgQEANCiAJcHJpdmF0ZSBTdHJpbmdbXSBmRXhlY0VudjsNCiAJDQogCS8qKg0KLQkgKiBMYW5n
dWFnZSBsZXZlbCAtIGkuZS4gMS40LCAxLjUsIGV0Yy4NCisJICogQXNzb2NpYXRlZCBsaWJyYXJ5
IGxvY2F0aW9ucy4NCiAJICovDQotCXByaXZhdGUgU3RyaW5nIGZWZXJzaW9uOw0KKwlwcml2YXRl
IExpYnJhcnlMb2NhdGlvbltdIGZMaWJyYXJpZXM7DQogCQ0KIAkvKioNCiAJICogSG9tZSBkaXJl
Y3RvcnkNCkBAIC01NSw5ICs1NSw5IEBADQogCXByaXZhdGUgU3RyaW5nW10gZlN5c3RlbVBhY2th
Z2VzOw0KIAkNCiAJLyoqDQotCSAqIEFzc29jaWF0ZWQgbGlicmFyeSBsb2NhdGlvbnMuDQorCSAq
IExhbmd1YWdlIGxldmVsIC0gaS5lLiAxLjQsIDEuNSwgZXRjLg0KIAkgKi8NCi0JcHJpdmF0ZSBM
aWJyYXJ5TG9jYXRpb25bXSBmTGlicmFyaWVzOw0KKwlwcml2YXRlIFN0cmluZyBmVmVyc2lvbjsN
CiAJDQogCS8qKg0KIAkgKiBDb25zdHJ1Y3RzIGEgc3lzdGVtIGxpYnJhcnkgZnJvbSB0aGUgZ2l2
ZW4gZXhlY3V0aW9uIGVudmlyb25tZW50IGRlc2NyaXB0aW9uIGZpbGUuDQpAQCAtNzMsNiArNzMs
NTMgQEANCiAJfQ0KIA0KIAkvKiAobm9uLUphdmFkb2MpDQorCSAqIEBzZWUgb3JnLmVjbGlwc2Uu
cGRlLmFwaS50b29scy5pbnRlcm5hbC5kZXNjcmlwdG9ycy5BYnN0cmFjdEFwaUNvbXBvbmVudCNj
cmVhdGVBcGlEZXNjcmlwdGlvbigpDQorCSAqLw0KKwlwcm90ZWN0ZWQgSUFwaURlc2NyaXB0aW9u
IGNyZWF0ZUFwaURlc2NyaXB0aW9uKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KKwkJSUFwaURl
c2NyaXB0aW9uIGFwaSA9IG5ldyBBcGlEZXNjcmlwdGlvbihnZXRJZCgpKTsNCisJCWZvciAoaW50
IGkgPSAwOyBpIDwgZlN5c3RlbVBhY2thZ2VzLmxlbmd0aDsgaSsrKSB7DQorCQkJSVBhY2thZ2VE
ZXNjcmlwdG9yIHBrZyAgPSBGYWN0b3J5LnBhY2thZ2VEZXNjcmlwdG9yKGZTeXN0ZW1QYWNrYWdl
c1tpXSk7DQorCQkJYXBpLnNldFZpc2liaWxpdHkobnVsbCwgcGtnLCBWaXNpYmlsaXR5TW9kaWZp
ZXJzLkFQSSk7DQorCQl9DQorCQkvLyBoYXZlIHRvIGZpbGwgaW4gamF2YS4qIGFzIHdlbGwNCisJ
CVN0cmluZ1tdIHBhY2thZ2VOYW1lcyA9IGdldFBhY2thZ2VOYW1lcygpOw0KKwkJZm9yIChpbnQg
aSA9IDA7IGkgPCBwYWNrYWdlTmFtZXMubGVuZ3RoOyBpKyspIHsNCisJCQlpZiAocGFja2FnZU5h
bWVzW2ldLnN0YXJ0c1dpdGgoImphdmEuIikpIHsgLy8kTk9OLU5MUy0xJA0KKwkJCQlJUGFja2Fn
ZURlc2NyaXB0b3IgcGtnICA9IEZhY3RvcnkucGFja2FnZURlc2NyaXB0b3IocGFja2FnZU5hbWVz
W2ldKTsNCisJCQkJYXBpLnNldFZpc2liaWxpdHkobnVsbCwgcGtnLCBWaXNpYmlsaXR5TW9kaWZp
ZXJzLkFQSSk7DQorCQkJfQ0KKwkJfQ0KKwkJcmV0dXJuIGFwaTsNCisJfQ0KKw0KKwkvKiAobm9u
LUphdmFkb2MpDQorCSAqIEBzZWUgb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5pbnRlcm5hbC5B
YnN0cmFjdEFwaUNvbXBvbmVudCNjcmVhdGVBcGlGaWx0ZXJTdG9yZSgpDQorCSAqLw0KKwlwcm90
ZWN0ZWQgSUFwaUZpbHRlclN0b3JlIGNyZWF0ZUFwaUZpbHRlclN0b3JlKCkgew0KKwkJLy9UT0RP
DQorCQlyZXR1cm4gbnVsbDsNCisJfQ0KKw0KKwkvKiAobm9uLUphdmFkb2MpDQorCSAqIEBzZWUg
b3JnLmVjbGlwc2UucGRlLmFwaS50b29scy5pbnRlcm5hbC5kZXNjcmlwdG9ycy5BYnN0cmFjdEFw
aUNvbXBvbmVudCNjcmVhdGVDbGFzc0ZpbGVDb250YWluZXJzKCkNCisJICovDQorCXByb3RlY3Rl
ZCBMaXN0IGNyZWF0ZUNsYXNzRmlsZUNvbnRhaW5lcnMoKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7
DQorCQlMaXN0IGxpYnMgPSBuZXcgQXJyYXlMaXN0KGZMaWJyYXJpZXMubGVuZ3RoKTsNCisJCWZv
ciAoaW50IGkgPSAwOyBpIDwgZkxpYnJhcmllcy5sZW5ndGg7IGkrKykgew0KKwkJCUxpYnJhcnlM
b2NhdGlvbiBsaWIgPSBmTGlicmFyaWVzW2ldOw0KKwkJCWxpYnMuYWRkKG5ldyBBcmNoaXZlQ2xh
c3NGaWxlQ29udGFpbmVyKGxpYi5nZXRTeXN0ZW1MaWJyYXJ5UGF0aCgpLnRvT1NTdHJpbmcoKSkp
Ow0KKwkJfQ0KKwkJcmV0dXJuIGxpYnM7DQorCX0NCisNCisJLyogKG5vbi1KYXZhZG9jKQ0KKwkg
KiBAc2VlIG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMubW9kZWwuY29tcG9uZW50LklBcGlDb21w
b25lbnQjZXhwb3J0KGphdmEudXRpbC5NYXAsIG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5JUHJv
Z3Jlc3NNb25pdG9yKQ0KKwkgKi8NCisJcHVibGljIHZvaWQgZXhwb3J0KE1hcCBvcHRpb25zLCBJ
UHJvZ3Jlc3NNb25pdG9yIG1vbml0b3IpIHRocm93cyBDb3JlRXhjZXB0aW9uIHsNCisJCWFib3J0
KCJTeXN0ZW0gbGlicmFyeSBkb2VzIG5vdCBzdXBwb3J0IGV4cG9ydC4iLCBudWxsKTsgLy8kTk9O
LU5MUy0xJA0KKwl9DQorDQorCS8qIChub24tSmF2YWRvYykNCiAJICogQHNlZSBvcmcuZWNsaXBz
ZS5wZGUuYXBpLnRvb2xzLm1vZGVsLmNvbXBvbmVudC5JQXBpQ29tcG9uZW50I2dldEV4ZWN1dGlv
bkVudmlyb25tZW50cygpDQogCSAqLw0KIAlwdWJsaWMgU3RyaW5nW10gZ2V0RXhlY3V0aW9uRW52
aXJvbm1lbnRzKCkgew0KQEAgLTg1LDcgKzEzMiw3IEBADQogCXB1YmxpYyBTdHJpbmcgZ2V0SWQo
KSB7DQogCQlyZXR1cm4gZkV4ZWNFbnZbMF07DQogCX0NCi0NCisJDQogCS8qIChub24tSmF2YWRv
YykNCiAJICogQHNlZSBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLm1vZGVsLmNvbXBvbmVudC5J
QXBpQ29tcG9uZW50I2dldExvY2F0aW9uKCkNCiAJICovDQpAQCAtMTI4LDU2ICsxNzUsMTYgQEAN
CiAJfQ0KIA0KIAkvKiAobm9uLUphdmFkb2MpDQotCSAqIEBzZWUgb3JnLmVjbGlwc2UucGRlLmFw
aS50b29scy5tb2RlbC5jb21wb25lbnQuSUFwaUNvbXBvbmVudCNpc1N5c3RlbUNvbXBvbmVudCgp
DQotCSAqLw0KLQlwdWJsaWMgYm9vbGVhbiBpc1N5c3RlbUNvbXBvbmVudCgpIHsNCi0JCXJldHVy
biB0cnVlOw0KLQl9DQotDQotCS8qIChub24tSmF2YWRvYykNCi0JICogQHNlZSBvcmcuZWNsaXBz
ZS5wZGUuYXBpLnRvb2xzLmludGVybmFsLmRlc2NyaXB0b3JzLkFic3RyYWN0QXBpQ29tcG9uZW50
I2NyZWF0ZUFwaURlc2NyaXB0aW9uKCkNCisJICogQHNlZSBJQXBpQ29tcG9uZW50I2lzU291cmNl
Q29tcG9uZW50KCkNCiAJICovDQotCXByb3RlY3RlZCBJQXBpRGVzY3JpcHRpb24gY3JlYXRlQXBp
RGVzY3JpcHRpb24oKSB0aHJvd3MgQ29yZUV4Y2VwdGlvbiB7DQotCQlJQXBpRGVzY3JpcHRpb24g
YXBpID0gbmV3IEFwaURlc2NyaXB0aW9uKGdldElkKCkpOw0KLQkJZm9yIChpbnQgaSA9IDA7IGkg
PCBmU3lzdGVtUGFja2FnZXMubGVuZ3RoOyBpKyspIHsNCi0JCQlJUGFja2FnZURlc2NyaXB0b3Ig
cGtnICA9IEZhY3RvcnkucGFja2FnZURlc2NyaXB0b3IoZlN5c3RlbVBhY2thZ2VzW2ldKTsNCi0J
CQlhcGkuc2V0VmlzaWJpbGl0eShudWxsLCBwa2csIFZpc2liaWxpdHlNb2RpZmllcnMuQVBJKTsN
Ci0JCX0NCi0JCS8vIGhhdmUgdG8gZmlsbCBpbiBqYXZhLiogYXMgd2VsbA0KLQkJU3RyaW5nW10g
cGFja2FnZU5hbWVzID0gZ2V0UGFja2FnZU5hbWVzKCk7DQotCQlmb3IgKGludCBpID0gMDsgaSA8
IHBhY2thZ2VOYW1lcy5sZW5ndGg7IGkrKykgew0KLQkJCWlmIChwYWNrYWdlTmFtZXNbaV0uc3Rh
cnRzV2l0aCgiamF2YS4iKSkgeyAvLyROT04tTkxTLTEkDQotCQkJCUlQYWNrYWdlRGVzY3JpcHRv
ciBwa2cgID0gRmFjdG9yeS5wYWNrYWdlRGVzY3JpcHRvcihwYWNrYWdlTmFtZXNbaV0pOw0KLQkJ
CQlhcGkuc2V0VmlzaWJpbGl0eShudWxsLCBwa2csIFZpc2liaWxpdHlNb2RpZmllcnMuQVBJKTsN
Ci0JCQl9DQotCQl9DQotCQlyZXR1cm4gYXBpOw0KLQl9DQotDQotCS8qIChub24tSmF2YWRvYykN
Ci0JICogQHNlZSBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLmludGVybmFsLkFic3RyYWN0QXBp
Q29tcG9uZW50I2NyZWF0ZUFwaUZpbHRlclN0b3JlKCkNCi0JICovDQotCXByb3RlY3RlZCBJQXBp
RmlsdGVyU3RvcmUgY3JlYXRlQXBpRmlsdGVyU3RvcmUoKSB7DQotCQkvL1RPRE8NCi0JCXJldHVy
biBudWxsOw0KKwlwdWJsaWMgYm9vbGVhbiBpc1NvdXJjZUNvbXBvbmVudCgpIHsNCisJCXJldHVy
biBmYWxzZTsNCiAJfQ0KIAkNCiAJLyogKG5vbi1KYXZhZG9jKQ0KLQkgKiBAc2VlIG9yZy5lY2xp
cHNlLnBkZS5hcGkudG9vbHMuaW50ZXJuYWwuZGVzY3JpcHRvcnMuQWJzdHJhY3RBcGlDb21wb25l
bnQjY3JlYXRlQ2xhc3NGaWxlQ29udGFpbmVycygpDQotCSAqLw0KLQlwcm90ZWN0ZWQgTGlzdCBj
cmVhdGVDbGFzc0ZpbGVDb250YWluZXJzKCkgdGhyb3dzIENvcmVFeGNlcHRpb24gew0KLQkJTGlz
dCBsaWJzID0gbmV3IEFycmF5TGlzdChmTGlicmFyaWVzLmxlbmd0aCk7DQotCQlmb3IgKGludCBp
ID0gMDsgaSA8IGZMaWJyYXJpZXMubGVuZ3RoOyBpKyspIHsNCi0JCQlMaWJyYXJ5TG9jYXRpb24g
bGliID0gZkxpYnJhcmllc1tpXTsNCi0JCQlsaWJzLmFkZChuZXcgQXJjaGl2ZUNsYXNzRmlsZUNv
bnRhaW5lcihsaWIuZ2V0U3lzdGVtTGlicmFyeVBhdGgoKS50b09TU3RyaW5nKCkpKTsNCi0JCX0N
Ci0JCXJldHVybiBsaWJzOw0KLQl9DQotDQotCS8qIChub24tSmF2YWRvYykNCi0JICogQHNlZSBv
cmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLm1vZGVsLmNvbXBvbmVudC5JQXBpQ29tcG9uZW50I2V4
cG9ydChqYXZhLnV0aWwuTWFwLCBvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuSVByb2dyZXNzTW9u
aXRvcikNCisJICogQHNlZSBvcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzLm1vZGVsLmNvbXBvbmVu
dC5JQXBpQ29tcG9uZW50I2lzU3lzdGVtQ29tcG9uZW50KCkNCiAJICovDQotCXB1YmxpYyB2b2lk
IGV4cG9ydChNYXAgb3B0aW9ucywgSVByb2dyZXNzTW9uaXRvciBtb25pdG9yKSB0aHJvd3MgQ29y
ZUV4Y2VwdGlvbiB7DQotCQlhYm9ydCgiU3lzdGVtIGxpYnJhcnkgZG9lcyBub3Qgc3VwcG9ydCBl
eHBvcnQuIiwgbnVsbCk7IC8vJE5PTi1OTFMtMSQNCisJcHVibGljIGJvb2xlYW4gaXNTeXN0ZW1D
b21wb25lbnQoKSB7DQorCQlyZXR1cm4gdHJ1ZTsNCiAJfQ0KIH0NCkluZGV4OiBzcmMvb3JnL2Vj
bGlwc2UvcGRlL2FwaS90b29scy9pbnRlcm5hbC9BcGlQcm9maWxlLmphdmENCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
ClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL3BkZS1pbmN1YmF0b3IvYXBpLXRvb2xpbmcvcGx1
Z2lucy9vcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xzL3NyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rv
b2xzL2ludGVybmFsL0FwaVByb2ZpbGUuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTUN
CmRpZmYgLXUgLXIxLjE1IEFwaVByb2ZpbGUuamF2YQ0KLS0tIHNyYy9vcmcvZWNsaXBzZS9wZGUv
YXBpL3Rvb2xzL2ludGVybmFsL0FwaVByb2ZpbGUuamF2YQkyOSBKYW4gMjAwOCAxNjowMDo0NyAt
MDAwMAkxLjE1DQorKysgc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvQXBp
UHJvZmlsZS5qYXZhCTMwIEphbiAyMDA4IDE2OjI4OjU4IC0wMDAwDQpAQCAtMzc4LDYgKzM3OCw3
IEBADQogCXB1YmxpYyB2b2lkIGFkZEFwaUNvbXBvbmVudHMoSUFwaUNvbXBvbmVudFtdIGNvbXBv
bmVudHMsIGJvb2xlYW4gZW5hYmxlZCkgew0KIAkJZm9yIChpbnQgaSA9IDA7IGkgPCBjb21wb25l
bnRzLmxlbmd0aDsgaSsrKSB7DQogCQkJQnVuZGxlQXBpQ29tcG9uZW50IGNvbXBvbmVudCA9IChC
dW5kbGVBcGlDb21wb25lbnQpIGNvbXBvbmVudHNbaV07DQorCQkJaWYgKGNvbXBvbmVudC5pc1Nv
dXJjZUNvbXBvbmVudCgpKSBjb250aW51ZTsNCiAJCQlCdW5kbGVEZXNjcmlwdGlvbiBkZXNjcmlw
dGlvbiA9IGNvbXBvbmVudC5nZXRCdW5kbGVEZXNjcmlwdGlvbigpOw0KIAkJCWZTdGF0ZS5hZGRC
dW5kbGUoZGVzY3JpcHRpb24pOw0KIAkJCXRoaXMuc3RvcmVCdW5kbGVEZXNjcmlwdGlvbihkZXNj
cmlwdGlvbiwgY29tcG9uZW50KTsNCkluZGV4OiBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29s
cy9JQXBpQ29tcG9uZW50LmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xp
cHNlL3BkZS1pbmN1YmF0b3IvYXBpLXRvb2xpbmcvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYXBp
LnRvb2xzL3NyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL0lBcGlDb21wb25lbnQuamF2YSx2
DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNg0KZGlmZiAtdSAtcjEuNiBJQXBpQ29tcG9uZW50Lmph
dmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9JQXBpQ29tcG9uZW50LmphdmEJ
MjkgSmFuIDIwMDggMjA6MTA6MzYgLTAwMDAJMS42DQorKysgc3JjL29yZy9lY2xpcHNlL3BkZS9h
cGkvdG9vbHMvSUFwaUNvbXBvbmVudC5qYXZhCTMwIEphbiAyMDA4IDE2OjI4OjU4IC0wMDAwDQpA
QCAtMTIxLDYgKzEyMSwyMyBAQA0KIAlwdWJsaWMgYm9vbGVhbiBpc1N5c3RlbUNvbXBvbmVudCgp
Ow0KIAkNCiAJLyoqDQorCSAqIFJldHVybnMgaWYgdGhlIGNvbXBvbmVudCBpcyBhIHNvdXJjZSBj
b21wb25lbnQgb3Igbm90Lg0KKwkgKiBBIHNvdXJjZSBjb21wb25lbnQgaXMgbm90IHBlcnNpc3Rl
ZCB3aXRoIHByb2ZpbGVzLCBhcyB0aGV5IGRvbid0IGNvbnRhaW4gYW55IGJpbmFyaWVzLg0KKwkg
KiANCisJICogPHA+QSBjb21wb25lbnQgaXMgYSBzb3VyY2UgY29tcG9uZW50IGlmIGFuZCBvbmx5
IGlmIG9uZSBvZiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgaXMgdHJ1ZTo8L3A+DQorCSAqIDx1
bD4NCisJICogPGxpPml0cyBtYW5pZmVzdCBjb250YWlucyBhbiBlbnRyeSBjYWxsZWQgPGNvZGU+
RWNsaXBzZS1Tb3VyY2VCdW5kbGU8L2NvZGU+PC9saT4NCisJICogPGxpPml0cyA8Y29kZT5wbHVn
aW4ueG1sPC9jb2RlPiBmaWxlIGNvbnRhaW5zIGFuIGV4dGVuc2lvbiBmb3IgdGhlIGV4dGVuc2lv
biBwb2ludCBpZiB0aGUNCisJICogY29tcG9uZW50IGlzIG5vdCBhIGZyYWdtZW50Lg0KKwkgKiA8
bGk+aXRzIDxjb2RlPmZyYWdtZW50LnhtbDwvY29kZT4gZmlsZSBjb250YWlucyBhbiBleHRlbnNp
b24gZm9yIHRoZSBleHRlbnNpb24gcG9pbnQgaWYgdGhlDQorCSAqIGNvbXBvbmVudCBpcyBhIGZy
YWdtZW50Lg0KKwkgKiA8Y29kZT5vcmcuZWNsaXBzZS5wZGUuY29yZS5zb3VyY2U8L2NvZGU+PC9s
aT4NCisJICogPC91bD4NCisJICoNCisJICogQHJldHVybiB0cnVlIGlmIHRoZSBjb21wb25lbnQg
aXMgYSBzb3VyY2UgY29tcG9uZW50LCBmYWxzZSBvdGhlcndpc2UNCisJICovDQorCXB1YmxpYyBi
b29sZWFuIGlzU291cmNlQ29tcG9uZW50KCk7DQorCS8qKg0KIAkgKiBEaXNwb3NlcyB0aGlzIEFQ
SSBjb21wb25lbnQuIENsaWVudHMgbXVzdCBjYWxsIHRoaXMgbWV0aG9kIHdoZW4gZG9uZQ0KIAkg
KiB3aXRoIGFuIEFQSSBjb21wb25lbnQuIE5vdGUgdGhhdCBkaXNwb3NpbmcgYW4ge0BsaW5rIElB
cGlQcm9maWxlfSB3aWxsIGRpc3Bvc2UgYWxsIG9mDQogCSAqIGl0cyBjb21wb25lbnRzLiANCklu
ZGV4OiBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9JQXBpUHJvZmlsZS5qYXZhDQo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9wZGUtaW5jdWJhdG9yL2FwaS10b29s
aW5nL3BsdWdpbnMvb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy9zcmMvb3JnL2VjbGlwc2UvcGRl
L2FwaS90b29scy9JQXBpUHJvZmlsZS5qYXZhLHYNCnJldHJpZXZpbmcgcmV2aXNpb24gMS40DQpk
aWZmIC11IC1yMS40IElBcGlQcm9maWxlLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvcGRlL2Fw
aS90b29scy9JQXBpUHJvZmlsZS5qYXZhCTQgSmFuIDIwMDggMTc6MTU6MzEgLTAwMDAJMS40DQor
Kysgc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvSUFwaVByb2ZpbGUuamF2YQkzMCBKYW4g
MjAwOCAxNjoyODo1OCAtMDAwMA0KQEAgLTc4LDcgKzc4LDcgQEANCiAJcHVibGljIHZvaWQgc2V0
SWQoU3RyaW5nIGlkKTsNCiAJDQogCS8qKg0KLQkgKiBBZGRzIHRoZSBnaXZlbiBBUEkgY29tcG9u
ZW50cyB0byB0aGlzIHByb2ZpbGUuDQorCSAqIEFkZHMgdGhlIGdpdmVuIEFQSSBjb21wb25lbnRz
IHRvIHRoaXMgcHJvZmlsZSwgZXhjbHVkaW5nIGFsbCB0aGUgc291cmNlIGNvbXBvbmVudHMuDQog
CSAqIA0KIAkgKiBAcGFyYW0gY29tcG9uZW50cyBjb21wb25lbnRzIHRvIGFkZA0KIAkgKiBAcGFy
YW0gZW5hYmxlZCB3aGV0aGVyIHRoZSBjb21wb25lbnRzIHNob3VsZCBiZSBlbmFibGVkIG9yIGRp
c2FibGVkDQpJbmRleDogc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvdXRp
bC9Tb3VyY2VEZWZhdWx0SGFuZGxlci5qYXZhDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpSQ1MgZmlsZTogc3JjL29y
Zy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwvdXRpbC9Tb3VyY2VEZWZhdWx0SGFuZGxl
ci5qYXZhDQpkaWZmIC1OIHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL2ludGVybmFsL3V0
aWwvU291cmNlRGVmYXVsdEhhbmRsZXIuamF2YQ0KLS0tIC9kZXYvbnVsbAkxIEphbiAxOTcwIDAw
OjAwOjAwIC0wMDAwDQorKysgc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvaW50ZXJuYWwv
dXRpbC9Tb3VyY2VEZWZhdWx0SGFuZGxlci5qYXZhCTEgSmFuIDE5NzAgMDA6MDA6MDAgLTAwMDAN
CkBAIC0wLDAgKzEsMzggQEANCisvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKyAqIENvcHlyaWdo
dCAoYykgMjAwNyBJQk0gQ29ycG9yYXRpb24gYW5kIG90aGVycy4NCisgKiBBbGwgcmlnaHRzIHJl
c2VydmVkLiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzDQorICog
YXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMg
TGljZW5zZSB2MS4wDQorICogd2hpY2ggYWNjb21wYW5pZXMgdGhpcyBkaXN0cmlidXRpb24sIGFu
ZCBpcyBhdmFpbGFibGUgYXQNCisgKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC12
MTAuaHRtbA0KKyAqDQorICogQ29udHJpYnV0b3JzOg0KKyAqICAgICBJQk0gQ29ycG9yYXRpb24g
LSBpbml0aWFsIEFQSSBhbmQgaW1wbGVtZW50YXRpb24NCisgKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8NCisNCitwYWNrYWdlIG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMuaW50ZXJuYWwudXRpbDsN
CisNCitpbXBvcnQgb3JnLnhtbC5zYXguQXR0cmlidXRlczsNCitpbXBvcnQgb3JnLnhtbC5zYXgu
U0FYRXhjZXB0aW9uOw0KK2ltcG9ydCBvcmcueG1sLnNheC5TQVhQYXJzZUV4Y2VwdGlvbjsNCitp
bXBvcnQgb3JnLnhtbC5zYXguaGVscGVycy5EZWZhdWx0SGFuZGxlcjsNCisNCitwdWJsaWMgY2xh
c3MgU291cmNlRGVmYXVsdEhhbmRsZXIgZXh0ZW5kcyBEZWZhdWx0SGFuZGxlciB7DQorCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBPUkdfRUNMSVBTRV9QREVfQ09SRV9TT1VSQ0VfRVhURU5T
SU9OX1BPSU5UX05BTUUgPSAib3JnLmVjbGlwc2UucGRlLmNvcmUuc291cmNlIjsgLy8kTk9OLU5M
Uy0xJA0KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVhURU5TSU9OX05BTUUgPSAiZXh0
ZW5zaW9uIjsgLy8kTk9OLU5MUy0xJA0KKwlwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUNM
SVBTRV9QT0lOVF9BVFRSSUJVVEVfTkFNRSA9ICJwb2ludCI7IC8vJE5PTi1OTFMtMSQNCisJYm9v
bGVhbiBpc1NvdXJjZSA9IGZhbHNlOw0KKwlwdWJsaWMgdm9pZCBlcnJvcihTQVhQYXJzZUV4Y2Vw
dGlvbiBlKSB0aHJvd3MgU0FYRXhjZXB0aW9uIHsNCisJCWUucHJpbnRTdGFja1RyYWNlKCk7DQor
CX0NCisJcHVibGljIHZvaWQgc3RhcnRFbGVtZW50KFN0cmluZyB1cmksIFN0cmluZyBsb2NhbE5h
bWUsIFN0cmluZyBuYW1lLCBBdHRyaWJ1dGVzIGF0dHJpYnV0ZXMpDQorCQkJdGhyb3dzIFNBWEV4
Y2VwdGlvbiB7DQorCQlpZiAodGhpcy5pc1NvdXJjZSkgcmV0dXJuOw0KKwkJdGhpcy5pc1NvdXJj
ZSA9IEVYVEVOU0lPTl9OQU1FLmVxdWFscyhuYW1lKQ0KKwkJCQkmJiBhdHRyaWJ1dGVzLmdldExl
bmd0aCgpID09IDENCisJCQkJJiYgRUNMSVBTRV9QT0lOVF9BVFRSSUJVVEVfTkFNRS5lcXVhbHMo
YXR0cmlidXRlcy5nZXRMb2NhbE5hbWUoMCkpDQorCQkJCSYmIE9SR19FQ0xJUFNFX1BERV9DT1JF
X1NPVVJDRV9FWFRFTlNJT05fUE9JTlRfTkFNRS5lcXVhbHMoYXR0cmlidXRlcy5nZXRWYWx1ZSgw
KSk7DQorCX0NCisJcHVibGljIGJvb2xlYW4gaXNTb3VyY2UoKSB7DQorCQlyZXR1cm4gdGhpcy5p
c1NvdXJjZTsNCisJfQ0KK30NCiNQIG9yZy5lY2xpcHNlLnBkZS5hcGkudG9vbHMudGVzdHMNCklu
ZGV4OiBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90b29scy9tb2RlbC90ZXN0cy9BcGlEZXNjcmlw
dGlvblRlc3RzLmphdmENCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0NClJDUyBmaWxlOiAvY3Zzcm9vdC9lY2xpcHNlL3Bk
ZS1pbmN1YmF0b3IvYXBpLXRvb2xpbmcvcGx1Z2lucy9vcmcuZWNsaXBzZS5wZGUuYXBpLnRvb2xz
LnRlc3RzL3NyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL21vZGVsL3Rlc3RzL0FwaURlc2Ny
aXB0aW9uVGVzdHMuamF2YSx2DQpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNg0KZGlmZiAtdSAtcjEu
NiBBcGlEZXNjcmlwdGlvblRlc3RzLmphdmENCi0tLSBzcmMvb3JnL2VjbGlwc2UvcGRlL2FwaS90
b29scy9tb2RlbC90ZXN0cy9BcGlEZXNjcmlwdGlvblRlc3RzLmphdmEJMjkgSmFuIDIwMDggMTU6
MTM6MTkgLTAwMDAJMS42DQorKysgc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvbW9kZWwv
dGVzdHMvQXBpRGVzY3JpcHRpb25UZXN0cy5qYXZhCTMwIEphbiAyMDA4IDE2OjI4OjU5IC0wMDAw
DQpAQCAtNDc3LDYgKzQ3Nyw5IEBADQogCQkJCQlJRWxlbWVudERlc2NyaXB0b3IgZWxlbWVudCwJ
U3RyaW5nW10ga2luZHMpIHsNCiAJCQkJcmV0dXJuIG51bGw7DQogCQkJfQ0KKwkJCXB1YmxpYyBi
b29sZWFuIGlzU291cmNlQ29tcG9uZW50KCkgew0KKwkJCQlyZXR1cm4gZmFsc2U7DQorCQkJfQ0K
IAkJfSk7DQogCQlzZXR0aW5ncy5hY2NlcHQoeG1sVmlzaXRvcik7DQogCQlTdHJpbmcgd3JpdGVY
TUwgPSB4bWxWaXNpdG9yLmdldFhNTCgpOw0KSW5kZXg6IHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBp
L3Rvb2xzL21vZGVsL3Rlc3RzL0NsYXNzRmlsZVNjYW5uZXJUZXN0cy5qYXZhDQo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
DQpSQ1MgZmlsZTogL2N2c3Jvb3QvZWNsaXBzZS9wZGUtaW5jdWJhdG9yL2FwaS10b29saW5nL3Bs
dWdpbnMvb3JnLmVjbGlwc2UucGRlLmFwaS50b29scy50ZXN0cy9zcmMvb3JnL2VjbGlwc2UvcGRl
L2FwaS90b29scy9tb2RlbC90ZXN0cy9DbGFzc0ZpbGVTY2FubmVyVGVzdHMuamF2YSx2DQpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMjMNCmRpZmYgLXUgLXIxLjIzIENsYXNzRmlsZVNjYW5uZXJUZXN0
cy5qYXZhDQotLS0gc3JjL29yZy9lY2xpcHNlL3BkZS9hcGkvdG9vbHMvbW9kZWwvdGVzdHMvQ2xh
c3NGaWxlU2Nhbm5lclRlc3RzLmphdmEJMTggSmFuIDIwMDggMTg6NTY6MzggLTAwMDAJMS4yMw0K
KysrIHNyYy9vcmcvZWNsaXBzZS9wZGUvYXBpL3Rvb2xzL21vZGVsL3Rlc3RzL0NsYXNzRmlsZVNj
YW5uZXJUZXN0cy5qYXZhCTMwIEphbiAyMDA4IDE2OjI4OjU5IC0wMDAwDQpAQCAtMjA5LDYgKzIw
OSw5IEBADQogCQkJCQlJRWxlbWVudERlc2NyaXB0b3IgZWxlbWVudCwgU3RyaW5nW10ga2luZHMp
IHsNCiAJCQkJcmV0dXJuIG51bGw7DQogCQkJfQ0KKwkJCXB1YmxpYyBib29sZWFuIGlzU291cmNl
Q29tcG9uZW50KCkgew0KKwkJCQlyZXR1cm4gZmFsc2U7DQorCQkJfQ0KIAkJfTsNCiAJfQ0KIAkN
Cg==
</data>

          </attachment>
      

    </bug>

</bugzilla>